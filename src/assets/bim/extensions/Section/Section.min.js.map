{"version":3,"sources":["webpack://Autodesk.Extensions.[name]/webpack/bootstrap","webpack://Autodesk.Extensions.[name]/./node_modules/css-loader/lib/css-base.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.css?22a4","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.css","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/addStyles.js","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/urls.js","webpack://Autodesk.Extensions.[name]/./thirdparty/three.js/TransformControls.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/SectionTool.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","options","transform","undefined","locals","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","init_TransformGizmos","GizmoMaterial","parameters","THREE","MeshBasicMaterial","depthTest","depthWrite","side","FrontSide","transparent","setValues","oldColor","color","clone","oldOpacity","opacity","highlight","highlighted","setRGB","copy","GizmoLineMaterial","LineBasicMaterial","linewidth","PolyhedronGeometry","vertices","indices","radius","detail","Geometry","that","prepare","Vector3","faces","v1","v2","v3","Face3","centroid","subdivide","faceVertexUvs","uvs","x0","x","x1","x2","max","Math","min","multiplyScalar","vector","vertex","normalize","u","azimuth","PI","v","atan2","y","sqrt","z","inclination","uv","Vector2","make","face","add","divideScalar","azi","correctUV","cols","pow","a","b","aj","lerp","bj","rows","k","floor","mergeVertices","computeFaceNormals","boundingSphere","Sphere","OctahedronGeometry","TorusGeometry","tube","radialSegments","tubularSegments","arc","center","normals","cos","sin","sub","pointerVector","pointerDir","ray","createCircleGeometry","facing","geometry","createArrowGeometry","radiusTop","radiusBottom","height","heightSegments","openEnded","arrowGeometry","mesh","Mesh","CylinderGeometry","position","updateMatrix","merge","matrix","createLineGeometry","axis","lineGeometry","TransformGizmo","scope","init","Object3D","handles","pickers","planes","highlights","hemiPicker","subPickers","planeGeometry","PlaneBufferGeometry","planeMaterial","wireframe","DoubleSide","activePlane","rotation","set","visible","setupGizmos","activeMode","traverse","child","tempGeometry","BufferGeometry","fromBufferGeometry","scale","hide","show","material","addGizmos","gizmoMap","visble","setHandlePickerGizmos","handleGizmos","pickerGizmos","highlightGizmos","hemiPickerGizmos","subPickerGizmos","eye","vec1","vec2","lookAtMatrix","Matrix4","search","quaternion","setFromRotationMatrix","lookAt","setFromEuler","TransformGizmoTranslate","lineXGeometry","lineYGeometry","lineZGeometry","X","Line","Y","Z","XYZ","XY","YZ","XZ","BoxGeometry","setActivePlane","tempMatrix","applyMatrix4","getInverse","extractRotation","matrixWorld","abs","TransformGizmoRotate","RX","RY","RZ","RE","RXYZE","eye2","worldRotation","Euler","tempQuaternion","Quaternion","unitX","unitY","unitZ","quaternionX","quaternionY","quaternionZ","makeRotationFromQuaternion","setFromAxisAngle","multiplyQuaternions","TransformGizmoTranslateRotate","theta","SphereGeometry","useAllPickers","TransformGizmoScale","TransformControls","camera","domElement","gizmo","snap","snapDelta","space","size","normal","startLine","endLine","LineDashedMaterial","centerLine","ImageUtils","loadTexture","Autodesk","Viewing","Private","getResourceUrl","magFilter","minFilter","NearestFilter","CircleGeometry","centerMark","ticks","h","_dragging","_mode","changeEvent","mouseDownEvent","mouseUpEvent","objectChangeEvent","point","Raycaster","offset","offsetRotation","clientScale","tempVector","projX","projY","projZ","quaternionXYZ","quaternionE","oldPosition","oldScale","oldRotationMatrix","parentRotationMatrix","parentScale","worldPosition","worldRotationMatrix","camPosition","intersectObjects","pointer","objects","canvasX","canvasY","attach","updateUnitVectors","detach","setMode","dispatchEvent","getPicker","children","setPosition","setNormal","setFromUnitVectors","applyQuaternion","multiply","setSnap","delta","setSize","setSpace","updateMatrixWorld","setFromMatrixPosition","applyEuler","isPerspective","dist","distanceTo","tan","fov","top","bottom","rect","getBoundingClientRect","gizmoOffset","setGizmoOffset","vec","showRotationGizmos","onPointerHover","event","intersect","onPointerDown","pointerType","button","planeIntersect","setFromMatrixScale","verticesNeedUpdate","pos","getAttribute","pt1","fromAttribute","pt2","pt3","pt4","dashSize","gapSize","computeLineDistances","onPointerMove","dot","rotz","rotsnap","round","tempAxis","cross","rot","angleTo","projx","projy","projz","tempx","tempy","tempz","rotx","roty","matrixAutoUpdate","onPointerUp","clientX","clientY","recursive","clientWidth","clientHeight","unproject","transformDirection","intersections","SectionMeshClass","SectionTool","viewer","_transRotControl","_transControl","_trcOffset","_viewer","impl","_names","_active","_isDragging","_boxChanged","_isPlaneOn","_tintColor","tintColor","_tintIntensity","tintIntensity","_sectionGroups","_sectionPlanes","_sectionPicker","_activeMode","_overlayName","_touchType","_initialized","_visibleAtFirst","_outlineIndices","_selectionOpacity","_selectionColor","updateViewer","invalidate","updateControls","updateSections","updatePlaneMeshes","updateCapMeshes","Plane","setComponents","w","plane","planeVec","Vector4","constant","connectivity","outlines","constructor","getWorldPosition","init_SectionMesh","_fragIterator","_timeSlice","_sliceDelay","_callback","_models","_curModel","_instanceTree","_m","_d","_f","_capTimer","_dbIds","_fragIds","reset","models","clearTimeout","doIteration","endTime","performance","now","next","setTimeout","nextModel","getInstanceTree","enumNodeChildren","getRootId","dbId","nextDbId","isNodeHidden","isNodeOff","enumNodeFragments","fragId","start","delay","callback","cg","Extensions","CompGeom","sceneAfter","skipDepthTarget","_removeSections","section3D","scene","section2D","avp","toPlaneCoords","makePlaneBasis","fromPaneCoords","mat2dname","matman","create2DMaterial","skipCircles","skipEllipticals","isScreenSpace","mat2d","findMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","cutplanes","_otherCutPlanes","box","Box3","modelQueue","getModels","intersects","model","lastFrag","frags","getFragmentList","getWorldBounds","xBoxPlane","getVizmesh","is2d","isLines","xMeshPlane","bbox","convertToPlaneCoords","vbb","VertexBufferBuilder","Color","getDiffuseColor","g","eset","EdgeSet","snapEdges","sanitizeEdges","stitchContours","cset","triangulate","contours","cntr","pts","addSegment","mdata","toMesh","BufferGeometryUtils","meshToGeometry","bg2d","streamingDraw","streamingIndex","mesh2d","frustumCulled","modelId","triangulationFailed","bg","toPolygonMesh","packedNormals","mat","cloneMaterial","bumpMap","normalMap","alphaMap","specularMap","hatchPattern","needsUpdate","angle","hatchParams","hatchTintColor","hatchTintIntensity","prismType","defines","toUpperCase","capmesh","_ownCutPlaneSet","setCutPlaneSetFor2DRendering","createPlaneMesh","quat","ptMax","projectPoint","ptMin","invQuat","inverse","subVectors","getVisibleBounds","getBoundingSphere","pt","presetIndex","currentLightPreset","bgColor","LightPresets","bgColorGradient","lineMaterial","fromArray","array","itemSize","line","rebuild","traverseSections","minv","connect","intersectPlanes","setXYZ","computeBoundingBox","computeBoundingSphere","setSectionPlanes","fireEvent","setCutPlaneSet","showPlane","showSection","attachControl","control","checkNormal","api","navigation","getEyeVector","negate","setPlane","distance","group","Group","addOverlay","centerPlaneArrow","centerOffset","middle","boundingBox","localToWorld","getCenterPoint","n23","n31","n12","Matrix3","plane1","plane2","plane3","optionalTarget","det","determinant","crossVectors","oldsection3D","getObjectByName","oldsection2D","isActive","getSectionDistance","eyeVec","hit","rayIntersect","Ray","intersectPoint","setViewerSection","clearSection","planeSet","getCutPlaneSet","v4","setSection","connectivities","obbox","loadingBox","meshes","orthoPoint","nc","ct","cornerOffset","setBox","recomputePivot","setSectionFromPlane","cutplane","setActiveMode","pop","removeOverlay","isPlaneOn","resetSection","getNames","getName","register","deregister","removeEventListener","removeOverlayScene","CAMERA_CHANGE_EVENT","ISOLATE_EVENT","HIDE_EVENT","SHOW_EVENT","getPriority","activate","canvas","addEventListener","overlayScenes","createOverlayScene","deactivate","handleSingleClick","handleDoubleClick","handleSingleTap","handleDoubleTap","handleKeyDown","handleKeyUp","handleWheelInput","handleButtonDown","handleButtonUp","handleMouseMove","oldTransControlPos","boxOffset","handleGesture","handleBlur","handleResize","handlePressHold","values","getSectionBoxValues","aabb","sectionBox","setPivotPoint","ignoreGlobalOffset","right","front","left","bttm","back","off","getData","globalOffset","sectionBoxTransform","identity","toArray","getSectionPlaneValues","sectionPlane","getSectionPlaneSet","getSectionPlanes","viewSet","notifyCutplanesChanged","numCutPlanesBefore","cpSets","getCutPlaneSets","cpName","cp","includes","section","updateCapMaterials","setSectionBox","SceneMath","box2CutPlanes","setSectionPlane","planeVecs","SectionExtension","Extension","modes","onViewerSetView","_onCutPlanesChanged","_onShowAll","proto","load","tool","toolController","registerTool","sectionStyle","supportedStyles","SET_VIEW_EVENT","CUTPLANES_CHANGE_EVENT","SHOW_ALL_EVENT","HOTKEYS_ID","hotkeys","keycodes","KeyCode","ESCAPE","onRelease","getHotkeyManager","pushHotkeys","registerContextMenuCallback","menu","status","hasSelected","selector","getSelectionBounds","title","selected","getSelection","intersection","hitTest","onContextMenu","loadExtension","unload","unregisterContextMenuCallback","popHotkeys","destroyUI","deregisterTool","toggle","enableSectionTool","setSectionStyle","getSectionStyle","preserveSection","bActive","bNewStyle","prevLock","setIsLocked","enable","activateTool","sectionToolButton","setState","UI","Button","State","ACTIVE","deactivateTool","INACTIVE","getViewValues","boxValues","planeValues","getState","viewerState","restoreState","immediate","activeStatus","clearSelection","onToolbarCreated","toolbar","AVU","ComboButton","setToolTip","setIcon","createSubmenu","modelTools","getControl","TOOLBAR","MODELTOOLSID","resetTool","addControl","getId","parentButton","createNavToggler","state","isMobileDevice","sectionXButton","onClick","sectionYButton","sectionZButton","sectionBoxButton","GEOMETRY_LOADED_EVENT","updateSectionButtons","areVectorsEqual","sqtol","lengthSq","unitx","unity","unitz","autocam","getWorldRightVector","up","getWorldUpVector","getWorldFrontVector","removeFromParent","theExtensionManager","registerExtension"],"mappings":"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","file":"Section/Section.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 562);\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./Section.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./Section.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./Section.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sectionPanel{line-height:14px;text-align:left;z-index:10}.section-horizontal-divider{height:1px;border-top:1px solid rgba(200,200,200,0.8)}.section-submenu-select{display:block;position:relative;width:calc(100% - 40px);padding:10px 20px 0px 20px;opacity:0.3}.section-panel:hover .section-submenu-select{opacity:0.8}.section-submenu-selectlabel{position:relative;display:inline-block;padding-right:20px;padding-bottom:4px}.section-restart{margin:10px 20px 15px 20px;padding:6px 10px 6px 10px;width:calc(100% - 55px);cursor:pointer}.docking-panel:hover .section-restart{background-color:rgba(255,255,255,0.12)}.docking-panel .section-restart:hover{background-color:rgba(166,194,255,0.7);-webkit-transition:all 0.2s ease;-moz-transition:all 0.2s ease;-ms-transition:all 0.2s ease;-o-transition:all 0.2s ease;transition:all 0.2s ease}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * @author arodic / https://github.com/arodic\n *\n * @author chiena -- Modified for Autodesk LMV web viewer\n */\n /*jshint sub:true*/\n\nexport function init_TransformGizmos() {\n\n    'use strict';\n\n    var GizmoMaterial = function ( parameters ) {\n\n        THREE.MeshBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.side = THREE.FrontSide;\n        this.transparent = true;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 230/255, 3/255 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\n\n    var GizmoLineMaterial = function ( parameters ) {\n\n        THREE.LineBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.transparent = true;\n        this.linewidth = 1;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 230/255, 3/255 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\n\n    // polyfill\n    if (THREE.PolyhedronGeometry === undefined) {\n        THREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n            THREE.Geometry.call( this );\n\n            this.type = 'PolyhedronGeometry';\n\n            this.parameters = {\n                vertices: vertices,\n                indices: indices,\n                radius: radius,\n                detail: detail\n            };\n\n            radius = radius || 1;\n            detail = detail || 0;\n\n            var that = this;\n\n            for ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n                prepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n            }\n\n            var midpoints = [], p = this.vertices;\n\n            var faces = [];\n\n            for ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n                var v1 = p[ indices[ i     ] ];\n                var v2 = p[ indices[ i + 1 ] ];\n                var v3 = p[ indices[ i + 2 ] ];\n\n                faces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n            }\n\n            var centroid = new THREE.Vector3();\n\n            for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n                subdivide( faces[ i ], detail );\n\n            }\n\n\n            // Handle case when face straddles the seam\n\n            for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n                var uvs = this.faceVertexUvs[ 0 ][ i ];\n\n                var x0 = uvs[ 0 ].x;\n                var x1 = uvs[ 1 ].x;\n                var x2 = uvs[ 2 ].x;\n\n                var max = Math.max( x0, Math.max( x1, x2 ) );\n                var min = Math.min( x0, Math.min( x1, x2 ) );\n\n                if ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\n\n                    if ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n                    if ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n                    if ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n                }\n\n            }\n\n\n            // Apply radius\n\n            for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n                this.vertices[ i ].multiplyScalar( radius );\n\n            }\n\n\n            // Merge vertices\n\n            this.mergeVertices();\n\n            this.computeFaceNormals();\n\n            this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n            // Project vector onto sphere's surface\n\n            function prepare( vector ) {\n\n                var vertex = vector.normalize().clone();\n                vertex.index = that.vertices.push( vertex ) - 1;\n\n                // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n                var u = azimuth( vector ) / 2 / Math.PI + 0.5;\n                var v = inclination( vector ) / Math.PI + 0.5;\n                vertex.uv = new THREE.Vector2( u, 1 - v );\n\n                return vertex;\n\n            }\n\n\n            // Approximate a curved face with recursively sub-divided triangles.\n\n            function make( v1, v2, v3 ) {\n\n                var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n                that.faces.push( face );\n\n                centroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n                var azi = azimuth( centroid );\n\n                that.faceVertexUvs[ 0 ].push( [\n                    correctUV( v1.uv, v1, azi ),\n                    correctUV( v2.uv, v2, azi ),\n                    correctUV( v3.uv, v3, azi )\n                ] );\n\n            }\n\n\n            // Analytically subdivide a face to the required detail level.\n\n            function subdivide( face, detail ) {\n\n                var cols = Math.pow(2, detail);\n                var cells = Math.pow(4, detail);\n                var a = prepare( that.vertices[ face.a ] );\n                var b = prepare( that.vertices[ face.b ] );\n                var c = prepare( that.vertices[ face.c ] );\n                var v = [];\n\n                // Construct all of the vertices for this subdivision.\n\n                for ( var i = 0 ; i <= cols; i ++ ) {\n\n                    v[ i ] = [];\n\n                    var aj = prepare( a.clone().lerp( c, i / cols ) );\n                    var bj = prepare( b.clone().lerp( c, i / cols ) );\n                    var rows = cols - i;\n\n                    for ( var j = 0; j <= rows; j ++) {\n\n                        if ( j == 0 && i == cols ) {\n\n                            v[ i ][ j ] = aj;\n\n                        } else {\n\n                            v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n                        }\n\n                    }\n\n                }\n\n                // Construct all of the faces.\n\n                for ( var i = 0; i < cols ; i ++ ) {\n\n                    for ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\n\n                        var k = Math.floor( j / 2 );\n\n                        if ( j % 2 == 0 ) {\n\n                            make(\n                                v[ i ][ k + 1],\n                                v[ i + 1 ][ k ],\n                                v[ i ][ k ]\n                            );\n\n                        } else {\n\n                            make(\n                                v[ i ][ k + 1 ],\n                                v[ i + 1][ k + 1],\n                                v[ i + 1 ][ k ]\n                            );\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n\n            // Angle around the Y axis, counter-clockwise when looking from above.\n\n            function azimuth( vector ) {\n\n                return Math.atan2( vector.z, - vector.x );\n\n            }\n\n\n            // Angle above the XZ plane.\n\n            function inclination( vector ) {\n\n                return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n            }\n\n\n            // Texture fixing helper. Spheres have some odd behaviours.\n\n            function correctUV( uv, vector, azimuth ) {\n\n                if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n                if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n                return uv.clone();\n\n            }\n\n        };\n\n        THREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    // polyfill\n    if (THREE.OctahedronGeometry === undefined) {\n        THREE.OctahedronGeometry = function ( radius, detail ) {\n\n            this.parameters = {\n                radius: radius,\n                detail: detail\n            };\n\n            var vertices = [\n                1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\n            ];\n\n            var indices = [\n                0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n            ];\n\n            THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n            this.type = 'OctahedronGeometry';\n\n            this.parameters = {\n                radius: radius,\n                detail: detail\n            };\n        };\n\n        THREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    // polyfill\n    if (THREE.TorusGeometry === undefined) {\n        THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n            THREE.Geometry.call( this );\n\n            this.type = 'TorusGeometry';\n\n            this.parameters = {\n                radius: radius,\n                tube: tube,\n                radialSegments: radialSegments,\n                tubularSegments: tubularSegments,\n                arc: arc\n            };\n\n            radius = radius || 100;\n            tube = tube || 40;\n            radialSegments = radialSegments || 8;\n            tubularSegments = tubularSegments || 6;\n            arc = arc || Math.PI * 2;\n\n            var center = new THREE.Vector3(), uvs = [], normals = [];\n\n            for ( var j = 0; j <= radialSegments; j ++ ) {\n\n                for ( var i = 0; i <= tubularSegments; i ++ ) {\n\n                    var u = i / tubularSegments * arc;\n                    var v = j / radialSegments * Math.PI * 2;\n\n                    center.x = radius * Math.cos( u );\n                    center.y = radius * Math.sin( u );\n\n                    var vertex = new THREE.Vector3();\n                    vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n                    vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n                    vertex.z = tube * Math.sin( v );\n\n                    this.vertices.push( vertex );\n\n                    uvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\n                    normals.push( vertex.clone().sub( center ).normalize() );\n\n                }\n\n            }\n\n            for ( var j = 1; j <= radialSegments; j ++ ) {\n\n                for ( var i = 1; i <= tubularSegments; i ++ ) {\n\n                    var a = ( tubularSegments + 1 ) * j + i - 1;\n                    var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n                    var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n                    var d = ( tubularSegments + 1 ) * j + i;\n\n                    var face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\n                    this.faces.push( face );\n                    this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\n\n                    face = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\n                    this.faces.push( face );\n                    this.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\n\n                }\n\n            }\n\n            this.computeFaceNormals();\n\n        };\n\n        THREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    var createCircleGeometry = function ( radius, facing, arc ) {\n\n        var geometry = new THREE.Geometry();\n        arc = arc ? arc : 1;\n        for ( var i = 0; i <= 64 * arc; ++i ) {\n            if ( facing == 'x' ) geometry.vertices.push( new THREE.Vector3( 0, Math.cos( i / 32 * Math.PI ), Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'y' ) geometry.vertices.push( new THREE.Vector3( Math.cos( i / 32 * Math.PI ), 0, Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'z' ) geometry.vertices.push( new THREE.Vector3( Math.sin( i / 32 * Math.PI ), Math.cos( i / 32 * Math.PI ), 0 ).multiplyScalar(radius) );\n        }\n\n        return geometry;\n    };\n\n    var createArrowGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh( new THREE.CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) );\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge( mesh.geometry, mesh.matrix );\n\n        return arrowGeometry;\n    };\n\n    var createLineGeometry = function ( axis ) {\n\n        var lineGeometry = new THREE.Geometry();\n        if ( axis === 'X') \n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 1, 0, 0 ) );\n        else if ( axis === 'Y' ) \n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n        else if ( axis === 'Z' )\n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, 1 ) );\n\n        return lineGeometry;\n    };\n\n    THREE.TransformGizmo = function () {\n\n        var scope = this;\n        var showPickers = false; //debug\n        var showActivePlane = false; //debug\n\n        this.init = function () {\n\n            THREE.Object3D.call( this );\n\n            this.handles = new THREE.Object3D();\n            this.pickers = new THREE.Object3D();\n            this.planes = new THREE.Object3D();\n            this.highlights = new THREE.Object3D();\n            this.hemiPicker = new THREE.Object3D();\n            this.subPickers = new THREE.Object3D();\n\n            this.add(this.handles);\n            this.add(this.pickers);\n            this.add(this.planes);\n            this.add(this.highlights);\n            this.add(this.hemiPicker);\n            this.add(this.subPickers);\n\n            //// PLANES\n\n            var planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n            var planeMaterial = new THREE.MeshBasicMaterial( { wireframe: true } );\n            planeMaterial.side = THREE.DoubleSide;\n\n            var planes = {\n                \"XY\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"YZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n            };\n\n            this.activePlane = planes[\"XYZE\"];\n\n            planes[\"YZ\"].rotation.set( 0, Math.PI/2, 0 );\n            planes[\"XZ\"].rotation.set( -Math.PI/2, 0, 0 );\n\n            for (var i in planes) {\n                planes[i].name = i;\n                this.planes.add(planes[i]);\n                this.planes[i] = planes[i];\n                planes[i].visible = false;\n            }\n\n            this.setupGizmos();\n            this.activeMode = \"\";\n\n            // reset Transformations\n\n            this.traverse(function ( child ) {\n                if (child instanceof THREE.Mesh) {\n                    child.updateMatrix();\n\n                    var tempGeometry = new THREE.Geometry();\n                    if (child.geometry instanceof THREE.BufferGeometry) {\n                        child.geometry = new THREE.Geometry().fromBufferGeometry( child.geometry );\n                    }\n                    tempGeometry.merge( child.geometry, child.matrix );\n\n                    child.geometry = tempGeometry;\n                    child.position.set( 0, 0, 0 );\n                    child.rotation.set( 0, 0, 0 );\n                    child.scale.set( 1, 1, 1 );\n                }\n            });\n\n        };\n\n        this.hide = function () {\n            this.traverse(function( child ) {\n                child.visible = false;\n            });\n        };\n\n        this.show = function () {\n            this.traverse(function( child ) {\n                child.visible = true;\n                if (child.parent == scope.pickers || child.parent == scope.hemiPicker ) child.visible = showPickers;\n                if (child.parent == scope.planes ) child.visible = false;\n            });\n            this.activePlane.visible = showActivePlane;\n        };\n\n        this.highlight = function ( axis ) {\n            this.traverse(function( child ) {\n                if ( child.material && child.material.highlight ) {\n                    if ( child.name == axis ) {\n                        child.material.highlight( true );\n                    } else {\n                        child.material.highlight( false );\n                    }\n                }\n            });\n        };\n\n        this.setupGizmos = function () {\n\n            var addGizmos = function( gizmoMap, parent ) {\n\n                for ( var name in gizmoMap ) {\n\n                    for ( var i = gizmoMap[name].length; i--;) {\n\n                        var object = gizmoMap[name][i][0];\n                        var position = gizmoMap[name][i][1];\n                        var rotation = gizmoMap[name][i][2];\n                        var visble = gizmoMap[name][i][3];\n\n                        object.name = name;\n\n                        if ( position ) object.position.set( position[0], position[1], position[2] );\n                        if ( rotation ) object.rotation.set( rotation[0], rotation[1], rotation[2] );\n                        if ( visble ) object.visble = visble;\n\n                        parent.add( object );\n\n                    }\n\n                }\n\n            };\n\n            this.setHandlePickerGizmos();\n\n            addGizmos(this.handleGizmos, this.handles);\n            addGizmos(this.pickerGizmos, this.pickers);\n            addGizmos(this.highlightGizmos, this.highlights);\n            addGizmos(this.hemiPickerGizmos, this.hemiPicker);\n            addGizmos(this.subPickerGizmos, this.subPickers);\n\n            this.hide();\n            this.show();\n\n        };\n\n    };\n\n    THREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\n\n    THREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\n\n        var vec1 = new THREE.Vector3( 0, 0, 0 );\n        var vec2 = new THREE.Vector3( 0, 1, 0 );\n        var lookAtMatrix = new THREE.Matrix4();\n\n        this.traverse(function(child) {\n            if ( child.name ) {\n                if ( child.name.search(\"E\") != -1 ) {\n                    child.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n                } else if ( child.name.search(\"X\") != -1 || child.name.search(\"Y\") != -1 || child.name.search(\"Z\") != -1 ) {\n                    child.quaternion.setFromEuler( rotation );\n                }\n            }\n        });\n\n    };\n\n    THREE.TransformGizmoTranslate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n            var lineXGeometry = createLineGeometry( 'X' );\n            var lineYGeometry = createLineGeometry( 'Y' );\n            var lineZGeometry = createLineGeometry( 'Z' );\n\n            this.handleGizmos = {\n                X: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xf12c2c } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                    [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xf12c2c } ) ) ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0bb80b } ) ), [ 0, 0.5, 0 ] ],\n                    [   new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x0bb80b } ) ) ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x2c2cf1 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x2c2cf1 } ) ) ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n                ],\n                XY: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n                ],\n                YZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI/2, 0 ] ]\n                ],\n                XZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ -Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                X: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ],\n                XY: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.2, 0.2, 0 ] ]\n                ],\n                YZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.2, 0.2 ], [ 0, Math.PI/2, 0 ] ]\n                ],\n                XZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.2, 0, 0.2 ], [ -Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.hemiPickerGizmos = {\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 1.2, 1.2, 1.2 ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0.5, 0.5, 0.5 ], null, false ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis == \"X\" ) {\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n            }\n\n            if ( axis == \"Y\" ){\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"Z\" ){\n                this.activePlane = this.planes[ \"XZ\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis == \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            if ( axis == \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis == \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoRotate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            this.handleGizmos = {\n                RX: [\n                    [ new THREE.Line( createCircleGeometry(1,'x',0.5), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                ],\n                RY: [\n                    [ new THREE.Line( createCircleGeometry(1,'y',0.5), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                ],\n                RZ: [\n                    [ new THREE.Line( createCircleGeometry(1,'z',0.5), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                ],\n                RE: [\n                    [ new THREE.Line( createCircleGeometry(1.25,'z',1), new GizmoLineMaterial( { color: 0x00ffff } ) ) ]\n                ],\n                RXYZE: [\n                    [ new THREE.Line( createCircleGeometry(1,'z',1), new GizmoLineMaterial( { color: 0xff00ff } ) ) ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RZ: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                RE: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1.25, 0.12, 2, 24 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ) ]\n                ],\n                RXYZE: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 2, 24 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis ) {\n\n            if ( axis == \"RE\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n            if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.update = function ( rotation, eye2 ) {\n\n            THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n            var tempMatrix = new THREE.Matrix4();\n            var worldRotation = new THREE.Euler( 0, 0, 1 );\n            var tempQuaternion = new THREE.Quaternion();\n            var unitX = new THREE.Vector3( 1, 0, 0 );\n            var unitY = new THREE.Vector3( 0, 1, 0 );\n            var unitZ = new THREE.Vector3( 0, 0, 1 );\n            var quaternionX = new THREE.Quaternion();\n            var quaternionY = new THREE.Quaternion();\n            var quaternionZ = new THREE.Quaternion();\n            var eye = eye2.clone();\n\n            worldRotation.copy( this.planes[\"XY\"].rotation );\n            tempQuaternion.setFromEuler( worldRotation );\n\n            tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n            eye.applyMatrix4( tempMatrix );\n\n            this.traverse(function(child) {\n\n                tempQuaternion.setFromEuler( worldRotation );\n\n                if ( child.name == \"RX\" ) {\n                    quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n                if ( child.name == \"RY\" ) {\n                    quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n                if ( child.name == \"RZ\" ) {\n                    quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n            });\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoTranslateRotate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        var scope = this;\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n            var lineGeometry = new THREE.Geometry();\n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, -0.1 ), new THREE.Vector3( 0, 0, 0.1 ), new THREE.Vector3( -0.1, 0, 0 ), new THREE.Vector3( 0.1, 0, 0 ) );\n            var theta = 0.15;\n\n            this.handleGizmos = {\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.25 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.015, 0.015, 0.6, 4, 1, false ), new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.5 ],[ Math.PI/2, 0, 0 ] ]\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.015, 60, 1, false ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 1 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.01, 60, 1, false ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 1 ] ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ]\n                ]\n            };\n\n            this.subPickerGizmos = {\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.highlightGizmos = {\n                Z: [\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 1 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ], false ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 1 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ], false ]\n                ]\n            };\n\n            this.hemiPickerGizmos = {\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.SphereGeometry( 1.2, 8, 8, 0, Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), null, null, false ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            if ( this.activeMode == \"translate\" ) {\n\n                var tempMatrix = new THREE.Matrix4();\n                eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n                if ( axis == \"X\" ) {\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n                }\n\n                if ( axis == \"Y\" ){\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"Z\" ){\n                    this.activePlane = this.planes[ \"XZ\" ];\n                    if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n            } else if ( this.activeMode == \"rotate\" ){\n\n                if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n                if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n                if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            }\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.update = function ( rotation, eye2 ) {\n\n            if ( this.activeMode == \"translate\" ) {\n\n                THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n            } else if ( this.activeMode == \"rotate\" ) {\n\n                THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n                var tempMatrix = new THREE.Matrix4();\n                var worldRotation = new THREE.Euler( 0, 0, 1 );\n                var tempQuaternion = new THREE.Quaternion();\n                var unitX = new THREE.Vector3( 1, 0, 0 );\n                var unitY = new THREE.Vector3( 0, 1, 0 );\n                var unitZ = new THREE.Vector3( 0, 0, 1 );\n                var quaternionX = new THREE.Quaternion();\n                var quaternionY = new THREE.Quaternion();\n                var quaternionZ = new THREE.Quaternion();\n                var eye = eye2.clone();\n\n                worldRotation.copy( this.planes[\"XY\"].rotation );\n                tempQuaternion.setFromEuler( worldRotation );\n\n                tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n                eye.applyMatrix4( tempMatrix );\n\n                this.traverse(function(child) {\n\n                    tempQuaternion.setFromEuler( worldRotation );\n\n                    if ( child.name == \"RX\" ) {\n                        quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RY\" ) {\n                        quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RZ\" ) {\n                        quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                });\n\n            }\n\n        };\n\n        this.show = function () {\n            this.traverse(function( child ) {\n                if ( scope.parent == null || (scope.parent.useAllPickers || child.parent != scope.handles) ) child.visible = true;\n                if ( child.material ) child.material.opacity = child.material.oldOpacity;\n                if ( child.parent == scope.pickers || child.parent == scope.hemiPicker || child.parent == scope.subPickers) child.visible = false;\n                if ( child.parent == scope.planes || child.parent == scope.highlights ) child.visible = false;\n            });\n            this.activePlane.visible = false;\n        };\n\n        this.highlight = function ( axis ) {\n            this.traverse(function( child ) {\n                if ( child.material && child.material.highlight ) {\n                    if ( child.name == axis ) {\n                        if ( child.parent == scope.highlights || child.parent == scope.handles ) child.visible = true;\n                        child.material.highlight( true );\n                    } else {\n                        child.material.highlight( false );\n                        child.material.opacity = 0.1;\n                    }\n                }\n            });\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoTranslateRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoScale = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0.125, 0.125, 0.125 );\n            var lineXGeometry = createLineGeometry( 'X' );\n            var lineYGeometry = createLineGeometry( 'Y' );\n            var lineZGeometry = createLineGeometry( 'Z' );\n\n            this.handleGizmos = {\n                X: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                    [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n                    [ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                X: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 0.4, 0.4, 0.4 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis == \"X\" ) {\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n            }\n\n            if ( axis == \"Y\" ){\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"Z\" ){\n                this.activePlane = this.planes[ \"XZ\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformControls = function ( camera, domElement, mode ) {\n\n        // TODO: Make non-uniform scale and rotate play nice in hierarchies\n        // TODO: ADD RXYZ contol\n\n        THREE.Object3D.call( this );\n\n        domElement = ( domElement !== undefined ) ? domElement : document;\n\n        this.gizmo = {};\n        switch ( mode ) {\n            case \"translate\":\n                this.gizmo[mode] = new THREE.TransformGizmoTranslate();\n                break;\n            case \"rotate\":           \n               this.gizmo[mode] = new THREE.TransformGizmoRotate();\n               break;\n            case \"transrotate\":\n                this.gizmo[mode] = new THREE.TransformGizmoTranslateRotate();\n                break;\n            case \"scale\":\n                this.gizmo[mode] = new THREE.TransformGizmoScale();\n                break;\n        }\n\n        this.add(this.gizmo[mode]);\n        this.gizmo[mode].hide();\n\n        this.object = undefined;\n        this.snap = null;\n        this.snapDelta = 0;\n        this.space = \"world\";\n        this.size = 1;\n        this.axis = null;\n        this.useAllPickers = true;\n\n        this.unitX = new THREE.Vector3( 1, 0, 0 );\n        this.unitY = new THREE.Vector3( 0, 1, 0 );\n        this.unitZ = new THREE.Vector3( 0, 0, 1 );\n        this.normal = new THREE.Vector3(0, 0, 1);\n\n        if ( mode === \"transrotate\" ) {\n            var geometry = new THREE.Geometry();\n            geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n            var material = new THREE.LineBasicMaterial( {color: 0x000000, linewidth:2, depthTest: false} );\n            this.startLine = new THREE.Line( geometry, material );\n            var geometry = new THREE.Geometry();\n            var material = new THREE.LineBasicMaterial( {color: 0xffe603, linewidth:2, depthTest: false} );\n            geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n            this.endLine = new THREE.Line( geometry, material );\n            var geometry = new THREE.Geometry();\n            var material = new THREE.LineDashedMaterial({color: 0x000000, linewidth:1, depthTest: false});\n            geometry.vertices.push( new THREE.Vector3(0, -1, 0), new THREE.Vector3(0, 1, 0) );\n            this.centerLine = new THREE.Line( geometry, material );\n\n            var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/centerMarker_X.png\"));\n            map.magFilter = map.minFilter = THREE.NearestFilter;\n            var geometry = new THREE.CircleGeometry( 0.1, 32 );\n            var material = new THREE.MeshBasicMaterial({opacity: 1, side: THREE.DoubleSide, transparent:true, map:map});\n            this.centerMark = new THREE.Mesh( geometry, material );\n            this.centerMark.rotation.set(Math.PI/2, 0, 0);\n\n            this.ticks = {};\n            var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/cardinalPoint.png\"));\n            map.magFilter = map.minFilter = THREE.NearestFilter;\n            var material = new THREE.MeshBasicMaterial({depthTest: false, opacity: 1, transparent:true, side: THREE.DoubleSide, map:map});\n            var w = 0.12, h = 0.25, d = 1.15;\n\n            this.ticks[\"RX\"] = new THREE.Object3D();\n            var geometry = new THREE.PlaneBufferGeometry(w, h);\n            var mesh = new THREE.Mesh(geometry, material);\n            mesh.position.set(0, 0, -d-h/2);\n            mesh.rotation.set(Math.PI/2, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, d+h/2, 0);\n            mesh.rotation.set(0, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, d+h/2);\n            mesh.rotation.set(0, Math.PI/2, Math.PI/2);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, -d-h/2, 0);\n            mesh.rotation.set(0, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            this.ticks[\"RY\"] = new THREE.Object3D();\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, -d-h/2);\n            mesh.rotation.set(Math.PI/2, 0, 0);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(-d-h/2, 0, 0);\n            mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, d+h/2);\n            mesh.rotation.set(Math.PI/2, 0, 0);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(d+h/2, 0, 0);\n            mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n            this.ticks[\"RY\"].add(mesh);\n        }\n\n        var scope = this;\n\n        var _dragging = false;\n        var _mode = mode;\n        var _plane = \"XY\";\n\n        var changeEvent = { type: \"change\" };\n        var mouseDownEvent = { type: \"mouseDown\" };\n        var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n        var objectChangeEvent = { type: \"objectChange\" };\n\n        var ray = new THREE.Raycaster();\n        var pointerVector = new THREE.Vector3();\n        var pointerDir = new THREE.Vector3();\n\n        var point = new THREE.Vector3();\n        var offset = new THREE.Vector3();\n\n        var rotation = new THREE.Vector3();\n        var offsetRotation = new THREE.Vector3();\n        var scale = 1;\n        this.clientScale = 1;\n\n        var lookAtMatrix = new THREE.Matrix4();\n        var eye = new THREE.Vector3();\n\n        var tempMatrix = new THREE.Matrix4();\n        var tempVector = new THREE.Vector3();\n        var tempQuaternion = new THREE.Quaternion();\n        var projX = new THREE.Vector3();\n        var projY = new THREE.Vector3();\n        var projZ = new THREE.Vector3();\n\n        var quaternionXYZ = new THREE.Quaternion();\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var quaternionE = new THREE.Quaternion();\n\n        var oldPosition = new THREE.Vector3();\n        var oldScale = new THREE.Vector3();\n        var oldRotationMatrix = new THREE.Matrix4();\n\n        var parentRotationMatrix  = new THREE.Matrix4();\n        var parentScale = new THREE.Vector3();\n\n        var worldPosition = new THREE.Vector3();\n        var worldRotation = new THREE.Euler();\n        var worldRotationMatrix  = new THREE.Matrix4();\n        var camPosition = new THREE.Vector3();\n        var camRotation = new THREE.Euler();\n\n        this.attach = function ( object ) {\n\n            scope.object = object;\n\n            this.gizmo[_mode].show();\n\n            scope.update();\n\n            scope.updateUnitVectors();\n\n        };\n\n        this.detach = function ( object ) {\n\n            scope.object = undefined;\n            this.axis = null;\n\n            this.gizmo[_mode].hide();\n\n        };\n\n        this.setMode = function ( mode ) {\n\n            _mode = mode ? mode : _mode;\n\n            if ( _mode == \"scale\" ) scope.space = \"local\";\n\n            this.gizmo[_mode].show();\n\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.getPicker = function () {\n\n            return scope.gizmo[_mode].hemiPicker.children;\n\n        };\n\n        this.setPosition = function ( position ) {\n\n            this.object.position.copy ( position );\n            this.update();\n        \n        };\n\n        this.setNormal = function ( normal ) {\n\n            tempQuaternion.setFromUnitVectors( this.normal, normal );\n            this.unitX.applyQuaternion( tempQuaternion );\n            this.unitY.applyQuaternion( tempQuaternion );\n            this.unitZ.applyQuaternion( tempQuaternion );\n            this.normal.copy( normal );\n            if (this.object) {\n                this.object.quaternion.multiply ( tempQuaternion );\n            }\n            this.update();\n        };\n\n        this.setSnap = function ( snap, delta ) {\n\n            scope.snap = snap;\n            scope.snapDelta = delta;\n\n        };\n\n        this.setSize = function ( size ) {\n\n            scope.size = size;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.setSpace = function ( space ) {\n\n            scope.space = space;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.update = function (highlight) {\n\n            if ( scope.object === undefined ) return;\n\n            scope.object.updateMatrixWorld();\n            worldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n            worldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n            camera.updateMatrixWorld();\n            camPosition.setFromMatrixPosition( camera.matrixWorld );\n            //camRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n            this.position.copy( worldPosition );\n\n            this.quaternion.setFromEuler( worldRotation );\n\n            this.normal.set( 0, 0, 1 );\n            this.normal.applyEuler( worldRotation );\n\n            // keep same screen height (100px)\n            var height;\n            if ( camera.isPerspective ) {\n                var dist = worldPosition.distanceTo( camPosition );\n                height = 2 * Math.tan( camera.fov * Math.PI / 360 ) * dist;\n            } else {\n                // orthographic, so the world height is simply top minus bottom\n                height = camera.top - camera.bottom;\n            }\n            var rect = domElement.getBoundingClientRect();\n            // multiply 100 pixels by world height for the window, divide by window height in pixels,\n            // to get world height equivalent to 100 pixels.\n            scale = this.clientScale * 100 * height / rect.height;\n            this.scale.set( scale, scale, scale );\n\n            // Set the gizmo position with the specified offset.\n            if(this.gizmoOffset) {\n                this.position.add(this.gizmoOffset);\n            }\n            this.updateMatrixWorld();\n            //eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n            //if ( scope.space == \"local\" )\n            //    this.gizmo[_mode].update( worldRotation, eye );\n            //else if ( scope.space == \"world\" )\n            //    this.gizmo[_mode].update( new THREE.Euler(), eye );\n\n            if (highlight)\n                this.gizmo[_mode].highlight( scope.axis );\n\n        };\n\n        this.setGizmoOffset = function(vec) {\n            // Reset the gizmo if no vector passed in.\n            this.gizmoOffset = !vec ? new THREE.Vector3(0,0,0) : vec;\n            this.update();\n        }\n\n        this.updateUnitVectors = function () {\n\n            this.unitX.set( 1, 0, 0 );\n            this.unitY.set( 0, 1, 0 );\n            this.unitZ.set( 0, 0, 1 );\n            this.unitX.applyEuler( worldRotation );\n            this.unitY.applyEuler( worldRotation );\n            this.unitZ.applyEuler( worldRotation );\n\n        };\n\n        this.showRotationGizmos = function (set) {\n\n            var handles = this.gizmo[_mode].handles.children;\n            for ( var i = 0; i < handles.length; i++ ) {\n                var child = handles[i];\n                child.visible = true;\n                if ( child.name.search(\"R\") !== -1 ) child.visible = set;\n            }\n            this.useAllPickers = set;\n            \n        };\n\n        this.highlight = function () {\n\n            this.gizmo[_mode].highlight( this.axis || \"Z\" );\n\n        };\n\n        this.onPointerHover = function( event ) {\n\n            if ( scope.object === undefined || _dragging === true ) return false;\n\n            var pointer = event;\n\n            var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n            var axis = null;\n            var mode = \"\";\n\n            if ( intersect ) {\n\n                axis = intersect.object.name;\n                mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n            }\n\n            if ( scope.axis !== axis ) {\n\n                scope.axis = axis;\n                scope.gizmo[_mode].activeMode = mode;\n                scope.update(true);\n                scope.dispatchEvent( changeEvent );\n\n            } \n\n            if (scope.axis === null) {\n\n                scope.gizmo[_mode].show();\n            \n            }\n\n            return intersect? true : false;\n\n        }\n\n        this.onPointerDown = function( event ) {\n\n            if ( scope.object === undefined || _dragging === true ) return false;\n            \n            var pointer = event;\n\n            if ( event.pointerType === 'touch' ) {\n\n                var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                var axis = null;\n                var mode = \"\";\n\n                if ( intersect ) {\n\n                    axis = intersect.object.name;\n                    mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n                }\n\n                if ( scope.axis !== axis ) {\n\n                    scope.axis = axis;\n                    scope.gizmo[_mode].activeMode = mode;\n                }\n            }\n\n            var intersect = null;\n\n            if ( pointer.button === 0 || pointer.button === -1 || pointer.button === undefined ) {\n\n                intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                if ( intersect ) {\n\n                    scope.dispatchEvent( mouseDownEvent );\n\n                    scope.axis = intersect.object.name;\n\n                    scope.update();\n\n                    eye.copy( camera.position ).sub( worldPosition ).normalize();\n\n                    scope.gizmo[_mode].setActivePlane( scope.axis, eye );\n\n                    var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n                    if ( planeIntersect )\n                        offset.copy( planeIntersect.point );\n\n                    oldPosition.copy( scope.object.position );\n                    oldScale.copy( scope.object.scale );\n\n                    oldRotationMatrix.extractRotation( scope.object.matrix );\n                    worldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n                    if ( scope.object.parent ) {\n                        parentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n                        parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\n                    } else {\n                        parentRotationMatrix.extractRotation( scope.object.matrixWorld );\n                        parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.matrixWorld ) );\n                    }\n\n                    // show rotation start line and ticks\n                    if ( _mode === \"transrotate\" && scope.gizmo[_mode].activeMode === \"rotate\" ) {\n                        scope.startLine.geometry.vertices[0].set(0, 0, 0).applyMatrix4( scope.matrixWorld );\n                        scope.startLine.geometry.vertices[1].set(0, 0, 1).applyMatrix4( scope.matrixWorld );\n                        scope.startLine.geometry.verticesNeedUpdate = true;\n                        scope.parent.add( scope.startLine );\n\n                        var pos = scope.object.geometry.getAttribute('position');\n                        var pt1 = new THREE.Vector3().fromAttribute(pos, 0).applyMatrix4( scope.object.matrixWorld );\n                        var pt2 = new THREE.Vector3().fromAttribute(pos, 1).applyMatrix4( scope.object.matrixWorld );\n                        var pt3 = new THREE.Vector3().fromAttribute(pos, 2).applyMatrix4( scope.object.matrixWorld );\n                        var pt4 = new THREE.Vector3().fromAttribute(pos, 3).applyMatrix4( scope.object.matrixWorld );\n                        if (scope.axis === \"RX\") {\n                            pt1.lerp(pt3, 0.5);\n                            pt2.lerp(pt4, 0.5);\n                            var dist = pt1.distanceTo(pt2);\n                            scope.centerLine.material.dashSize = dist / 15;\n                            scope.centerLine.material.gapSize = dist / 30;\n                            scope.centerLine.geometry.vertices[0].copy(pt1);\n                            scope.centerLine.geometry.vertices[1].copy(pt2);\n                        } else {\n                            pt1.lerp(pt2, 0.5);\n                            pt3.lerp(pt4, 0.5);\n                            var dist = pt1.distanceTo(pt3);\n                            scope.centerLine.material.dashSize = dist / 15;\n                            scope.centerLine.material.gapSize = dist / 30;\n                            scope.centerLine.geometry.vertices[0].copy(pt1);\n                            scope.centerLine.geometry.vertices[1].copy(pt3);\n                        }\n                        scope.centerLine.geometry.computeLineDistances();\n                        scope.centerLine.geometry.verticesNeedUpdate = true;\n                        scope.parent.add( scope.centerLine );\n\n                        scope.ticks[scope.axis].position.copy( scope.position );\n                        scope.ticks[scope.axis].quaternion.copy( scope.quaternion );\n                        scope.ticks[scope.axis].scale.copy( scope.scale );\n                        scope.parent.add( scope.ticks[scope.axis] );\n                    }\n\n                }\n\n            }\n\n            _dragging = true;\n\n            return intersect? true: false;\n\n        }\n\n        this.onPointerMove = function( event ) {\n\n            if ( scope.object === undefined || scope.axis === null || _dragging === false ) return false;\n\n            var pointer = event;\n\n            var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n            if ( planeIntersect )\n                point.copy( planeIntersect.point );\n\n            var mode = scope.gizmo[_mode].activeMode;\n            if ( mode == \"translate\" ) {\n\n                point.sub( offset );\n                point.multiply(parentScale);\n\n                if ( scope.space == \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    projX.copy( this.unitX );\n                    projY.copy( this.unitY );\n                    projZ.copy( this.unitZ );\n                    tempVector.set( 0, 0, 0 );\n                    if ( scope.axis.search(\"X\") != -1 ) {\n                        projX.multiplyScalar( point.dot( this.unitX ) );\n                        tempVector.add( projX );\n                    }\n                    if ( scope.axis.search(\"Y\") != -1 ) {\n                        projY.multiplyScalar( point.dot( this.unitY ) );\n                        tempVector.add(projY);\n                    }\n                    if ( scope.axis.search(\"Z\") != -1 ) {\n                        projZ.multiplyScalar( point.dot( this.unitZ ) );\n                        tempVector.add( projZ );\n                    }\n                    point.copy( tempVector );\n\n                    point.applyMatrix4( oldRotationMatrix );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n                if ( scope.space == \"world\" || scope.axis.search(\"XYZ\") != -1 ) {\n\n                    projX.copy( this.unitX );\n                    projY.copy( this.unitY );\n                    projZ.copy( this.unitZ );\n                    tempVector.set( 0, 0, 0 );\n                    if ( scope.axis.search(\"X\") != -1 ) {\n                        projX.multiplyScalar( point.dot( this.unitX ) );\n                        tempVector.add( projX );\n                    }\n                    if ( scope.axis.search(\"Y\") != -1 ) {\n                        projY.multiplyScalar( point.dot( this.unitY ) );\n                        tempVector.add(projY);\n                    }\n                    if ( scope.axis.search(\"Z\") != -1 ) {\n                        projZ.multiplyScalar( point.dot( this.unitZ ) );\n                        tempVector.add( projZ );\n                    }\n                    point.copy( tempVector );\n\n                    point.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n            } else if ( mode == \"scale\" ) {\n\n                point.sub( offset );\n                point.multiply(parentScale);\n\n                if ( scope.space == \"local\" ) {\n\n                    if ( scope.axis == \"XYZ\") {\n\n                        scale = 1 + ( ( point.y ) / 50 );\n\n                        scope.object.scale.x = oldScale.x * scale;\n                        scope.object.scale.y = oldScale.y * scale;\n                        scope.object.scale.z = oldScale.z * scale;\n\n                    } else {\n\n                        point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                        if ( scope.axis == \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / 50 );\n                        if ( scope.axis == \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / 50 );\n                        if ( scope.axis == \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / 50 );\n\n                    }\n\n                }\n\n            } else if ( mode == \"rotate\") {\n\n                point.sub( worldPosition );\n                point.multiply(parentScale);\n                tempVector.copy(offset).sub( worldPosition );\n                tempVector.multiply(parentScale);\n\n                if ( scope.axis == \"RE\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n                    tempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\n                    rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                    offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                        if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                            rotz = rotsnap;\n                        }\n                    }\n                    quaternionE.setFromAxisAngle( eye, rotz );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.axis == \"RXYZE\" ) {\n\n                    var tempAxis = point.clone().cross(tempVector).normalize(); // rotation axis\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rot = - point.clone().angleTo(tempVector);\n                    if ( scope.snap !== null ) {\n                        var rotsnap = Math.round( rot / scope.snap ) * scope.snap;\n                        if ( Math.abs(rotsnap-rot) < scope.snapDelta ) {\n                            rot = rotsnap;\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( tempAxis, rot );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.space == \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    tempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                    var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                    rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                    offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                    var rotx = rotation.x - offsetRotation.x;\n                    var roty = rotation.y - offsetRotation.y;\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        if ( scope.axis.search(\"X\") != -1 ) {\n                            var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                rotx = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Y\") != -1 ) {\n                            var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                roty = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Z\") != -1 ) {\n                            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                rotz = rotsnap;\n                            }\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( this.unitX, rotx );\n                    quaternionY.setFromAxisAngle( this.unitY, roty );\n                    quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                    quaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n                    if ( scope.axis == \"RX\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n                    if ( scope.axis == \"RY\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n                    if ( scope.axis == \"RZ\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n                    scope.object.quaternion.copy( quaternionXYZ );\n\n                } else if ( scope.space == \"world\" ) {\n\n                    var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                    var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                    rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                    offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rotx = rotation.x - offsetRotation.x;\n                    var roty = rotation.y - offsetRotation.y;\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        if ( scope.axis.search(\"X\") != -1 ) {\n                            var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                rotx = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Y\") != -1 ) {\n                            var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                roty = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Z\") != -1 ) {\n                            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                rotz = rotsnap;\n                            }\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( this.unitX, rotx );\n                    quaternionY.setFromAxisAngle( this.unitY, roty );\n                    quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    if ( scope.axis == \"RX\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    if ( scope.axis == \"RY\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    if ( scope.axis == \"RZ\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                }\n\n                // show rotation end line\n                if (_mode === \"transrotate\" ) {\n                    scope.add( scope.endLine );\n                    scope.add( scope.centerMark );\n                }\n\n            }\n\n            // update matrix\n            scope.object.matrixAutoUpdate = true;\n\n            scope.update(true);\n            scope.dispatchEvent( changeEvent );\n            scope.dispatchEvent( objectChangeEvent );\n\n            return planeIntersect? true : false;\n\n        }\n\n        this.onPointerUp = function( event ) {\n\n            if ( _dragging && ( scope.axis !== null ) ) {\n                mouseUpEvent.mode = _mode;\n                scope.dispatchEvent( mouseUpEvent )\n            }\n            _dragging = false;\n\n            this.gizmo[_mode].show();\n\n            this.updateUnitVectors();\n\n            // remove rotation start/end lines\n            if ( _mode === \"transrotate\" && this.gizmo[_mode].activeMode === \"rotate\" ) {\n                this.remove( this.endLine );\n                this.remove( this.centerMark );\n                this.parent.remove( this.centerLine );\n                this.parent.remove( this.startLine );\n                this.parent.remove( this.ticks[this.axis] );\n            }\n\n            return false;\n\n        }\n\n        function intersectObjects( pointer, objects ) {\n            return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, camera, true);\n        }\n    };\n\n    THREE.TransformControls.intersectObjects = (function () {\n\n        var pointerVector = new THREE.Vector3();\n        var pointerDir = new THREE.Vector3();\n        var ray = new THREE.Raycaster();\n\n        return function(clientX, clientY, objects, camera, recursive) {\n\n            // Convert client to viewport coords (in [-1,1]^2)\n            var x =  (clientX  / camera.clientWidth)  * 2 - 1;\n            var y = -(clientY  / camera.clientHeight) * 2 + 1; // y-direction flips between canvas and viewport coords\n\n            if (camera.isPerspective) {\n                pointerVector.set(x, y, 0.5);\n                pointerVector.unproject(camera);\n                ray.set(camera.position, pointerVector.sub(camera.position).normalize());\n            } else {\n                pointerVector.set(x, y, -1);\n                pointerVector.unproject(camera);\n                pointerDir.set(0, 0, -1);\n                ray.set(pointerVector, pointerDir.transformDirection(camera.matrixWorld));\n            }\n\n            var intersections = ray.intersectObjects(objects, recursive);\n            return intersections[0] ? intersections[0] : null;\n        };\n    })();\n\n    THREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\n\n};\n","\nimport { init_TransformGizmos } from '../../thirdparty/three.js/TransformControls'\n\n// Declared at the bottom, inside a function.\nvar SectionMeshClass = null;\n\n/**\n * Tool that provides visual controls for the user to change the cutplane's position and angle.\n * It can (and should) be hooked to [ToolController's registerTool]{@Autodesk.Viewing.ToolController#registerTool}\n *\n * @param {Autodesk.Viewing.Viewer3D} viewer - Viewer3D instance\n * @param {Object} config - Configuration values\n * @param {Object} options.tintColor - Object containing attributes r, g, b in the range [0..1]\n * @param {Number} options.tintIntensity - Value range [0..1]\n * @constructor\n */\nexport var SectionTool = function(viewer, options)\n{\n    var _viewer  = viewer.impl;\n\n    var _names = [\"section\"];\n    var _active = false;\n\n    var _isDragging = false;\n    var _boxChanged = false;\n    var _isPlaneOn = true;\n    var _tintColor = options.tintColor;\n    var _tintIntensity = options.tintIntensity;\n\n    var _transRotControl;\n    var _transControl;\n\n    var _trcOffset;\n    var _sectionGroups = [];\n    var _sectionPlanes = [];\n    var _sectionPicker = [];\n    var _activeMode = \"\";\n    var _overlayName = \"gizmo\";\n    var _touchType = null;\n    var _initialized = false;\n    var _visibleAtFirst = true;\n    var _outlineIndices = [[0, 1], [1, 3], [3, 2], [2, 0]];\n    var _priority = 70;\n    var _selectionOpacity = 0.25;\n    var _selectionColor = 0x287EEA;\n\n    init_TransformGizmos();\n    init_SectionMesh();\n\n    function initControl() {\n\n        if (_initialized)\n            return;\n\n        _transRotControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"transrotate\");\n        _transRotControl.addEventListener('change', updateViewer);\n        _transRotControl.setSnap(Math.PI/2, Math.PI/36); // snap to 90 degs within 5 degs range\n\n        _transControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"translate\");\n        _transControl.addEventListener('change', updateViewer);\n\n        // add to overlay scene\n        if (_viewer.overlayScenes[_overlayName] === undefined) {\n            _viewer.createOverlayScene(_overlayName);\n        }\n        _viewer.addOverlay(_overlayName, _transRotControl);\n        _viewer.addOverlay(_overlayName, _transControl);\n\n        viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.addEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        \n        _initialized = true;\n    }\n\n    function deinitControl() {\n        \n        if (!_initialized)\n            return;\n    \n        _viewer.removeOverlay(_overlayName, _transRotControl);\n        _transRotControl.removeEventListener('change', updateViewer);\n        _transRotControl = null;\n        _viewer.removeOverlay(_overlayName, _transControl);\n        _transControl.removeEventListener('change', updateViewer);\n        _transControl = null;\n        _viewer.removeOverlayScene(_overlayName);\n\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.removeEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        \n        _initialized = false;\n    }\n\n    function updateViewer() {\n        _viewer.invalidate(false, false, true);\n    }\n\n    function updateControls() {\n        if (_transRotControl) {\n            _transRotControl.update();\n        }\n        if (_transControl) {\n            _transControl.update();\n        }\n    }\n\n    function updateSections() {\n        if (_active && _sectionPlanes.length === 1) {\n            updatePlaneMeshes(true);\n            updateControls();\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n    }\n\n    /*function mix(a, b, val) {\n        return a * (1.0 - val) + b * val;\n    }*/\n    \n    function getDiffuseColor(material) {\n       return (material && material.color) || new THREE.Color(0xffffff);\n    }\n\n    /*function getSpecularColor(material) {\n        return (material && material.specular) || new THREE.Color(0xffffff);\n    }\n\n    function tintColor(c) {\n        var intensity = Autodesk.Viewing.Extensions.Section.tintIntensity;\n        var tc = _tintColor;\n        c.r = mix(c.r, tc.r, intensity);\n        c.g = mix(c.g, tc.g, intensity);\n        c.b = mix(c.b, tc.b, intensity);\n    }*/\n    \n    // Object used to iterator all fragments in all dbids in all models in a scene\n    // _timeSlice is the time in milliseconds before the iterator will allow itself\n    // to be interrupted. _sliceDelay is the time in milliseconds the iterator delays\n    // before starting a new time slice. The default values are 15 and 0 respectively.\n    // I did some experiments and it seemed like these values worked pretty well.\n    // _sliceDelay doesn't seem to matter very much, but making _timeSlice much\n    // larger will cause highlights to look jerky.\n    function FragmentIterator(_timeSlice, _sliceDelay) {\n\n        var _capTimer = 0;      // Timer used to delay time slices\n        var _callback;          // Callback for each fragment\n        var _models;            // Array of models in the scene\n        var _curModel;          // Current model\n        var _dbIds = [];        // Database ids for the current model\n        var _fragIds = [];      // Fragment ids for the current database id\n        var _instanceTree;       // Instance tree for current model\n        var _m;                 // Current index in _models\n        var _d;                 // Current index in _dbIds\n        var _f;                 // Current index in _fragIds\n\n        // Default value for _timeSlize and _sliceDelay\n        _timeSlice = _timeSlice || 15;\n        _sliceDelay = _sliceDelay || 0;\n\n        // Start the iterator\n        // models is the array of models to iterate\n        // delay is a delay to start the iteration. < 0 starts without any delay\n        // callback is the callback for each fragment:\n        //   callback(fragId, dbId, model, lastFrag)\n        // lastFrag is a boolean that is true when fragId is the last fragment for dbId.\n        this.start = function(models, delay, callback) {\n            reset(models);\n\n            _callback = callback;\n            if (callback) {\n                if (delay >= 0)\n                    _capTimer = setTimeout(doIteration, delay);\n                else\n                    doIteration();\n            }\n        };\n\n        // Reset the iterator, this is so we can clear the manager at the end.\n        function reset(models) {\n            if (_capTimer)\n                clearTimeout(_capTimer);\n            _capTimer = 0;\n            _models = models;\n            _dbIds.length = 0;\n            _fragIds.length = 0;\n            _instanceTree = null;\n            _m = -1;\n            _d = 0;\n            _f = 0;\n        }\n\n        // Do a single time slice\n        function doIteration() {\n            _capTimer = 0;\n            var endTime = performance.now() + _timeSlice;\n            while (performance.now() < endTime) {\n                // If we are done, then return\n                if (!next()) {\n                    // The cap scene is in sceneAfter, so we need to redraw the model to see the caps.\n                    // LMV-2571 - clear the render, as otherwise we will draw transparent objects atop themselves.\n                    _viewer.invalidate(true, true);\n                    // Clear everything when we are done\n                    reset(null);\n                    return;\n                }\n\n                // Call the call back function\n                _callback(_fragIds[_f], _dbIds[_d], _curModel, _f + 1 >= _fragIds.length, !_models || _m >= _models.length);\n            }\n\n            // Schedule the next time slice\n            _capTimer = setTimeout(doIteration, _sliceDelay);\n        }\n\n        // Advance to the next model in _models\n        function nextModel() {\n            // Continue processing the next model in _models\n            if (_models && _m < _models.length) {\n                // Go to next model\n                while (++_m < _models.length) {\n                    _instanceTree = _models[_m].getInstanceTree();\n                    // Only process the model, if it has a fragment map\n                    if (_instanceTree) {\n                        // Get the list of dbIds.\n                        _dbIds.length = 0;\n                        _instanceTree.enumNodeChildren(_models[_m].getRootId(), function(dbId) {\n                            _dbIds.push(dbId);\n                        }, true);\n                        // Only process the model if we got some ids\n                        if (_dbIds.length > 0) {\n                            // Set the current model and newly loaded dbIds\n                            _curModel = _models[_m];\n                            return _curModel;\n                        }\n                    }\n                }\n            }\n\n            // Done clear the current model and new loaded dbIds\n            _curModel = null;\n\n            // End of the models\n            return false;\n        }\n\n        // Advance to the next database id\n        function nextDbId() {\n            // At the end, return false\n            if (_d >= _dbIds.length)\n                return false;\n\n            // Go to next database id\n            while (++_d < _dbIds.length) {\n                var dbId = _dbIds[_d];\n                // Only process dbIds that are not hidden and not off\n                if (!_instanceTree.isNodeHidden(dbId) && !_instanceTree.isNodeOff(dbId)) {\n                    //All fragments that belong to the same node make part of the\n                    //same object so we have to accumulate all their intersections into one list\n                    _fragIds.length = 0;\n                    _instanceTree.enumNodeFragments(dbId, function(fragId) {\n                        _fragIds.push(fragId);\n                    }, false);\n                    // Only process the database id if there are some fragments\n                    if (_fragIds.length > 0)\n                        return true;\n                }\n            }\n\n            // end of the database ids\n            return false;\n        }\n\n        // Advance to the next fragment\n        function next() {\n            // If we are not a the end of the fragment list, then process it\n            if (++_f < _fragIds.length)\n                return true;\n\n            // Start the fragment list at the beginning\n            _f = 0;\n            for ( ; ; ) {\n                // If we have more database ids, then process them\n                if (nextDbId())\n                    return true;\n                // If we don't have another model, then we are done\n                if (!nextModel())\n                    return false;\n                // restart the database ids for the new model\n                _d = -1;\n            }\n        }\n    }\n\n    // Use the same fragment iterator for all fragments\n    var _fragIterator = new FragmentIterator();\n\n    function updateCapMeshes(plane) {\n\n        const cg = Autodesk.Viewing.Extensions.CompGeom;\n\n        //When drawing a 2D material in 3D space we will want to skip binding the G-buffer\n        //when rendering the scene that contains that material\n        _viewer.sceneAfter.skipDepthTarget = true;\n\n        _removeSections();\n\n        var section3D = new THREE.Object3D();\n        section3D.name = \"section3D\";\n        _viewer.scene.add(section3D);\n        \n        var section2D = new THREE.Object3D();\n        section2D.name = \"section2D\";\n        _viewer.sceneAfter.add(section2D);\n        \n        var avp = Autodesk.Viewing.Private;\n\n        var toPlaneCoords = cg.makePlaneBasis(plane);\n        var fromPaneCoords = new THREE.Matrix4().getInverse(toPlaneCoords);\n\n        var mat2dname = _viewer.matman().create2DMaterial(null, {skipCircles:true, skipEllipticals:true, isScreenSpace: true}, false, false);\n        var mat2d = _viewer.matman().findMaterial(null, mat2dname);\n        mat2d.transparent = true;\n        mat2d.depthTest = true;\n        mat2d.polygonOffset = true;\n        mat2d.polygonOffsetFactor = -1;\n        mat2d.polygonOffsetUnits = 0.1;    // 1.0 is usually way too high, see LMV-1072\n        mat2d.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n\n        var box = new THREE.Box3();\n\n        //var worldBox = _viewer.getVisibleBounds(true);   \n        \n        //some heuristic for line width of the section outline based on model size.\n        //half a percent of the model size is what we do here.\n        //var lineWidth = 0.5 * 5e-5 * worldBox.size().length();\n\n        var models = _viewer.modelQueue().getModels();\n\n        var intersects = [];\n        var material;\n\n        function removeMesh(object, modelId, dbId, disposeMaterial) {\n            var child = object.children.find(function(mesh) {\n                return mesh.modelId == modelId && mesh.dbId == dbId;\n            });\n            if (child) {\n                object.remove(child);\n                if (child.geometry)\n                    child.geometry.dispose();\n                if (disposeMaterial && child.material)\n                    child.material.dispose();\n            }\n        }\n\n        // Start iterating the fragments\n        _fragIterator.start(models, 50, function(fragId, dbId, model, lastFrag) {\n\n            // Collect intersections for this fragment\n            var frags = model.getFragmentList();\n            frags.getWorldBounds(fragId, box);\n            if (cg.xBoxPlane(plane, box)) {\n                var m = frags.getVizmesh(fragId);\n\n                if (m.geometry && !m.geometry.is2d && !m.geometry.isLines && m.material.cutplanes) {\n                    material = m.material;\n                    cg.xMeshPlane(plane, m, intersects);\n                }\n            }\n\n            // If this is the last fragment for dbId, process the intersections\n            if (lastFrag) {\n                if (intersects.length) {\n\n                    var bbox = new THREE.Box3();\n                    cg.convertToPlaneCoords(toPlaneCoords, intersects, bbox);\n\n                    //Create the 2D line geometry\n                    var vbb = new avp.VertexBufferBuilder(false, 8 * intersects.length);\n\n                    var color = getDiffuseColor(material);\n                    var r = 0|(color.r * 0.25)*255.5;\n                    var g = 0|(color.g * 0.25)*255.5;\n                    var b = 0|(color.b * 0.25)*255.5;\n\n                    var c = 0xff000000 | (b<<16) | (g<<8) | r;\n\n\n                    var eset = new cg.EdgeSet(intersects, bbox, bbox.size().length() * 1e-6);\n                    eset.snapEdges();\n                    eset.sanitizeEdges();\n                    eset.stitchContours();\n\n                    //Create the 3D mesh\n                    var cset = eset.triangulate();\n\n//Testing code path using the fancier DCEL structure for triangulation of the section edges.\n//TODO: compare quality and performance before switching to this and retiring the EdgeSet code path\n/*\n                    var dcel = new DCEL(bbox, bbox.size().length() * 1e-6);\n                    intersects.forEach(e => {\n                        dcel.addDirectedEdge(e.v1.x, e.v1.y, e.v2.x, e.v2.y, true, dbId);\n                    });\n\n                    dcel.finalize(true);\n\n                    let cset = dcel.closedAreas[0];\n*/\n\n                    if (cset) {\n    /*\n                        if (cset.triangulationFailed)\n                            c = 0xffffff00;\n    */\n\n                        for (let j=0; j<cset.contours.length; j++) {\n\n                            var cntr = cset.contours[j];\n\n                            for (var k=1; k<cntr.length; k++) {\n                                var pt1 = cset.pts[cntr[k-1]];\n                                var pt2 = cset.pts[cntr[k]];\n                                vbb.addSegment(pt1.x, pt1.y, pt2.x, pt2.y, 0, -2.0, /*isClosed ? c : rc*/c, dbId, 0);\n                            }\n\n                        }\n\n\n                        var mdata = { mesh: vbb.toMesh() };\n\n                        avp.BufferGeometryUtils.meshToGeometry(mdata);\n\n                        var bg2d = mdata.geometry;\n                        bg2d.streamingDraw = true;\n                        bg2d.streamingIndex = true;\n\n                        var mesh2d = new THREE.Mesh(bg2d, mat2d);\n\n                        mesh2d.matrix.copy(fromPaneCoords);\n                        mesh2d.matrixAutoUpdate = false;\n                        mesh2d.frustumCulled = false;\n                        mesh2d.modelId = model.id;      // So we can look it up later\n                        mesh2d.dbId = dbId;\n                        section2D.add(mesh2d);\n\n                        //Create triangulated capping polygon\n                        {\n                            if (!cset.triangulationFailed) {\n\n                                var bg = cset.toPolygonMesh(material.packedNormals);\n\n                                var mat = _viewer.matman().cloneMaterial(material, model);\n\n                                mat.packedNormals = material.packedNormals;\n                                mat.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n                                mat.side = THREE.FrontSide;\n                                mat.depthTest = true;\n                                mat.map = null;\n                                mat.bumpMap = null;\n                                mat.normalMap = null;\n                                mat.alphaMap = null;\n                                mat.specularMap = null;\n                                mat.transparent = false;\n                                mat.depthWrite = true;\n                                mat.hatchPattern = true;\n                                mat.needsUpdate = true;\n\n                                var angle = (material.id+2) * Math.PI * 0.125;\n                                var tan = Math.tan(angle);\n                                mat.hatchParams = new THREE.Vector2(tan, 10.0);\n                                mat.hatchTintColor = _tintColor;\n                                mat.hatchTintIntensity = _tintIntensity;\n\n                                // If the material is prism, clear all the map definitions.\n                                if (mat.prismType != null) {\n                                    mat.defines = {};\n                                    mat.defines[mat.prismType.toUpperCase()] = \"\";\n                                    if (mat.prismType == \"PrismWood\") {\n                                        mat.defines[\"NO_UVW\"] = \"\";\n                                    }\n                                }\n\n                                var capmesh = new THREE.Mesh(bg, mat);\n                                capmesh.matrix.copy(fromPaneCoords);\n                                capmesh.matrixAutoUpdate = false;\n                                capmesh.modelId = model.id;      // So we can look it up later\n                                capmesh.dbId = dbId;\n                                capmesh.fragId = intersects.fragId;\n\n                                section3D.add(capmesh);\n                            }\n\n                        }\n\n                    }\n                }\n\n                // Clear intersections for the next dbId\n                intersects.length = 0;\n            } // last Fragment for dbId\n\n        }); //_fragIterator.start\n\n    }\n\n    // We use an own cut plane set to distinguish our own cut planes from others.\n    var _ownCutPlaneSet = 'Autodesk.Viewing.Extension.Section.SectionTool';\n\n    // Make sure that the viewer always uses the SectionTool's plane to adjust 2D rendering resolution.\n    _viewer.setCutPlaneSetFor2DRendering(_ownCutPlaneSet);\n\n    // Keep track of cutplanes that are not our own, because we have to apply them to our cap meshes\n    var _otherCutPlanes = [];\n\n    // Trigger update of cap mesh materials if number of cutplanes have changed by other tools\n    function updateCapMaterials() {\n\n        function update(section) {\n            // apply cutplanes to all active cap meshes\n            if (!section) {\n                return;\n            }\n\n            section.traverse(function(obj) {\n                // we only care for THREE.Mesh with material\n                if (!obj instanceof THREE.Mesh || !obj.material) {\n                    return;\n                }\n                obj.material.needsUpdate = true;\n            });\n        }\n\n        update(_viewer.scene.getObjectByName(\"section3D\"));\n        update(_viewer.sceneAfter.getObjectByName(\"section2D\"));\n    }\n\n    function createPlaneMesh(plane, bbox) {\n        var quat = new THREE.Quaternion().setFromUnitVectors(new THREE.Vector3(0, 0, 1), plane.normal);\n        var geometry;\n        var size;\n\n        if (bbox) {\n            // project bbox to set plane size\n            var ptMax = plane.projectPoint(bbox.max);\n            var ptMin = plane.projectPoint(bbox.min);\n            var invQuat = quat.clone().inverse();\n            ptMax.applyQuaternion(invQuat);\n            ptMin.applyQuaternion(invQuat);\n            size = new THREE.Vector3().subVectors(ptMax, ptMin);\n            geometry = new THREE.PlaneBufferGeometry(size.x, size.y);\n        } else {\n            // project bounding sphere\n            bbox = _viewer.getVisibleBounds();\n            size = 2.0 * bbox.getBoundingSphere().radius;\n            geometry = new THREE.PlaneBufferGeometry(size, size);\n        }\n\n        var material = new THREE.MeshBasicMaterial({\n            opacity: 0,\n            color: _selectionColor,\n            side: THREE.DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        });\n\n        var mesh = new SectionMeshClass(geometry, material, plane);\n        var pt = plane.projectPoint(bbox.center());       \n        mesh.position.copy(pt);\n        mesh.quaternion.multiply(quat);\n\n        // add outlines with inverted background color\n        var presetIndex = _viewer.currentLightPreset();\n        presetIndex = Math.max(0, presetIndex);\n        var bgColor = Autodesk.Viewing.Private.LightPresets[presetIndex].bgColorGradient;\n        var color = \"rgb(\" + (255-bgColor[0]) + \",\" + (255-bgColor[1]) + \",\" + (255-bgColor[2]) + \")\";\n        var lineMaterial = new THREE.LineBasicMaterial({color: color, linewidth:1, depthTest: false});\n        var pos = mesh.geometry.getAttribute('position');\n        for (var i = 0; i < _outlineIndices.length; i++) {\n            geometry = new THREE.Geometry();\n            geometry.vertices.push(new THREE.Vector3().fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize),\n                                   new THREE.Vector3().fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize));\n            var line = new THREE.Line(geometry, lineMaterial);\n            mesh.add(line);\n            mesh.outlines.push(line);\n        }\n\n        return mesh;\n    }\n\n    function updatePlaneMeshes(rebuild) {\n    \n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n\n                var i, line, pos, pt;\n                if (child.connectivity.length > 0) {\n                    // section box\n                    var minv = new THREE.Matrix4().getInverse(child.matrixWorld);\n                    pt = new THREE.Vector3();\n                    pos = child.geometry.getAttribute('position');\n                    for (i = 0; i < pos.length / pos.itemSize; i++) {\n                        var connect = child.connectivity[i];\n                        if (intersectPlanes(child.plane, connect[0], connect[1], pt) !== null) {\n                            pt.applyMatrix4(minv);\n                            pos.setXYZ(i, pt.x, pt.y, pt.z);\n                        }\n                    }\n                    pos.needsUpdate = true;\n                    child.geometry.computeBoundingBox();\n                    child.geometry.computeBoundingSphere();\n\n                    for (i = 0; i < child.outlines.length; i++) {\n                        line = child.outlines[i];\n                        line.geometry.vertices[0].fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize);\n                        line.geometry.vertices[1].fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize);\n                        line.geometry.verticesNeedUpdate = true;\n                    }\n                } else {\n                    // section plane\n                    if (rebuild) {\n                        var bbox = _viewer.getVisibleBounds();\n                        var size = 2.0 * bbox.getBoundingSphere().radius;\n                        pt = child.plane.projectPoint(bbox.center());\n                        child.geometry = new THREE.PlaneBufferGeometry(size, size);\n                        child.position.copy(pt);\n                        pos = child.geometry.getAttribute('position');\n                        for (i = 0; i < child.outlines.length; i++) {\n                            line = child.outlines[i];\n                            line.geometry.vertices[0].fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize);\n                            line.geometry.vertices[1].fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize);\n                            line.geometry.verticesNeedUpdate = true;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    function traverseSections(callback) {\n        for (var i = 0; i < _sectionGroups.length; i++) {           \n            _sectionGroups[i].traverse(callback);\n        }\n    }\n\n    function setSectionPlanes(fireEvent=true) {\n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n                child.update();\n            }\n        });\n        if (_sectionPlanes.length === 1) {\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes, fireEvent);\n    }\n\n    function showPlane(set) {\n        for (var i = 0; i < _sectionGroups.length; i++) {\n            _sectionGroups[i].visible = set;\n        }\n        \n        if (_isPlaneOn !== set)\n            updateViewer();\n\n        _isPlaneOn = set;\n    }\n\n    function showSection(set) {\n        if (set && _sectionPlanes.length > 0) {\n            if (_sectionPlanes.length === 1) {\n                updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n            }\n            _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes);\n        }\n        showPlane(set);\n    }\n\n    function attachControl(control, mesh) {\n        control.attach(mesh);\n        control.setPosition(mesh.position);\n        control.visible = true;\n    }\n\n    function checkNormal(normal) {\n        // flip normal if facing inward as eye direction\n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        if (eyeVec.dot(normal) > 0) {\n            normal.negate();\n        }\n\n        return normal;\n    }\n\n    function setPlane(normal, distance, fireEvent=true) {\n        var obbox = _viewer.getVisibleBounds();\n        var center = obbox.center();\n        var group = new THREE.Group();\n        // Calculate the plane signed distance using the dot product of the center point of the scene bounding box\n        // and the normal vector.\n        distance = (distance !== undefined) ? distance : -1 * center.dot(normal);\n        var plane = new THREE.Plane(normal, distance);\n        var mesh = createPlaneMesh(plane, null);\n        group.add(mesh);\n        _sectionPlanes.push(mesh.planeVec);\n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n        if (_transRotControl) {\n            attachControl(_transRotControl, mesh);\n            mesh.material.opacity = _selectionOpacity;\n            centerPlaneArrow(mesh);\n            _transRotControl.showRotationGizmos(true);\n            _sectionPicker = _transRotControl.getPicker();\n            \n        }\n        setSectionPlanes(fireEvent);\n    }\n\n    function getCenterPoint(mesh) {\n        var middle = new THREE.Vector3();\n        var geometry = mesh.geometry;\n    \n        geometry.computeBoundingBox();\n    \n        middle.x = (geometry.boundingBox.max.x + geometry.boundingBox.min.x) / 2;\n        middle.y = (geometry.boundingBox.max.y + geometry.boundingBox.min.y) / 2;\n        middle.z = (geometry.boundingBox.max.z + geometry.boundingBox.min.z) / 2;\n    \n        mesh.localToWorld( middle );\n        return middle;\n    }\n\n    /**\n     * Places the arrow at the center of the passed in mesh.\n     * @param {*} mesh \n     */\n    function centerPlaneArrow(mesh) {\n        if (!_transRotControl || !mesh) return false;\n        // Get the center of the plane and \n        // calculate the x,y,z offset between the plane position and the plane center\n        var centerOffset = getCenterPoint(mesh).sub(mesh.position);\n        centerOffset.sub(_trcOffset);\n        // Set the gizmo offset\n        _transRotControl.setGizmoOffset(centerOffset);\n        return true;\n    }\n\n    function setBox(planeSet) {\n        var normals = [\n            new THREE.Vector3(1, 0, 0), \n            new THREE.Vector3(0, 1, 0), \n            new THREE.Vector3(0, 0, 1),\n            new THREE.Vector3(-1, 0, 0),\n            new THREE.Vector3(0, -1, 0),\n            new THREE.Vector3(0, 0, -1)\n        ];\n\n        var connectivities = [\n            [[1, 2], [1, 5], [2, 4], [4, 5]], // 0\n            [[3, 5], [0, 5], [2, 3], [0, 2]], // 1\n            [[1, 3], [0, 1], [3, 4], [0, 4]], // 2\n            [[1, 5], [1, 2], [4, 5], [2, 4]], // 3\n            [[2, 3], [0, 2], [3, 5], [0, 5]], // 4\n            [[0, 1], [3, 1], [0, 4], [3, 4]]  // 5\n        ];\n\n        var group = new THREE.Group();\n        var obbox = _viewer.getVisibleBounds();\n        var center = obbox.center();\n        var bbox = new THREE.Box3(obbox.min, center);\n        \n        // Initialize from planeSet ONLY if it's an AABB.\n        var loadingBox = false;\n        if (planeSet && planeSet.length === 6 && planeSet[0].x === 1.0) {\n            // Assume that the order on planes is the same as in Array of normals defined above\n            bbox = new THREE.Box3(\n                new THREE.Vector3(planeSet[3].w, planeSet[4].w, planeSet[5].w),\n                new THREE.Vector3(planeSet[0].w, planeSet[1].w, planeSet[2].w)\n            );\n            center = bbox.max.clone();\n            loadingBox = true;\n        }\n\n        ////center = obbox.max;   // Use this to initialize the box around the model\n        ////bbox = obbox.clone(); // Use this to initialize the box around the model\n\n        var planes = [], meshes = [];\n        var i, mesh;\n        for (i = 0; i < normals.length; i++) {\n\n            if (loadingBox) {\n                var plane = new THREE.Plane(normals[i], planeSet[i].w);\n                planes.push(plane);\n            }\n            else \n            {\n                var plane = new THREE.Plane(normals[i], -1 * center.dot(normals[i]));\n                planes.push(plane);\n\n                // offset plane with negative normal to form an octant\n                if (i > 2) {\n                    var ptMax = plane.orthoPoint(bbox.max);\n                    var ptMin = plane.orthoPoint(bbox.min);\n                    var size = new THREE.Vector3().subVectors(ptMax, ptMin);\n                    plane.constant -= size.length();\n                }\n            }\n\n            mesh = createPlaneMesh(plane, bbox);\n            group.add(mesh);\n            meshes.push(mesh);\n            _sectionPlanes.push(mesh.planeVec);\n        }\n\n        // build connectivity\n        for (i = 0; i < meshes.length; i++) {\n            mesh = meshes[i];\n            var connectivity = connectivities[i];\n            for (var j = 0; j < connectivity.length; j++) {\n                var nc = [];\n                var ct = connectivity[j];\n                for (var k = 0; k < ct.length; k++) {\n                    nc.push(planes[ct[k]]);\n                }\n                mesh.connectivity.push(nc);\n            }\n        }\n        \n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n\n        setSectionPlanes();\n        updatePlaneMeshes();\n\n        var plane = _sectionGroups[0].children[0];\n        attachControl(_transRotControl, plane);\n        // Set the plane opacity\n        plane.material.opacity = _selectionOpacity;\n        centerPlaneArrow(plane);\n\n        attachControl(_transControl, _sectionGroups[0]);\n        _transRotControl.showRotationGizmos(false);\n        _sectionPicker = _transRotControl.getPicker().concat(_transControl.getPicker());\n        // Calculate the offset to the max point of the bounding box.\n        var sectionBoxPosition = _sectionGroups[0].position.clone();\n        var cornerOffset = sectionBoxPosition.sub(center.clone());\n        _transControl.setGizmoOffset(cornerOffset);\n    }\n\n    var intersectPlanes = (function () {\n        var m = new THREE.Matrix3();\n        var n23 = new THREE.Vector3();\n        var n31 = new THREE.Vector3();\n        var n12 = new THREE.Vector3();\n        return function(plane1, plane2, plane3, optionalTarget) {\n            m.set(plane1.normal.x, plane1.normal.y, plane1.normal.z,\n                  plane2.normal.x, plane2.normal.y, plane2.normal.z,\n                  plane3.normal.x, plane3.normal.y, plane3.normal.z);\n            \n            var det = m.determinant();\n            if (det === 0) return null;\n\n            n23.crossVectors(plane2.normal, plane3.normal).multiplyScalar(-plane1.constant);\n            n31.crossVectors(plane3.normal, plane1.normal).multiplyScalar(-plane2.constant);\n            n12.crossVectors(plane1.normal, plane2.normal).multiplyScalar(-plane3.constant);\n\n            var result = optionalTarget || new THREE.Vector3();\n            return result.copy(n23).add(n31).add(n12).divideScalar(det);\n        };\n    })();\n\n    var intersectObjects = function(pointer, objects, recursive) {\n        return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, _viewer.camera, recursive);\n    };\n        \n    // public functions\n\n    /**\n     * When active, the geometry will be sectioned by the current set cut plane.\n     * @returns {boolean}\n     */\n    this.isActive = function() {\n        return _active;\n    };\n\n    /**\n     * Returns the signed distance of the sectioning plane from the origin\n     * @returns {Number} distance. Null distance is returned if there is no hit found from raycast\n     */\n    this.getSectionDistance = function(normal) {\n        // Find a target point in the direction of the camera \n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        var hit = _viewer.rayIntersect(new THREE.Ray(_viewer.camera.position, eyeVec));\n        // DIstance\n        return hit && hit.intersectPoint && -1 * hit.intersectPoint.dot(normal);\n    };\n\n    /**\n     * Enables the cut planes that were created by the viewer.setCutPlanes() function.\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.setViewerSection = function(fireEvent=true) {\n        this.clearSection(fireEvent);\n        var normal;\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length !== 1) return;\n\n        _transRotControl.clientScale = 1;\n        var v4 = planeSet[0];\n        var normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n        var distance = v4.w;\n        setPlane(normal, distance, fireEvent);\n        _activeMode = 'SET_VIEW_PLANE';\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined, fireEvent);        \n    };\n\n    \n\n    /**\n     * Facilitates the initialization of a cut plane\n     * \n     * @param {String} name - Either 'X', 'Y', 'Z' or 'BOX'\n     */\n    this.setSection = function(name) {\n        this.clearSection();\n        _trcOffset = new THREE.Vector3();\n        var normal, distance;\n        _transRotControl.clientScale = 1;\n\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length === 1 && name !== 'BOX' && name !== 'OBJ_SET_VIEW_PLANE') {\n            name = 'SET_VIEW_PLANE';\n        }\n        \n        switch (name) {\n            case 'X':\n                normal = new THREE.Vector3(1, 0, 0);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'Y':\n                normal = new THREE.Vector3(0, 1, 0);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'Z':\n                normal = new THREE.Vector3(0, 0, 1);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'OBJ_SET_VIEW_PLANE':\n            case 'SET_VIEW_PLANE':\n                var v4 = planeSet[0];\n                normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n                setPlane(normal, v4.w);\n                break;\n            case 'OBJ_BOX':\n            case 'BOX':\n                setBox(planeSet);\n                _transRotControl.clientScale = 2;\n                this.recomputePivot();\n                break;\n        }\n        _activeMode = name;\n        \n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Facilitates the initialization of a cut plane from a normal and distance\n     *\n     * @param {THREE.Vector4} normal (x,y,z) and distance (w)\n     * @param {Number} distance\n     */\n    this.setSectionFromPlane = function(cutplane) {\n        this.clearSection();\n        setPlane(new THREE.Vector3(cutplane.x, cutplane.y, cutplane.z), cutplane.w);\n        _activeMode = \"\";\n\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Set the active mode\n     * @param {string} [name] - active mode name\n     * @private\n     */\n    this.setActiveMode = function(name) {\n        _activeMode = name || \"\";\n    }\n\n    /**\n     * Remove the section graphics\n     */\n    function _removeSections() {\n        var oldsection3D = _viewer.scene.getObjectByName(\"section3D\");\n        if (oldsection3D)\n            _viewer.scene.remove(oldsection3D);\n        var oldsection2D = _viewer.sceneAfter.getObjectByName(\"section2D\");\n        if (oldsection2D)\n            _viewer.sceneAfter.remove(oldsection2D);\n    }\n\n    /**\n     * Removes any (and all) currently set cut plane(s).\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.clearSection = function(fireEvent=true) {\n\n        if (_transRotControl)\n            _transRotControl.detach();\n\n        if (_transControl)\n            _transControl.detach();\n\n        // remove all sections\n        while(_sectionPlanes.length > 0) {\n            _sectionPlanes.pop();\n        }\n\n        while(_sectionGroups.length > 0) {\n            var group = _sectionGroups.pop();\n            _viewer.removeOverlay(_overlayName, group);\n        }\n\n        _fragIterator.start(null);      // Shutdown iterator        \n        _removeSections();\n\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, null, fireEvent);\n    };\n\n    this.isPlaneOn = function() {\n        return _isPlaneOn;\n    };\n\n    this.showPlane = function(set) {\n        showPlane(set);\n    };\n\n    /**\n     * Whether translation and rotation controls are visible or not.\n     * @param {Boolean} set\n     */\n    this.attachControl = function(set) {\n        if (!_transRotControl || !_transControl) {\n            return;\n        }\n\n        if (set) {\n            attachControl(_transRotControl, _sectionGroups[0].children[0]);\n            _transRotControl.highlight();\n            if (_activeMode === 'BOX')\n                attachControl(_transControl, _sectionGroups[0]);\n        } else {\n            _transRotControl.detach();\n            _transControl.detach();\n        }\n    };\n\n    /**\n     * Invokes setSection with the last set of parameters used.\n     */\n    this.resetSection = function() {\n        this.setSection(_activeMode);\n    };\n\n    // tool interface\n\n    this.getNames = function() {\n        return _names;\n    };\n\n    this.getName = function() {\n        return _names[0];\n    };\n\n    this.register = function() {\n    };\n\n    this.deregister = function() {\n        this.clearSection();\n        deinitControl();\n    };\n\n    this.getPriority = function() {\n        return _priority;\n    };\n\n    /**\n     * [ToolInterface] Activates the tool\n     * @param {String} name - unused\n     */\n    this.activate = function(/*name*/) {\n\n        initControl();\n\n        _active = true;\n        _isDragging = false;\n        _visibleAtFirst = true;\n\n        // keep only one section all the time per design\n        _sectionPlanes = _sectionPlanes || [];\n\n        showSection(true);\n    };\n\n    /**\n     * [ToolInterface] Deactivates the tool\n     * @param {String} name - unused\n     */\n    this.deactivate = function(/*name*/) {\n        _active = false;\n        _isDragging = false;\n\n        _fragIterator.start(null);      // Shutdown iterator        \n        _removeSections();\n\n\n        showSection(false);\n        _viewer.setCutPlaneSet(_ownCutPlaneSet);\n        _transRotControl.detach();\n        _transControl.detach();\n    };\n\n    this.update = function(/*highResTimestamp*/) {\n        return false;\n    };\n\n    this.handleSingleClick = function(event/*, button*/) {\n        var pointer = event;\n        var result = intersectObjects(pointer, _sectionGroups[0].children);\n        _sectionGroups[0].children.forEach(function(child) {\n            child.material.opacity = 0;\n        })\n        \n        if (result) {\n            attachControl(_transRotControl, result.object);\n            _transRotControl.highlight();\n            result.object.material.opacity = _selectionOpacity;\n            centerPlaneArrow(result.object);\n            updateViewer();\n        }\n\n        return false;\n    };\n\n    this.handleDoubleClick = function(/*event, button*/) {\n        return false;\n    };\n\n    this.handleSingleTap = function(event) {\n        return this.handleSingleClick(event, 0);\n    };\n\n    this.handleDoubleTap = function(/*event*/) {\n        return false;\n    };\n\n    this.handleKeyDown = function(/*event, keyCode*/) {\n        return false;\n    };\n\n     this.handleKeyUp = function(/*event, keyCode*/) {\n        return false;\n    };\n\n    this.handleWheelInput = function(/*delta*/) {\n        return false;\n    };\n\n    this.handleButtonDown = function(event/*, button*/) {\n        _isDragging = true;\n        if (_transControl.onPointerDown(event))\n            return true;\n        return _transRotControl.onPointerDown(event);\n    };\n\n    this.handleButtonUp = function(event/*, button*/) {\n        _isDragging = false;\n        if (_boxChanged) {\n            _boxChanged = false;\n            this.recomputePivot();\n        }\n        if (_transControl.onPointerUp(event))\n            return true;\n        return _transRotControl.onPointerUp(event);\n    };\n\n    this.handleMouseMove = function(event) {\n        var oldTransControlPos = _transControl.object ? new THREE.Vector3().copy(_transControl.object.position) : null;\n        // var oldMaxPoint = _transControl.object ? getMaxPoint(_transControl.object) : null;\n        if (_isDragging) {\n            if (_transControl.onPointerMove(event) ) {\n                _boxChanged = true;\n                setSectionPlanes();\n                _transRotControl.update();\n                // Keep track of the section box offset\n                var boxOffset = new THREE.Vector3().copy(_transControl.object.position).sub(oldTransControlPos);\n                // Add the box offset to the section plane offset\n                _trcOffset.add(boxOffset);\n                return true;\n            }\n            if (_transRotControl.onPointerMove(event)) {\n                _boxChanged = true;\n                setSectionPlanes();\n                updatePlaneMeshes();\n                // TODO: Try to position the triad to the max corner of the section box when moving the plane arrow.\n                // Currently, it is positioned at the max point of the section box.\n                return true;\n            }\n        }\n\n        _transControl.visible = _transControl.object !== undefined;\n\n        if (event.pointerType !== 'touch') {\n            var pointer = event;\n            var result = intersectObjects(pointer, _sectionGroups[0].children);\n            if (result) {\n                _visibleAtFirst = false;\n            }\n\n            // show gizmo + plane when intersecting on non-touch \n            var visible = _visibleAtFirst || (result || intersectObjects(pointer, _sectionPicker, true)) ? true : false;\n            _transRotControl.visible = visible;\n            _transControl.visible = _transControl.visible && visible;\n            showPlane(visible);\n        }\n\n        if (_transControl.onPointerHover(event))\n            return true;\n\n        return _transRotControl.onPointerHover(event);\n    };\n\n    this.handleGesture = function(event) {\n        switch (event.type) {\n            case \"dragstart\":\n                _touchType = \"drag\";\n                // Single touch, fake the mouse for now...\n                return this.handleButtonDown(event, 0);\n\n            case \"dragmove\":\n                return (_touchType === \"drag\") ? this.handleMouseMove(event) : false;\n\n            case \"dragend\":\n                if (_touchType === \"drag\") {\n                    _touchType = null;\n                    return this.handleButtonUp(event, 0);\n                }\n                return false;\n        }\n        return false;\n    };\n\n    this.handleBlur = function(/*event*/) {\n        return false;\n    };\n\n    this.handleResize = function() {\n    };\n\n    this.handlePressHold = function(/*event*/) {\n        return true;\n    };\n\n    this.recomputePivot = function() {\n\n        var values = this.getSectionBoxValues(true);\n        if (!values) return;\n\n        var aabb = values.sectionBox;\n\n        _viewer.api.navigation.setPivotPoint(new THREE.Vector3(\n            aabb[0] + (aabb[3] - aabb[0]) * 0.5,\n            aabb[1] + (aabb[4] - aabb[1]) * 0.5,\n            aabb[2] + (aabb[5] - aabb[2]) * 0.5,\n        ));\n    };\n\n    this.getSectionBoxValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length < 6) {\n            return null;\n        }\n\n        var right = planes[0].position.x;\n        var top   = planes[1].position.y;\n        var front = planes[2].position.z;\n        var left  = planes[3].position.x;\n        var bttm  = planes[4].position.y;\n        var back  = planes[5].position.z;\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        } \n        \n        var aabb = [\n            Math.min(left, right)   + off.x, \n            Math.min(top,bttm)      + off.y, \n            Math.min(front,back)    + off.z,\n            Math.max(left, right)   + off.x, \n            Math.max(top,bttm)      + off.y, \n            Math.max(front,back)    + off.z,\n        ];\n\n        // Box doesn't support rotation at the moment.\n        // Will have to take it into account if that becomes a feature.\n        var transform = new THREE.Matrix4().identity().toArray();\n        \n        return {\n            sectionBox: aabb,\n            sectionBoxTransform: transform,\n        }\n    };\n\n    this.getSectionPlaneValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length !== 1) {\n            return null;\n        }\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        }\n\n        var plane = planes[0].plane;\n        var constant = plane.constant - THREE.Vector3.prototype.dot.call( off, plane.normal );\n\n        return {\n            sectionPlane: [\n                plane.normal.x,\n                plane.normal.y,\n                plane.normal.z,\n                constant\n            ]\n        }\n    };\n    \n    this.getSectionPlaneSet = function() {\n        return _viewer.getCutPlaneSet(_ownCutPlaneSet);  \n    };\n    \n    this.getSectionPlanes = function() {\n        // When restoring a viewer state it is put in __set_view, so return from that set\n        // However, the notifyCutplanesChanged function can call setViewerSection which would\n        // move the planes from __set_view into _ownCutPlaneSet\n        const viewSet = _viewer.getCutPlaneSet('__set_view');\n        if (viewSet.length > 0) {\n            return viewSet;\n        }\n\n        return _viewer.getCutPlaneSet(_ownCutPlaneSet);\n    };\n\n    // Called by viewer if any cutplanes are modified. It makes sure that cutplanes controlled by separate tools\n    // (with own cutplane sets) are considered by our cap meshes.\n    this.notifyCutplanesChanged = function() {\n\n        var numCutPlanesBefore = _otherCutPlanes.length;\n\n        // Collect all active cutplanes from other tools\n        //\n        // NOTE: It's essential that we don't create a new array, but just refill the same one.\n        //       Since the cap meshes are created async, the cutPlaneChange event may come in the middle of\n        //       the cap mesh generation. For consistency, we want all cap meshes to share the same cutplane array.\n        _otherCutPlanes.length = 0;\n        var cpSets = _viewer.getCutPlaneSets();\n        for (var i=0; i<cpSets.length; i++) {\n\n            // skip our own cut planes\n            var cpName = cpSets[i];\n            if (cpName === _ownCutPlaneSet) {\n                continue;\n            }\n\n            // add cutplanes of this set\n            var cp = _viewer.getCutPlaneSet(cpName);\n            for (var j = 0; j < cp.length; j++) {\n                _otherCutPlanes.push(cp[j]);\n            }\n        }\n\n        // Set the section tool to the viewer defined cutplane.\n        if (cpSets.includes(\"__set_view\") && _activeMode !== \"\" && _activeMode.indexOf(\"OBJ_\") === -1) {\n            this.setViewerSection(false);\n        }\n\n        // If the number of cutplanes changed, this requires a shader recompile of the cap materials\n        if (numCutPlanesBefore !== _otherCutPlanes.length) {\n            updateCapMaterials();\n        }\n    };\n\n    /**\n     * Set a section box around the passed in bounding box.\n     * @param {THREE.Box3} box\n     * @returns {boolean} - true if the section box was set\n     */\n    this.setSectionBox = function(box) {\n        if (!box) return false;\n        const name = 'OBJ_BOX';        \n        // Convert the bounding box to planes\n        const planes = Autodesk.Viewing.Private.SceneMath.box2CutPlanes(box, box.transform);\n        _activeMode = name;\n        _viewer.setCutPlaneSet('__set_view', planes);\n        this.setSection(name);\n        return true;\n    };\n\n    /**\n     * Set a section plane at the intersection position.\n     * @param {Three.Vector3} normal - plane normal.\n     * @param {Three.Vector3} position - position to place the plane.\n     * @returns {boolean} - true if the section plane was set\n     */\n    this.setSectionPlane = function(normal, position) {\n        if (!normal || !position) return false;\n        const name = 'OBJ_SET_VIEW_PLANE'\n        const distance = -1 * position.dot(normal);\n        const plane = new THREE.Plane(normal, distance);\n        _activeMode = name;\n        const planeVecs = [new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant)];\n        _viewer.setCutPlaneSet('__set_view', planeVecs);\n        this.setSection(name);\n        return true;\n    };\n};\n\nfunction init_SectionMesh() {\n\n    if (SectionMeshClass)\n        return;\n\n    SectionMeshClass = function(geometry, material, plane) {\n\n        THREE.Mesh.call(this, geometry, material, false);\n\n        this.plane = plane;\n        this.planeVec = new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant);\n        this.connectivity = [];\n        this.outlines = [];\n    };\n\n    SectionMeshClass.prototype = Object.create(THREE.Mesh.prototype);\n    SectionMeshClass.prototype.constructor = SectionMeshClass;\n\n    SectionMeshClass.prototype.update = function() {\n\n        this.plane.normal.set(0, 0, 1);\n        this.plane.normal.applyQuaternion(this.quaternion);\n\n        var normal = this.plane.normal;\n        var d = -1 * this.getWorldPosition().dot(normal);\n        this.planeVec.set(normal.x, normal.y, normal.z, d);\n        this.plane.constant = d;\n    };\n\n}\n\n","import { SectionTool } from './SectionTool'\nimport CSS from './Section.css'\n\n/**\n * The SectionExtension provides ways to cut the geometry using planes or a cube.\n * The extension adds a toolbar button to access the feature. \n * \n * The extension id is: `Autodesk.Section`\n * \n * @example\n *   viewer.loadExtension('Autodesk.Section')\n * \n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.SectionExtension\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n * @constructor\n */\nexport var SectionExtension = function(viewer, options) {\n    Autodesk.Viewing.Extension.call(this, viewer, options);\n    this.viewer = viewer;\n    this.name = 'section';\n    this.modes = ['x','y','z','box'];\n\n    this.onViewerSetView = this.onViewerSetView.bind(this);\n    this._onCutPlanesChanged = this._onCutPlanesChanged.bind(this);\n    this._onShowAll = this._onShowAll.bind(this);\n};\n\nSectionExtension.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\nSectionExtension.prototype.constructor = SectionExtension;\n\nvar proto = SectionExtension.prototype;\n\n/**\n * Registers the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.load = function() {\n    var that = this;\n    var viewer = this.viewer;\n\n    this.tool = new SectionTool(viewer, {\n        tintColor: { r: 1, g: 1, b: 0 },\n        tintIntensity: 0.2\n    });\n    viewer.toolController.registerTool(this.tool);\n    this.sectionStyle = null;\n    this.supportedStyles = [\"X\", \"Y\", \"Z\", \"BOX\"];\n\n    viewer.addEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n\n    // consider cutplane changes of other tools, so that cap meshes consider them too\n    viewer.addEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this._onCutPlanesChanged);\n    viewer.addEventListener(Autodesk.Viewing.SHOW_ALL_EVENT, this._onShowAll);\n\n    this.HOTKEYS_ID = \"Autodesk.Section.Hotkeys\";\n    var hotkeys = [{\n        keycodes: [\n            Autodesk.Viewing.KeyCode.ESCAPE\n        ],\n        onRelease: function () {\n            return that.deactivate();\n        }\n    }];\n    viewer.getHotkeyManager().pushHotkeys(this.HOTKEYS_ID, hotkeys);\n\n    // Invoked when the context menu is about to get opened.\n    this.viewer.registerContextMenuCallback('Autodesk.Section', (menu, status) => {\n        onContextMenu(this, menu, status);\n    });\n\n    //Load the required dependency (and return the pending load as the load completion Promise)\n    return this.viewer.loadExtension('Autodesk.CompGeom');\n};\n\n/**\n * Unregisters the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.unload = function () {\n    var viewer = this.viewer;\n\n    viewer.unregisterContextMenuCallback('Autodesk.Section');\n\n    // remove hotkey\n    viewer.getHotkeyManager().popHotkeys(this.HOTKEYS_ID);\n\n    this.destroyUI();\n\n    viewer.removeEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n    viewer.removeEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this._onCutPlanesChanged);\n    viewer.removeEventListener(Autodesk.Viewing.SHOW_ALL_EVENT, this._onShowAll);\n\n    viewer.toolController.deregisterTool(this.tool);\n    this.tool = null;\n\n    return true;\n};\n\n/**\n * Toggles activeness of section planes.\n * @returns {boolean} Whether the section plane is active or not.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#toggle\n */\nproto.toggle = function() {\n    if (this.isActive()) {\n        this.enableSectionTool(false);\n    } else {\n        var style = this.sectionStyle || \"X\";\n        this.setSectionStyle(style, true);\n    }\n    return this.isActive(); // Need to check for isActive() again.\n};\n\n/**\n * Returns the current type of plane that will cut-though the geometry.\n *\n * @returns {null|String} Either \"X\" or \"Y\" or \"Z\" or \"BOX\" or null.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getSectionStyle\n */\nproto.getSectionStyle = function() {\n    return this.sectionStyle;\n};\n\n/**\n * Sets the Section plane style.\n *\n * @param {String} style - Accepted values are 'X', 'Y', 'Z' and 'BOX' (in Caps)\n * @param {Boolean} [preserveSection] - Whether sending the current style value resets the cut planes.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionStyle\n */\nproto.setSectionStyle = function(style, preserveSection) {\n\n    if (this.supportedStyles.indexOf(style) === -1) {\n        return false;\n    }\n\n    var bActive = this.isActive();\n    var bNewStyle = (this.sectionStyle !== style) || !preserveSection;\n    this.sectionStyle = style;\n\n    if (bActive && bNewStyle) {\n        this.tool.setSection(style);\n    }\n    else if (!bActive) {\n        this.enableSectionTool(true);\n        if (bNewStyle) {\n            this.tool.setSection(style);\n        } else {\n            this.tool.attachControl(true);\n        }\n    }\n    return true;\n};\n\n/**\n * Use to set the section from an externally defined plane. For showing with line pattern\n * Tool itself will be disabled when setting the plane\n *\n * @param {THREE.Vector4} cutplane - send null to clear the section\n */\nproto.setSectionFromPlane = function(cutplane) {\n    this.deactivate();\n\n    if (cutplane) {\n        this.tool.setSectionFromPlane(cutplane);\n        this.tool.attachControl(false);\n        // LMV-5299\n        if (!this.isActive()) {\n            this.tool.showPlane(false);\n        }\n    } else {\n        this.tool.clearSection();\n        var prevLock = this.viewer.toolController.setIsLocked(false);\n        this.enableSectionTool(false);\n        this.viewer.toolController.setIsLocked(prevLock);\n    }\n};\n\n/**\n * Returns the planes belonging only to the Section tool's set*\n */\nproto.getSectionPlanes = function() {\n    return this.tool.getSectionPlanes();\n};\n\n/**\n *\n * @param enable\n * @returns {boolean}\n * @private\n */\nproto.enableSectionTool = function(enable) {\n    var toolController = this.viewer.toolController,\n        isActive = this.tool.isActive();\n\n    if (enable && !isActive) {\n        toolController.activateTool(\"section\");\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.ACTIVE);\n        }\n        return true;\n\n    } else if (!enable && isActive) {\n        toolController.deactivateTool(\"section\");\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.INACTIVE);\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Returns an object that reperesents the state of the section planes\n * currently applied to the viewer by this extension.\n * \n * @param {THREE.Vector3|Object} [ignoreGlobalOffset=false]\n * \n * @returns {Object|null}\n */\nproto.getViewValues = function(ignoreGlobalOffset) {\n\n    var boxValues = this.tool.getSectionBoxValues(ignoreGlobalOffset);\n    if (boxValues)\n        return boxValues;\n\n    var planeValues = this.tool.getSectionPlaneValues(ignoreGlobalOffset);\n    if (planeValues)\n        return planeValues;\n\n    return null;\n};\n\n/**\n * Gets the extension state as a plain object. Invoked automatically by viewer.getState()\n * @param {object} viewerState - Object to inject extension values.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getState\n */\nproto.getState = function(viewerState) {\n    if (!this.viewer.model || this.viewer.model.is2d()) {\n        return;\n    }\n\n    viewerState.cutplanes = viewerState.cutplanes || [];\n    var planes = this.tool.getSectionPlaneSet();\n    for (var i = 0; i < planes.length; i++) {\n        viewerState.cutplanes.push(planes[i].toArray());\n    }\n};\n\n/**\n * Restores the extension state from a given object. Invoked automatically by viewer.restoreState()\n * @param {object} viewerState - Viewer state.\n * @param {boolean} immediate - Whether the new view is applied with (true) or without transition (false).\n * @returns {boolean} True if restore operation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#restoreState\n */\nproto.restoreState = function(viewerState, immediate) {\n    const cutplanes = this.getSectionPlanes();\n    this.setSectionFromPlane(null);   // Unload any existing planes first\n    if (cutplanes.length === 1) {\n        this.setSectionFromPlane(cutplanes[0]);\n    }\n    \n    return true;\n};\n\n/**\n * @private\n */\nproto._onCutPlanesChanged = function(/*event*/) {\n    this.tool.notifyCutplanesChanged();\n};\n\n\n/**\n * @private\n */\nproto._onShowAll = function(/*event*/) {\n    this.deactivate();\n}\n\n/**\n * Set a section box around the passed in THREE.Box3.\n * This method will also enable the section tool.\n * @param {THREE.Box3} box - used to set the section box.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionBox\n */\nproto.setSectionBox = function(box) {\n    if (!box) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionBox(box)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n    } else {\n        this.enableSectionTool(false);\n    }\n}\n\n/**\n * Place a section plane on the Intersection.\n * This method will also enable the section tool.\n * @param {Three.Vector3} normal - plane normal.\n * @param {Three.Vector3} position - position to place the plane.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionPlane\n */\nproto.setSectionPlane = function(normal, point) {\n    if (!normal || !point) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionPlane(normal, point)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n    } else {\n        this.enableSectionTool(false);\n    }\n}\n\n/**\n * @private\n */\nproto.onViewerSetView = function(/*event*/) {\n    this.deactivate();\n};\n\n/***\n * @private\n */\nproto.onToolbarCreated = function(toolbar) {\n\n    var AVU = Autodesk.Viewing.UI;\n\n    this.sectionToolButton = new AVU.ComboButton(\"toolbar-sectionTool\");\n    this.sectionToolButton.setToolTip('Section analysis');\n    this.sectionToolButton.setIcon(\"adsk-icon-section-analysis\");\n    this.createSubmenu(this.sectionToolButton);\n\n    // make sure inspect tools is visible\n    var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);\n\n    // place section tool before reset tool\n    if (modelTools) {\n        var resetTool = modelTools.getControl(\"toolbar-resetTool\");\n        if (resetTool) {\n            modelTools.addControl(this.sectionToolButton, {index: modelTools.indexOf(resetTool.getId())});\n        } else {\n            modelTools.addControl(this.sectionToolButton, {index: 0});\n        }\n    }\n};\n\n/**\n *\n * @param parentButton\n * @private\n */\nproto.createSubmenu = function(parentButton)\n{\n    var that = this;\n    var viewer = this.viewer;\n    var AVU = Autodesk.Viewing.UI;\n\n    function createNavToggler(button, name) {\n        return function() {\n            var state = button.getState();\n            var enable = function() {\n                if (button instanceof AVU.ComboButton === false) {\n                    that.activate(name);\n                } else {\n                    that.enableSectionTool(true);\n                    that.tool.attachControl(true);\n                }\n            };\n\n            if (state === AVU.Button.State.INACTIVE) {\n                button.setState(AVU.Button.State.ACTIVE);\n                // Long initialization may cause issues on touch enabled devices, make it async\n                if (Autodesk.Viewing.isMobileDevice()) {\n                    setTimeout(enable, 1);\n                } else {\n                    enable();\n                }\n            } else if (state === AVU.Button.State.ACTIVE) {\n                button.setState(AVU.Button.State.INACTIVE);\n                that.deactivate();\n            }\n            that.sectionStyle = name.toUpperCase();\n        };\n    }\n\n    function updateSectionButtons() {\n        var areVectorsEqual = (function () {\n            var v = new THREE.Vector3();\n            return function(a, b, sqtol) {\n                v.subVectors(a, b);\n                return v.lengthSq() < sqtol;\n            };\n        })();\n\n        var unitx = new THREE.Vector3(1, 0, 0);\n        var unity = new THREE.Vector3(0, 1, 0);\n        var unitz = new THREE.Vector3(0, 0, 1);\n        var right = viewer.autocam.getWorldRightVector();\n        var up = viewer.autocam.getWorldUpVector();\n        var front = viewer.autocam.getWorldFrontVector();\n\n        var tol = 0.0001;\n        if (areVectorsEqual(up, unitx, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(up, unitz, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-y\");\n        }\n\n        if (areVectorsEqual(right, unity, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-y\");\n        } else if (areVectorsEqual(right, unitz, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-x\");\n        }\n\n        if (areVectorsEqual(front, unitx, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(front, unity, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-y\");\n        } else {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-z\");\n        }\n\n        viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, updateSectionButtons);\n    }\n\n    var sectionXButton = this.sectionXButton = new AVU.Button(\"toolbar-sectionTool-x\");\n    sectionXButton.setToolTip('Add X plane');\n    sectionXButton.setIcon(\"adsk-icon-plane-x\");\n    sectionXButton.onClick = createNavToggler(sectionXButton, 'x');\n    parentButton.addControl(sectionXButton);\n\n    var sectionYButton = this.sectionYButton = new AVU.Button(\"toolbar-sectionTool-y\");\n    sectionYButton.setToolTip('Add Y plane');\n    sectionYButton.setIcon(\"adsk-icon-plane-y\");\n    sectionYButton.onClick = createNavToggler(sectionYButton, 'y');\n    parentButton.addControl(sectionYButton);\n\n    var sectionZButton = this.sectionZButton = new AVU.Button(\"toolbar-sectionTool-z\");\n    sectionZButton.setToolTip('Add Z plane');\n    sectionZButton.setIcon(\"adsk-icon-plane-z\");\n    sectionZButton.onClick = createNavToggler(sectionZButton, 'z');\n    parentButton.addControl(sectionZButton);\n\n    var sectionBoxButton = this.sectionBoxButton = new AVU.Button(\"toolbar-sectionTool-box\");\n    sectionBoxButton.setToolTip('Add box');\n    sectionBoxButton.setIcon(\"adsk-icon-box\");\n    sectionBoxButton.onClick = createNavToggler(sectionBoxButton, 'box');\n    parentButton.addControl(sectionBoxButton);\n\n    viewer.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, updateSectionButtons);\n};\n\n/**\n * @private\n */\nproto.destroyUI = function() {\n    \n    if (this.sectionToolButton) {\n        this.sectionToolButton.removeFromParent();\n        this.sectionToolButton = null;\n    }\n};\n\n/**\n * Activates a section plane for user to interact with.\n * It performs the same action as the UI button.\n * \n * @param {string} mode - Accepted values are 'x', 'y', 'z' and 'box' (in lowercase)\n * @returns {boolean} - true if the activation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#activate\n */\nproto.activate = function (mode) {\n    if (this.activeStatus && this.mode === mode) {\n        return;\n    }\n    this.enableSectionTool(true);\n    switch (mode) {\n        default:\n        case 'x':\n            this.tool.setSection('X');\n            this.mode = 'x';\n            break;\n        case 'y':\n            this.tool.setSection('Y');\n            this.mode = 'y';\n            break;\n        case 'z':\n            this.tool.setSection('Z');\n            this.mode = 'z';\n            break;\n        case 'box':\n            this.tool.setSection('BOX');\n            this.mode = 'box';\n            break;\n        }\n    this.activeStatus = true;\n    return true;\n};\n\n/**\n * Removes the section plane/box from the 3D canvas.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#deactivate\n * @returns {boolean} - returns true if deactivated, false otherwise.\n */\nproto.deactivate = function () {\n    if(this.activeStatus) {\n        this.tool.setActiveMode(\"\");\n        this.enableSectionTool(false);\n        this.activeStatus = false;\n        return true\n    }\n    return false;\n};\n\n\n/**\n * Invoked when the context menu is about to be created.\n * Adds additional entries to the context menu.\n *\n * @private\n */\nfunction onContextMenu(section, menu, status) {\n\n    if (!status.hasSelected)\n        return;\n\n    const viewer = section.viewer;\n    const event = status.event;\n\n    const bbox = viewer.impl.selector.getSelectionBounds();\n    menu.push({\n        title: 'Section Box',\n        target: section.setSectionBox.bind(section, bbox)\n    });\n\n    const selected = viewer.getSelection();\n    const intersection = viewer.impl.hitTest(status.canvasX, status.canvasY, false, selected);\n    \n    // Ensure that the selected object is the on that recieved the context click.\n    if (intersection && selected.indexOf(intersection.dbId) !== -1) {\n        menu.push({\n            title: 'Section Plane',\n            target: section.setSectionPlane.bind(section, intersection.face.normal, intersection.point)\n        });\n    }\n}\n\n\n// Make the extension available\nAutodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Section', SectionExtension);\n"],"sourceRoot":""}