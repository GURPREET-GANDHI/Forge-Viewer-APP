{"version":3,"sources":["webpack://Autodesk.Extensions.[name]/webpack/bootstrap","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/zstream.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/constants.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/utils/common.js","webpack://Autodesk.Extensions.[name]/./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/shaders/occlusion_vert.glsl","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/shaders/occlusion_frag.glsl","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/main/EventTypes.js","webpack://Autodesk.Extensions.[name]/./node_modules/css-loader/lib/css-base.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/workers/MainWorker-webML.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/index.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/deflate.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/deflate.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/trees.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/inflate.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/inflate.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/inffast.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/inftrees.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/gzheader.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/MemoryLimited.css?5549","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/MemoryLimited.css","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/addStyles.js","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/urls.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/OcclusionShader.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/OcclusionCulling.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/pageoutStatus.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/RenderBatchML.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/main/SvfPagingProxy.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/main/envinit.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/ModelML.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/render/DbidFragmentMap.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/main/SvfLoaderML.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/lmvtk/common/InputStreamML.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/MemoryLimited.js","webpack://Autodesk.Extensions.[name]/./extensions/MemoryLimited/file-loaders/main/WorkerCreatorML.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/messages.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/adler32.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/zlib/crc32.js","webpack://Autodesk.Extensions.[name]/./node_modules/pako/lib/utils/strings.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","input","next_in","avail_in","total_in","output","next_out","avail_out","total_out","msg","state","data_type","adler","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","TYPED_OK","Uint8Array","Uint16Array","Int32Array","_has","obj","assign","sources","Array","slice","arguments","length","source","shift","TypeError","shrinkBuf","buf","size","subarray","fnTyped","arraySet","dest","src","src_offs","len","dest_offs","set","flattenChunks","chunks","pos","chunk","result","fnUntyped","concat","apply","setTyped","on","Buf8","Buf16","Buf32","URL","window","webkitURL","content","url","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","e","Blob","Worker","createObjectURL","encodeURIComponent","Error","FRAGMENTS_LOADED_EVENT","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","JSON","stringify","sourceURLs","sourceRoot","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","push","pako","zlib_deflate","utils","strings","ZStream","Deflate","options","level","method","chunkSize","windowBits","memLevel","strategy","to","opt","raw","gzip","err","ended","strm","status","deflateInit2","header","deflateSetHeader","dictionary","dict","string2buf","deflateSetDictionary","_dict_set","deflate","deflator","data","_mode","onEnd","onData","buf2binstring","deflateEnd","deflateRaw","configuration_table","trees","adler32","crc32","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","f","zero","flush_pending","pending","pending_buf","pending_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","b","putShortMSB","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","str","start","_w_size","window_size","hash_size","head","wrap","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","_tr_init","deflateReset","ret","max_block_size","max_start","deflateInit","old_flush","beg","val","text","hcrc","extra","comment","time","os","charCodeAt","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","next","tmpDict","dictLength","deflateInfo","STORED_BLOCK","STATIC_TREES","DYN_TREES","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","w","send_bits","send_code","tree","bi_reverse","code","res","gen_codes","bits","next_code","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","k","v","j","compress_block","ltree","dtree","lc","lx","build_tree","desc","node","stree","h","xbits","base","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","bi_flush","zlib_inflate","GZheader","Inflate","inflateInit2","inflateGetHeader","inflateSetDictionary","inflate","inflator","next_out_utf8","tail","utf8str","allowBufError","binstring2buf","utf8border","buf2string","inflateEnd","inflateRaw","ungzip","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_MEM_ERROR","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","zswap32","q","InflateState","havedict","flags","dmax","check","total","wbits","wsize","whave","wnext","hold","offset","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","sane","back","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","end","copy","inflateInit","put","left","_in","_out","from","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","here","hbuf","order","inf_leave","done","xflags","extra_len","String","fromCharCode","inflateInfo","s_window","lcode","dcode","lmask","dmask","op","top","dolen","dodist","lbase","lext","dbase","dext","type","lens_index","codes","table","table_index","incr","fill","low","mask","min","max","root","curr","drop","used","huff","base_index","MAXBITS","offs","extra_index","transform","undefined","locals","fn","memo","stylesInDom","isOldIE","document","all","atob","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","update","remove","default","styleIndex","applyToSingletonTag","revokeObjectURL","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","oldSrc","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","OcclusionShader","uniforms","THREE","Vector3","rawShader","vertexShader","occlusion_vert","fragmentShader","occlusion_frag","avp","Autodesk","Viewing","Private","_white","Color","setRGB","OcclusionCulling","_renderer","_context","_camera","_settings","_occlusionMaterials","_occlusionTarget","_occlusionTest","_unitCubeVerts","_unitCubeIndices","_occlusionScene","destroyOcclusionTarget","dispose","addVerts","bboxVerts","toVerts","boxes","addIndices","bboxIndices","toIndices","indexBase","createBBoxGeometry","fragIds","Float32Array","geometry","BufferGeometry","addAttribute","BufferAttribute","streamingDraw","streamingIndex","createInstancedBBoxGeometry","minVerts","scaleVerts","minAttr","divisor","scaleAttr","numInstances","settings","initialize","glrenderer","context","logger","error","av","errorCodeString","ErrorCodes","BROWSER_WEBGL_NOT_SUPPORTED","onResize","colors","alphas","occlusionTest","threshold","useInstancing","packIds","Promise","reject","counts","visibleCount","supportsInstancedArrays","instanced","occlusionMaterial","createShaderMaterial","depthWrite","color","opacity","defaultAttributeValues","instRotate","blending","CustomBlending","blendDst","SrcColorFactor","blendSrc","ZeroFactor","blendEquation","AddEquation","transparent","createOcclusionMaterials","Scene","frustumCulled","maxSize","fragIdList","Math","mesh","Mesh","add","WebGLRenderTarget","deviceWidth","deviceHeight","minFilter","NearestFilter","magFilter","format","RGBAFormat","stencilBuffer","generateMipmaps","shareDepthFrom","getColorTarget","setClearColor","setRenderTarget","clear","render","clearBlend","children","readRenderTargetPixels","resolve","dtor","setCamera","camera","PAGEOUT_NONE","_tmpBox","Box3","MESH_RENDERFLAG","MeshFlags","RENDER_FLAGS","RenderBatchML","frags","fragOrder","RenderBatch","visibleStats","constructor","resetVisStatus","callback","drawMode","includeEmpty","indices","getIndices","sortByShaderPossible","sortByShaderDone","rflag","_rflag","_renderCount","iEnd","lastItem","getVizmesh","renderImportance","material","program","geometry_proxy","isFlagSet","MESH_TRAVERSED","_requireGeometry","drawOrderRender","drawn","MESH_DRAWN","setFlagFragment","mtl","getMaterial","_pagingProxy","onGeomTraversed","sortByShader","applyVisibility","vizflags","frustum","fragIdCb","checkCull","allHidden","applyVisCB","useThreeMesh","culled","getWorldBounds","intersects","intersectsBox","FrustumIntersector","OUTSIDE","pixelCullingEnable","area","projectedBoxArea","CONTAINS","areaConv","pixelCullingThreshold","evalCulling","visible","warn","geomId","geomids","geoms","getGeometry","onGeomCulled","hideLines","hidePoints","vfin","RenderFlags","RENDER_HIDDEN","MESH_VISIBLE","RENDER_HIGHLIGHTED","MESH_HIGHLIGHTED","MESH_HIDE","isLine","MESH_ISLINE","MESH_ISWIDELINE","isPoint","MESH_ISPOINT","evalVisibility","linesHidden","pointsHidden","fragIdCallback","fragId","packId","fragments","addGeomPackMissingLastFrame","drawModeIn","frustumIn","bbox","getBoundingBoxHidden","getBoundingBox","containment","geom","loadPackFile","PERFORM_OCCLUSION_TESTING","MEGA","setSettingsDisplay","api","display","panel","getSettingsPanel","checkbox","getControl","groundShadowChkBoxId","checkElement","row","parentElement","groundReflectionChkBoxId","SvfPagingProxy","loader","_extendObject","prop","_loader","debug","maxPageOutSize","onDemandLoading","PIXEL_CULLING_THRESHOLD","occlusionThreshold","occlusionTestThreshold","startOcclusionTestingPackCount","testPackfileCount","useOcclusionInstancing","automaticRefresh","boxProxyMaxCount","boxProxyMinScreen","reachLimit","geomidsmap","geomTravCount","loadedPacks","loadedPackfileCount","memoryOverhead","loadingPacks","loadingPacksSize","queuedPacks","packQueuedMap","queuedPacksSize","occludedPacks","occlusionCulledCount","packsPagedOut","traversedCounter","transparentCounter","resetCount","invalidateCount","moving","geompacks","svf","geommap","totalGeomSize","overheadSize","minMemoryLimit","lastPageOut","pageOutResetCounter","_packOrder","_visibleIds","_visibleWidth","_visibleHeight","_resumeNextFrame","_nextOrderToLoad","_nextFragToLoad","_loadOrderId","_fragOrder","_pfVisible","_packOrderMap","_firstReset","_lastResult","_loadOrderTimer","_pageOutStillPossible","_loadDoneSent","_occlusionCulling","viewer3DImpl","renderer","loadMissingGeometryHandler","resetCanPageOut","unloadPackFiles","delay","addEventListener","LOAD_MISSING_GEOMETRY","removeHooks","removeEventListener","getMemoryLimit","getMemoryInfo","effectiveLimit","loaded","preparedPackFilesSize","getLoadedMeshes","pack","inMemory","doLoadPackFile","occlusionTesting","loadGeometryMissingLastFrame","loadGeometryPack","unloadPackFile","unloadAll","pageOut","model","getFragmentList","traversed","bufferSize","unloadedSize","retainedGeoms","needCompaction","geomsList","travsed","currentCount","processMesh","meshIdx","mesh2frag","isArray","getGeometryId","partialBuffer","vb","buffer","ib","byteLength","removeGeometry","svfid","meshIndex","console","totalCount","newBuffer","ArrayBuffer","round","removeAndCompactGeometry","redrawIfIdle","invalidate","onPackFileLoaded","geomSize","pf","usize","meshes","resetCounter","loadedGeometrySize","checkLoadFinished","pack_workers","queued","geomPacksMissingLastFrame","onGeomLoadDone","doOnDemandLoadFinished","onPackFileLoading","onProcessReceivedMesh","getGeometryList","geomMemory","cancelPending","cancelGeometryPackLoading","resetIterator","lastCamera","reset","missingPacks","loading","_this","needResumeNextFrame","_packSort","a","wa","markVisibleGeoms","ids","getData","instanceTree","renderCount","idTarget","getIdTarget","width","height","copyVisibleIds","found","Number","enumNodeFragments","iterationDone","forcePageOut","pageStatus","isValid","loadedPackIds","packsSkipped","sort","unloaded","every","log","gc","loadFragsFromLoadOrder","pagingProxy","fragmentList","promise","occlusionTestTimer","waitingCount","delayPerWaiting","handleOcclusion","doOcclusionTest","queue","occluded","nextPackIds","setTimeout","packids","packList","lastIndexOf","findFragsForPackfile","then","queuedLen","pfOrder","getNumVisiblePFs","onLoadOrderCalculated","loadOrder","packOrder","pfVisible","keepPacks","automatic","clearTimeout","proxy","doReset","calculateLoadOrder","geomTraversed","mapIdx","instanceCount","geomCulled","rolloverMethod","rolloverObjectViewport","renderPartMethod","renderScenePart","_RenderBatchML","scene","want_colorTarget","want_saoTarget","want_idTarget","updateLights","sortObjects","matman","toggleDepthWriteTransparent","toggleGroundShadow","toggleGroundReflection","showShadows","hideShadows","TOOLBAR_CREATED_EVENT","VIEWER_RESIZE_EVENT","ev","prefs","groundShadow","groundReflection","PHASE_VISIBILITY","ModelML","modelData","Model","_initialize","_resetIterator","_nextBatch","nextBatch","_dtor","_visibilityMode","RENDER_NORMAL","_animReq","animCallback","requestAnimationFrame","frameUpdatePaging","scenes","getIterator","getGeomScenes","calculateBounds","cancelAnimationFrame","resetType","ResetFlags","RESET_NORMAL","iterator","RESET_REDRAW","setFlagGlobal","RESET_RELOAD","_pageOutStatus","is2d","sortByDepth","sortDone","sortByMaterial","DbidFragmentMap","fragToDbId","dbIdToFrags","dbIds","dbId","buildDbIdToFragMap","storage","InstanceTreeStorage","emptyArray","oneArray","setNode","flatten","InstanceTreeAccess","setFragmentList","InstanceTree","NUM_WORKER_THREADS","isNodeJS","isMobileDevice","_fragLoadedEvent","getFragIds","rm","meshesLength","meshid","fragIndexes","SvfLoader","SvfLoaderML","config","memoryOpts","viewer3Dimpl","config3d","memory","memLimit","parseInt","force","urlValue","getParameterByName","isForced","charAt","toLowerCase","info","isLimited","models","modelQueue","getModels","getHiddenModels","processMemoryOptions","isAndroidDevice","isIOSDevice","isFirefox","isMac","isChrome","isSafari","newLimit","svfLoadOrderWorker","terminate","initWorkerScript","initWorkerScriptML","createWorkerWithIntercept","wr","createWorkerWithInterceptML","doOperation","operation","optLoad","memoryOptimizedSvfLoading","perfOpt","forceMemoryOptimizedMode","forceMemoryOptimizedModeOnSvfLoading","postMessage","startWorkers","loadedPacksCount","createModel","loadFile","path","onDone","onWorkerStart","disable","forceDisableOnDemandLoading","bubbleNode","modelExtensions","findParentGeom2Dor3D","extensions","clearAllEventListenerWithIntercept","pp","t0","Date","getTime","scope","packFileWorkerComplete","worker","onMeshLoad","ew","mdata","processReceivedMesh","byteSize","GEOMETRY_OVERHEAD","dispatchEvent","progress","signalProgress","ProgressState","LOADING","workerId","message","failedToLoadPacksCount","failedToLoadSomeGeometryPacks","numWorkers","addEventListenerWithIntercept","which","uri","partPacksLoadDone","xfer","pathToURL","basePath","packNormals","createWireframe","getMetadata","queryParams","initLoadContext","onModelRootLoadDone","overhead","gpuSize","GPU_MEMORY_LIMIT","skipPropertyDb","buildInstanceTree","fragId2dbId","createWorkerML","setUUID","urn","projectionMatrix","elements","matrixWorldInverse","aspect","position","x","y","z","clientWidth","clientHeight","loadDone","TEXTURES_LOADED_EVENT","enumTextures","tex","TextureLoader","calculateTextureSize","loadModelTextures","wasDone","t1","now","modelStats","category","is_f2d","has_prism","hasPrism","load_time","geometry_size","meshes_count","fragments_count","getCount","load_pack_count","svfUrn","track","onLoadComplete","geomList","printStats","require","InputStreamML","range","compressedBuffer","compressedByteLength","compressedOffset","decompressEnd","convBuf","convUint8","convUint16","convInt32","convUint32","Uint32Array","convFloat32","convFloat64","Float64Array","COMPRESSED_chunk_SIZE","DECOMPRESSED_chunk_SIZE","chunksByteLengthMax","chunksByteLengthMin","chunkPointer","chunkOffset","tempchunk","startIdx","endIdx","getInflate","prepare","self","off","donotclear","floor","expectEnd","reachEnd","ensurechunkData","chunkLen","chunkIdx","seek","getBytes","getVarints","shiftBy","getUint8","getUint16","getInt16","tmp","getInt32","dst","getUint32","getFloat32","getFloat64","getString","decodeURIComponent","escape","MemoryLimitedExtension","viewer","Extension","_registerOriginal","load","updateProgressBarStyle","event","progressbar","setStyle","FileLoaderManager","unregisterFileLoader","registerFileLoader","MODEL_ROOT_LOADED_EVENT","unload","removeStyle","activate","deactivate","isActive","lastMem","impl","returnValue","addStats","ave","AutodeskNamespace","theExtensionManager","registerExtension","SvfWorkerML","checkEvent","assetRequest","interceptListeners","listener","callbackFn","arg","removeEventListenerWithIntercept","popCallback","2","1","0","s1","s2","crcTable","makeTable","crc","STR_APPLY_OK","STR_APPLY_UIA_OK","__","_utf8len","c2","m_pos","str_len","buf_len","out","c_len","utf16buf"],"mappings":"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","file":"MemoryLimited/MemoryLimited.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 543);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","module.exports = \"\\n#include<instancing_decl_vert>\\nvarying vec4 finalColor;\\nuniform vec3 color;\\nuniform float opacity;\\nvoid main() {\\n    gl_Position = projectionMatrix * (viewMatrix * vec4(getInstancePos(position), 1.0));\\n    finalColor = vec4(color, opacity);\\n}\\n\";","module.exports = \"precision lowp float;\\nvarying vec4 finalColor;\\nvoid main() {\\n    gl_FragColor = finalColor;\\n}\\n\";","    \"use strict\";\n\n    var av = module.exports;\n\n    /**\n     * Fired when fragments are loaded on demand\n     * @event Autodesk.Viewing#FRAGMENTS_LOADED_EVENT\n     * @property {Model}    model - The model that loaded the fragment\n     * @property {function} getFragIds - A function used to return the list of fragment ids loaded\n     * @property {Object}   data - Data use to generate the fragment ids\n     */\n    av.FRAGMENTS_LOADED_EVENT          = 'fragmentLoaded';\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = function() {\n  return require(\"!!/mnt/data/jenkins/workspace/A360_firefly.js_master/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"/*!\\n * LMV v7.11.0\\n * \\n * Copyright 2020 Autodesk, Inc.\\n * All rights reserved.\\n * \\n * This computer source code and related instructions and comments are the\\n * unpublished confidential and proprietary information of Autodesk, Inc.\\n * and are protected under Federal copyright and state trade secret law.\\n * They may not be disclosed to, copied or used by any third party without\\n * the prior written consent of Autodesk, Inc.\\n * \\n * Autodesk Forge Viewer Usage Limitations:\\n * \\n * The Autodesk Forge viewer can only be used to view files generated by\\n * Autodesk Forge services. The Autodesk Forge Viewer JavaScript must be\\n * delivered from an Autodesk hosted URL.\\n */!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\\\"object\\\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&e&&\\\"string\\\"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\\\"a\\\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\\\"\\\",n(n.s=35)}([function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return o}));var r,i,s,a,o=function(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0};o.prototype={constructor:o,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error(\\\"index is out of range: \\\"+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\\\"index is out of range: \\\"+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn(\\\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\\\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn(\\\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\\\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn(\\\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\\\"),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyMatrix3:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r+i[12],this.y=i[1]*e+i[5]*n+i[9]*r+i[13],this.z=i[2]*e+i[6]*n+i[10]*r+i[14],this},applyProjection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this},applyQuaternion:function(t){var e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,h=o*e+s*r-a*n,u=o*n+a*e-i*r,c=o*r+i*n-s*e,l=-i*e-s*n-a*r;return this.x=h*o+l*-i+u*-a-c*-s,this.y=u*o+l*-s+c*-i-h*-a,this.z=c*o+l*-a+h*-s-u*-i,this},transformDirection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(t,e){return void 0===s&&(s=new o,a=new o),s.set(t,t,t),a.set(e,e,e),this.clamp(s,a)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t),this},cross:function(t,e){if(void 0!==e)return console.warn(\\\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\\\"),this.crossVectors(t,e);var n=this.x,r=this.y,i=this.z;return this.x=r*t.z-i*t.y,this.y=i*t.x-n*t.z,this.z=n*t.y-r*t.x,this},crossVectors:function(t,e){var n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this},projectOnVector:function(t){return void 0===r&&(r=new o),r.copy(t).normalize(),i=this.dot(r),this.copy(r).multiplyScalar(i)},projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new o),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new o),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r},setEulerFromRotationMatrix:function(t,e){console.error(\\\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\\\")},setEulerFromQuaternion:function(t,e){console.error(\\\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\\\")},getPositionFromMatrix:function(t){return console.warn(\\\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\\\"),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn(\\\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\\\"),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn(\\\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\\\"),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),n=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),r=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=n,this.z=r,this},setFromMatrixColumn:function(t,e){var n=4*t,r=e.elements;return this.x=r[n],this.y=r[n+1],this.z=r[n+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromAttribute:function(t,e,n){return void 0===n&&(n=0),e=e*t.itemSize+n,this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this}}},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return r}));var r=function(t){this.elements=t?new Float64Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]):new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};r.prototype={constructor:r,set:function(t,e,n,r,i,s,a,o,h,u,c,l,f,d,m,p){var y=this.elements;return y[0]=t,y[4]=e,y[8]=n,y[12]=r,y[1]=i,y[5]=s,y[9]=a,y[13]=o,y[2]=h,y[6]=u,y[10]=c,y[14]=l,y[3]=f,y[7]=d,y[11]=m,y[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},makeRotationFromQuaternion:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z,s=t.w,a=n+n,o=r+r,h=i+i,u=n*a,c=n*o,l=n*h,f=r*o,d=r*h,m=i*h,p=s*a,y=s*o,v=s*h;return e[0]=1-(f+m),e[4]=c-v,e[8]=l+y,e[1]=c+v,e[5]=1-(u+m),e[9]=d-p,e[2]=l-y,e[6]=d+p,e[10]=1-(u+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},multiply:function(t){return this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],h=n[12],u=n[1],c=n[5],l=n[9],f=n[13],d=n[2],m=n[6],p=n[10],y=n[14],v=n[3],g=n[7],x=n[11],_=n[15],b=r[0],w=r[4],k=r[8],z=r[12],E=r[1],S=r[5],M=r[9],A=r[13],I=r[2],T=r[6],C=r[10],O=r[14],R=r[3],P=r[7],F=r[11],U=r[15];return i[0]=s*b+a*E+o*I+h*R,i[4]=s*w+a*S+o*T+h*P,i[8]=s*k+a*M+o*C+h*F,i[12]=s*z+a*A+o*O+h*U,i[1]=u*b+c*E+l*I+f*R,i[5]=u*w+c*S+l*T+f*P,i[9]=u*k+c*M+l*C+f*F,i[13]=u*z+c*A+l*O+f*U,i[2]=d*b+m*E+p*I+y*R,i[6]=d*w+m*S+p*T+y*P,i[10]=d*k+m*M+p*C+y*F,i[14]=d*z+m*A+p*O+y*U,i[3]=v*b+g*E+x*I+_*R,i[7]=v*w+g*S+x*T+_*P,i[11]=v*k+g*M+x*C+_*F,i[15]=v*z+g*A+x*O+_*U,this},multiplyToArray:function(t,e,n){var r=this.elements;return this.multiplyMatrices(t,e),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],h=t[13],u=t[2],c=t[6],l=t[10],f=t[14];return t[3]*(+i*o*c-r*h*c-i*a*l+n*h*l+r*a*f-n*o*f)+t[7]*(+e*o*f-e*h*l+i*s*l-r*s*f+r*h*u-i*o*u)+t[11]*(+e*h*c-e*a*f-i*s*c+n*s*f+i*a*u-n*h*u)+t[15]*(-r*a*u-e*o*c+e*a*l+r*s*c-n*s*l+n*o*u)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,r=t.elements,i=r[0],s=r[4],a=r[8],o=r[12],h=r[1],u=r[5],c=r[9],l=r[13],f=r[2],d=r[6],m=r[10],p=r[14],y=r[3],v=r[7],g=r[11],x=r[15];n[0]=c*p*v-l*m*v+l*d*g-u*p*g-c*d*x+u*m*x,n[4]=o*m*v-a*p*v-o*d*g+s*p*g+a*d*x-s*m*x,n[8]=a*l*v-o*c*v+o*u*g-s*l*g-a*u*x+s*c*x,n[12]=o*c*d-a*l*d-o*u*m+s*l*m+a*u*p-s*c*p,n[1]=l*m*y-c*p*y-l*f*g+h*p*g+c*f*x-h*m*x,n[5]=a*p*y-o*m*y+o*f*g-i*p*g-a*f*x+i*m*x,n[9]=o*c*y-a*l*y-o*h*g+i*l*g+a*h*x-i*c*x,n[13]=a*l*f-o*c*f+o*h*m-i*l*m-a*h*p+i*c*p,n[2]=u*p*y-l*d*y+l*f*v-h*p*v-u*f*x+h*d*x,n[6]=o*d*y-s*p*y-o*f*v+i*p*v+s*f*x-i*d*x,n[10]=s*l*y-o*u*y+o*h*v-i*l*v-s*h*x+i*u*x,n[14]=o*u*f-s*l*f-o*h*d+i*l*d+s*h*p-i*u*p,n[3]=c*d*y-u*m*y-c*f*v+h*m*v+u*f*g-h*d*g,n[7]=s*m*y-a*d*y+a*f*v-i*m*v-s*f*g+i*d*g,n[11]=a*u*y-s*c*y-a*h*v+i*c*v+s*h*g-i*u*g,n[15]=s*c*f-a*u*f+a*h*d-i*c*d-s*h*m+i*u*m;var _=i*n[0]+h*n[4]+f*n[8]+y*n[12];if(0==_){var b=\\\"Matrix4.getInverse(): can't invert matrix, determinant is 0\\\";if(e)throw new Error(b);return console.warn(b),this.identity(),this}return this.multiplyScalar(1/_),this},scale:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,h=i*s,u=i*a;return this.set(h*s+n,h*a-r*o,h*o+r*a,0,h*a+r*o,u*a+n,u*o-r*s,0,h*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},compose:function(t,e,n){return this.makeRotationFromQuaternion(e),this.scale(n),this.setPosition(t),this},transformPoint:function(t){var e=t.x,n=t.y,r=t.z,i=this.elements;return t.x=i[0]*e+i[4]*n+i[8]*r+i[12],t.y=i[1]*e+i[5]*n+i[9]*r+i[13],t.z=i[2]*e+i[6]*n+i[10]*r+i[14],t},transformDirection:function(t){var e=t.x,n=t.y,r=t.z,i=this.elements;t.x=i[0]*e+i[4]*n+i[8]*r,t.y=i[1]*e+i[5]*n+i[9]*r,t.z=i[2]*e+i[6]*n+i[10]*r;var s=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);if(s>0){var a=1/s;t.x*=a,t.y*=a,t.z*=a}return t},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){return new r(this.elements instanceof Float64Array).fromArray(this.elements)}}},function(t,e,n){\\\"use strict\\\";(function(t){function r(){return\\\"undefined\\\"!=typeof window&&null!==window?window:\\\"undefined\\\"!=typeof self&&null!==self?self:t}n.d(e,\\\"a\\\",(function(){return r})),n.d(e,\\\"c\\\",(function(){return o})),n.d(e,\\\"d\\\",(function(){return u})),n.d(e,\\\"b\\\",(function(){return d}));var i=r(),s=i&&i.document,a=\\\"undefined\\\"!=typeof navigator,o=function(){return!a},h=a&&!!navigator.userAgent.match(/Edge|Trident\\\\/7\\\\./);function u(){return\\\"undefined\\\"!=typeof window&&(\\\"ontouchstart\\\"in window||navigator.maxTouchPoints>0)}\\\"undefined\\\"!=typeof window&&h&&function(){function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=s.createEvent(\\\"CustomEvent\\\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}t.prototype=i.CustomEvent.prototype,i.CustomEvent=t}(),ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=function(t,e){if(!e||e>this.byteLength?e=this.byteLength:e<0&&(e=this.byteLength+e)<0&&(e=0),t<0&&(t=this.byteLength+t)<0&&(t=0),e<=t)return new ArrayBuffer;for(var n=e-t,r=new Uint8Array(this,t,n),i=new Uint8Array(n),s=0;s<n;s++)i[s]=r[s];return i.buffer}),Math.log2=Math.log2||function(t){return Math.log(t)/Math.LN2},\\\"undefined\\\"!=typeof window&&(i.BlobBuilder=i.BlobBuilder||i.WebKitBlobBuilder||i.MozBlobBuilder||i.MSBlobBuilder);var c=a&&(/ip(ad|hone|od)/.test(navigator.userAgent.toLowerCase())||\\\"MacIntel\\\"===navigator.platform&&navigator.maxTouchPoints>1);function l(){return c}var f=a&&-1!==navigator.userAgent.toLowerCase().indexOf(\\\"android\\\");function d(){return!!a&&(l()||f)}!function(){var t=r();t.performance||(t.performance=Date)}(),Number.isInteger=Number.isInteger||function(t){return\\\"number\\\"==typeof t&&isFinite(t)&&Math.floor(t)===t},String.prototype.repeat=String.prototype.repeat||function(t){if(t<1)return\\\"\\\";for(var e=\\\"\\\",n=this.valueOf();t>1;)1&t&&(e+=n),t>>=1,n+=n;return e+n},Array.prototype.fill||Object.defineProperty(Array.prototype,\\\"fill\\\",{enumerable:!1,value:function(t,e,n){e=void 0===e?0:e,n=void 0===n?this.length:n;for(var r=e;r<n;++r)this[r]=t}}),Int32Array.prototype.lastIndexOf=Int32Array.prototype.lastIndexOf||function(t,e){return Array.prototype.lastIndexOf.call(this,t,e)},Array.prototype.find||Object.defineProperty(Array.prototype,\\\"find\\\",{enumerable:!1,value:function(t,e){for(var n=this.length,r=0;r<n;++r){var i=this[r];if(t.call(e,i,r,this))return i}}}),\\\"function\\\"!=typeof Object.assign&&Object.defineProperty(Object,\\\"assign\\\",{value:function(t,e){if(null==t)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var n=Object(t),r=1;r<arguments.length;r++){var i=arguments[r];if(null!=i)for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(n[s]=i[s])}return n},writable:!0,configurable:!0}),\\\"undefined\\\"==typeof window||!h&&!l()||HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,\\\"toBlob\\\",{value:function(t,e,n){var r=this;setTimeout((function(){for(var i=atob(r.toDataURL(e,n).split(\\\",\\\")[1]),s=i.length,a=new Uint8Array(s),o=0;o<s;o++)a[o]=i.charCodeAt(o);t(new Blob([a],{type:e||\\\"image/png\\\"}))}))}}),Uint8Array.prototype.slice||(Uint8Array.prototype.slice=function(t,e){if(e=void 0!==e?e:this.length,\\\"[object Array]\\\"===Object.prototype.toString.call(this))return _slice.call(this,t,e);var n,r,i=[],s=this.length,a=t||0;a=a>=0?a:Math.max(0,s+a);var o=\\\"number\\\"==typeof e?Math.min(e,s):s;if(e<0&&(o=s+e),(r=o-a)>0)if(i=new Array(r),this.charAt)for(n=0;n<r;n++)i[n]=this.charAt(a+n);else for(n=0;n<r;n++)i[n]=this[a+n];return i})}).call(this,n(21))},function(t,e,n){(function(t){function e(t){return(e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t})(t)}var n,r,i,s,a,o,h,u,c,l,f,d,m,p,y,v,g={REVISION:\\\"71\\\"};\\\"object\\\"===e(t)&&(t.exports=g),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),g.log=function(){console.log.apply(console,arguments)},g.warn=function(){console.warn.apply(console,arguments)},g.error=function(){console.error.apply(console,arguments)},g.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},g.CullFaceNone=0,g.CullFaceBack=1,g.CullFaceFront=2,g.CullFaceFrontBack=3,g.FrontFaceDirectionCW=0,g.FrontFaceDirectionCCW=1,g.BasicShadowMap=0,g.PCFShadowMap=1,g.PCFSoftShadowMap=2,g.FrontSide=0,g.BackSide=1,g.DoubleSide=2,g.NoShading=0,g.FlatShading=1,g.SmoothShading=2,g.NoColors=0,g.FaceColors=1,g.VertexColors=2,g.NoBlending=0,g.NormalBlending=1,g.AdditiveBlending=2,g.SubtractiveBlending=3,g.MultiplyBlending=4,g.CustomBlending=5,g.AddEquation=100,g.SubtractEquation=101,g.ReverseSubtractEquation=102,g.MinEquation=103,g.MaxEquation=104,g.ZeroFactor=200,g.OneFactor=201,g.SrcColorFactor=202,g.OneMinusSrcColorFactor=203,g.SrcAlphaFactor=204,g.OneMinusSrcAlphaFactor=205,g.DstAlphaFactor=206,g.OneMinusDstAlphaFactor=207,g.DstColorFactor=208,g.OneMinusDstColorFactor=209,g.SrcAlphaSaturateFactor=210,g.MultiplyOperation=0,g.MixOperation=1,g.AddOperation=2,g.UVMapping=300,g.CubeReflectionMapping=301,g.CubeRefractionMapping=302,g.EquirectangularReflectionMapping=303,g.EquirectangularRefractionMapping=304,g.SphericalReflectionMapping=305,g.RepeatWrapping=1e3,g.ClampToEdgeWrapping=1001,g.MirroredRepeatWrapping=1002,g.NearestFilter=1003,g.NearestMipMapNearestFilter=1004,g.NearestMipMapLinearFilter=1005,g.LinearFilter=1006,g.LinearMipMapNearestFilter=1007,g.LinearMipMapLinearFilter=1008,g.UnsignedByteType=1009,g.ByteType=1010,g.ShortType=1011,g.UnsignedShortType=1012,g.IntType=1013,g.UnsignedIntType=1014,g.FloatType=1015,g.HalfFloatType=1025,g.UnsignedShort4444Type=1016,g.UnsignedShort5551Type=1017,g.UnsignedShort565Type=1018,g.AlphaFormat=1019,g.RGBFormat=1020,g.RGBAFormat=1021,g.LuminanceFormat=1022,g.LuminanceAlphaFormat=1023,g.RGBEFormat=g.RGBAFormat,g.RGB_S3TC_DXT1_Format=2001,g.RGBA_S3TC_DXT1_Format=2002,g.RGBA_S3TC_DXT3_Format=2003,g.RGBA_S3TC_DXT5_Format=2004,g.RGB_PVRTC_4BPPV1_Format=2100,g.RGB_PVRTC_2BPPV1_Format=2101,g.RGBA_PVRTC_4BPPV1_Format=2102,g.RGBA_PVRTC_2BPPV1_Format=2103,g.Projector=function(){g.error(\\\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\\\"),this.projectVector=function(t,e){g.warn(\\\"THREE.Projector: .projectVector() is now vector.project().\\\"),t.project(e)},this.unprojectVector=function(t,e){g.warn(\\\"THREE.Projector: .unprojectVector() is now vector.unproject().\\\"),t.unproject(e)},this.pickingRay=function(t,e){g.error(\\\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\\\")}},g.CanvasRenderer=function(){g.error(\\\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\\\"),this.domElement=document.createElement(\\\"canvas\\\"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},g.Quaternion=function(t,e,n,r){this._x=t||0,this._y=e||0,this._z=n||0,this._w=void 0!==r?r:1},g.Quaternion.prototype={constructor:g.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof g.Euler==!1)throw new Error(\\\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\\\");var n=Math.cos(t._x/2),r=Math.cos(t._y/2),i=Math.cos(t._z/2),s=Math.sin(t._x/2),a=Math.sin(t._y/2),o=Math.sin(t._z/2);return\\\"XYZ\\\"===t.order?(this._x=s*r*i+n*a*o,this._y=n*a*i-s*r*o,this._z=n*r*o+s*a*i,this._w=n*r*i-s*a*o):\\\"YXZ\\\"===t.order?(this._x=s*r*i+n*a*o,this._y=n*a*i-s*r*o,this._z=n*r*o-s*a*i,this._w=n*r*i+s*a*o):\\\"ZXY\\\"===t.order?(this._x=s*r*i-n*a*o,this._y=n*a*i+s*r*o,this._z=n*r*o+s*a*i,this._w=n*r*i-s*a*o):\\\"ZYX\\\"===t.order?(this._x=s*r*i-n*a*o,this._y=n*a*i+s*r*o,this._z=n*r*o-s*a*i,this._w=n*r*i+s*a*o):\\\"YZX\\\"===t.order?(this._x=s*r*i+n*a*o,this._y=n*a*i+s*r*o,this._z=n*r*o-s*a*i,this._w=n*r*i-s*a*o):\\\"XZY\\\"===t.order&&(this._x=s*r*i-n*a*o,this._y=n*a*i-s*r*o,this._z=n*r*o+s*a*i,this._w=n*r*i+s*a*o),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,n=t.elements,r=n[0],i=n[4],s=n[8],a=n[1],o=n[5],h=n[9],u=n[2],c=n[6],l=n[10],f=r+o+l;return f>0?(e=.5/Math.sqrt(f+1),this._w=.25/e,this._x=(c-h)*e,this._y=(s-u)*e,this._z=(a-i)*e):r>o&&r>l?(e=2*Math.sqrt(1+r-o-l),this._w=(c-h)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(s+u)/e):o>l?(e=2*Math.sqrt(1+o-r-l),this._w=(s-u)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(h+c)/e):(e=2*Math.sqrt(1+l-r-o),this._w=(a-i)/e,this._x=(s+u)/e,this._y=(h+c)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(t,e){return void 0===n&&(n=new g.Vector3),(r=t.dot(e)+1)<1e-6?(r=0,Math.abs(t.x)>Math.abs(t.z)?n.set(-t.y,t.x,0):n.set(0,-t.z,t.y)):n.crossVectors(t,e),this._x=n.x,this._y=n.y,this._z=n.z,this._w=r,this.normalize(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\\\"),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var n=t._x,r=t._y,i=t._z,s=t._w,a=e._x,o=e._y,h=e._z,u=e._w;return this._x=n*u+s*a+r*h-i*o,this._y=r*u+s*o+i*a-n*h,this._z=i*u+s*h+n*o-r*a,this._w=s*u-n*a-r*o-i*h,this.onChangeCallback(),this},multiplyVector3:function(t){return g.warn(\\\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\\\"),t.applyQuaternion(this)},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var n=this._x,r=this._y,i=this._z,s=this._w,a=s*t._w+n*t._x+r*t._y+i*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;var o=Math.acos(a),h=Math.sqrt(1-a*a);if(Math.abs(h)<.001)return this._w=.5*(s+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;var u=Math.sin((1-e)*o)/h,c=Math.sin(e*o)/h;return this._w=s*u+this._w*c,this._x=n*u+this._x*c,this._y=r*u+this._y*c,this._z=i*u+this._z*c,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new g.Quaternion(this._x,this._y,this._z,this._w)}},g.Quaternion.slerp=function(t,e,n,r){return n.copy(t).slerp(e,r)},g.Vector2=function(t,e){this.x=t||0,this.y=e||0},g.Vector2.prototype={constructor:g.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error(\\\"index is out of range: \\\"+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error(\\\"index is out of range: \\\"+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\\\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},sub:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\\\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e}else this.x=0,this.y=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(t,e){return void 0===i&&(i=new g.Vector2,s=new g.Vector2),i.set(t,t),s.set(e,e),this.clamp(i,s)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t),this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromAttribute:function(t,e,n){return void 0===n&&(n=0),e=e*t.itemSize+n,this.x=t.array[e],this.y=t.array[e+1],this},clone:function(){return new g.Vector2(this.x,this.y)}},g.Vector3=function(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0},g.Vector3.prototype={constructor:g.Vector3,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error(\\\"index is out of range: \\\"+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error(\\\"index is out of range: \\\"+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\\\"),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\\\"),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\\\"),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t instanceof g.Euler==0&&g.error(\\\"THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.\\\"),void 0===o&&(o=new g.Quaternion),this.applyQuaternion(o.setFromEuler(t)),this},applyAxisAngle:function(){var t;return function(e,n){return void 0===t&&(t=new g.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,n)),this}}(),applyMatrix3:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r+i[12],this.y=i[1]*e+i[5]*n+i[9]*r+i[13],this.z=i[2]*e+i[6]*n+i[10]*r+i[14],this},applyProjection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*s,this},applyQuaternion:function(t){var e=this.x,n=this.y,r=this.z,i=t.x,s=t.y,a=t.z,o=t.w,h=o*e+s*r-a*n,u=o*n+a*e-i*r,c=o*r+i*n-s*e,l=-i*e-s*n-a*r;return this.x=h*o+l*-i+u*-a-c*-s,this.y=u*o+l*-s+c*-i-h*-a,this.z=c*o+l*-a+h*-s-u*-i,this},project:function(t){return void 0===a&&(a=new g.Matrix4),a.multiplyMatrices(t.projectionMatrix,a.getInverse(t.matrixWorld)),this.applyProjection(a)},unproject:function(){var t;return function(e){return void 0===t&&(t=new g.Matrix4),t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyProjection(t)}}(),transformDirection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var t,e;return function(n,r){return void 0===t&&(t=new g.Vector3,e=new g.Vector3),t.set(n,n,n),e.set(r,r,r),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t),this},cross:function(t,e){if(void 0!==e)return g.warn(\\\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\\\"),this.crossVectors(t,e);var n=this.x,r=this.y,i=this.z;return this.x=r*t.z-i*t.y,this.y=i*t.x-n*t.z,this.z=n*t.y-r*t.x,this},crossVectors:function(t,e){var n=t.x,r=t.y,i=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-i*a,this.y=i*s-n*o,this.z=n*a-r*s,this},projectOnVector:function(){var t,e;return function(n){return void 0===t&&(t=new g.Vector3),t.copy(n).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new g.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new g.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos(g.Math.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r},setEulerFromRotationMatrix:function(t,e){g.error(\\\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\\\")},setEulerFromQuaternion:function(t,e){g.error(\\\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\\\")},getPositionFromMatrix:function(t){return g.warn(\\\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\\\"),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return g.warn(\\\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\\\"),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return g.warn(\\\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\\\"),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),n=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),r=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=n,this.z=r,this},setFromMatrixColumn:function(t,e){var n=4*t,r=e.elements;return this.x=r[n],this.y=r[n+1],this.z=r[n+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromAttribute:function(t,e,n){return void 0===n&&(n=0),e=e*t.itemSize+n,this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this},clone:function(){return new g.Vector3(this.x,this.y,this.z)}},g.Box2=function(t,e){this.min=void 0!==t?t:new g.Vector2(1/0,1/0),this.max=void 0!==e?e:new g.Vector2(-1/0,-1/0)},g.Box2.prototype={constructor:g.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new g.Vector2;return function(e,n){var r=t.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new g.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new g.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new g.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new g.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new g.Vector2;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new g.Box2).copy(this)}},g.Box3=function(t,e){this.min=void 0!==t?t:new g.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new g.Vector3(-1/0,-1/0,-1/0)},g.Box3.prototype={constructor:g.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new g.Vector3;return function(e,n){var r=t.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}}(),setFromObject:function(){var t=new g.Vector3;return function(e){var n=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse((function(e){var r=e.geometry;if(void 0!==r)if(r instanceof g.Geometry)for(var i=r.vertices,s=0,a=i.length;s<a;s++)t.copy(i[s]),t.applyMatrix4(e.matrixWorld),n.expandByPoint(t);else if(r instanceof g.BufferGeometry&&void 0!==r.attributes.position){var o=r.attributes.position.array;for(s=0,a=o.length;s<a;s+=3)t.set(o[s],o[s+1],o[s+2]),t.applyMatrix4(e.matrixWorld),n.expandByPoint(t)}})),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new g.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new g.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new g.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new g.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new g.Vector3;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new g.Vector3;return function(e){var n=e||new g.Sphere;return n.center=this.center(),n.radius=.5*this.size(t).length(),n}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:(h=[new g.Vector3,new g.Vector3,new g.Vector3,new g.Vector3,new g.Vector3,new g.Vector3,new g.Vector3,new g.Vector3],function(t){return h[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),h[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),h[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),h[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),h[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),h[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),h[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),h[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(h),this}),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new g.Box3).copy(this)}},g.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&g.error(\\\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\\\")},g.Matrix3.prototype={constructor:g.Matrix3,set:function(t,e,n,r,i,s,a,o,h){var u=this.elements;return u[0]=t,u[3]=e,u[6]=n,u[1]=r,u[4]=i,u[7]=s,u[2]=a,u[5]=o,u[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){var e=t.elements;return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(t){return g.warn(\\\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\\\"),t.applyMatrix3(this)},multiplyVector3Array:function(t){return g.warn(\\\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\\\"),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new g.Vector3;return function(e,n,r){void 0===n&&(n=0),void 0===r&&(r=e.length);for(var i=0,s=n;i<r;i+=3,s+=3)t.x=e[s],t.y=e[s+1],t.z=e[s+2],t.applyMatrix3(this),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z;return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],s=t[4],a=t[5],o=t[6],h=t[7],u=t[8];return e*s*u-e*a*h-n*i*u+n*a*o+r*i*h-r*s*o},getInverse:function(t,e){var n=t.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9],r[1]=-n[10]*n[1]+n[2]*n[9],r[2]=n[6]*n[1]-n[2]*n[5],r[3]=-n[10]*n[4]+n[6]*n[8],r[4]=n[10]*n[0]-n[2]*n[8],r[5]=-n[6]*n[0]+n[2]*n[4],r[6]=n[9]*n[4]-n[5]*n[8],r[7]=-n[9]*n[0]+n[1]*n[8],r[8]=n[5]*n[0]-n[1]*n[4];var i=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===i){var s=\\\"Matrix3.getInverse(): can't invert matrix, determinant is 0\\\";if(e)throw new Error(s);return g.warn(s),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){return(new g.Matrix3).fromArray(this.elements)}},g.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&g.error(\\\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\\\")},g.Matrix4.prototype={constructor:g.Matrix4,set:function(t,e,n,r,i,s,a,o,h,u,c,l,f,d,m,p){var y=this.elements;return y[0]=t,y[4]=e,y[8]=n,y[12]=r,y[1]=i,y[5]=s,y[9]=a,y[13]=o,y[2]=h,y[6]=u,y[10]=c,y[14]=l,y[3]=f,y[7]=d,y[11]=m,y[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return g.warn(\\\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\\\"),this.copyPosition(t)},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){var r=this.elements;return t.set(r[0],r[1],r[2]),e.set(r[4],r[5],r[6]),n.set(r[8],r[9],r[10]),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(){var t=new g.Vector3;return function(e){var n=this.elements,r=e.elements,i=1/t.set(r[0],r[1],r[2]).length(),s=1/t.set(r[4],r[5],r[6]).length(),a=1/t.set(r[8],r[9],r[10]).length();return n[0]=r[0]*i,n[1]=r[1]*i,n[2]=r[2]*i,n[4]=r[4]*s,n[5]=r[5]*s,n[6]=r[6]*s,n[8]=r[8]*a,n[9]=r[9]*a,n[10]=r[10]*a,this}}(),makeRotationFromEuler:function(t){t instanceof g.Euler==!1&&g.error(\\\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\\\");var e=this.elements,n=t.x,r=t.y,i=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(r),h=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if(\\\"XYZ\\\"===t.order){var l=s*u,f=s*c,d=a*u,m=a*c;e[0]=o*u,e[4]=-o*c,e[8]=h,e[1]=f+d*h,e[5]=l-m*h,e[9]=-a*o,e[2]=m-l*h,e[6]=d+f*h,e[10]=s*o}else if(\\\"YXZ\\\"===t.order){var p=o*u,y=o*c,v=h*u,x=h*c;e[0]=p+x*a,e[4]=v*a-y,e[8]=s*h,e[1]=s*c,e[5]=s*u,e[9]=-a,e[2]=y*a-v,e[6]=x+p*a,e[10]=s*o}else if(\\\"ZXY\\\"===t.order){p=o*u,y=o*c,v=h*u,x=h*c;e[0]=p-x*a,e[4]=-s*c,e[8]=v+y*a,e[1]=y+v*a,e[5]=s*u,e[9]=x-p*a,e[2]=-s*h,e[6]=a,e[10]=s*o}else if(\\\"ZYX\\\"===t.order){l=s*u,f=s*c,d=a*u,m=a*c;e[0]=o*u,e[4]=d*h-f,e[8]=l*h+m,e[1]=o*c,e[5]=m*h+l,e[9]=f*h-d,e[2]=-h,e[6]=a*o,e[10]=s*o}else if(\\\"YZX\\\"===t.order){var _=s*o,b=s*h,w=a*o,k=a*h;e[0]=o*u,e[4]=k-_*c,e[8]=w*c+b,e[1]=c,e[5]=s*u,e[9]=-a*u,e[2]=-h*u,e[6]=b*c+w,e[10]=_-k*c}else if(\\\"XZY\\\"===t.order){_=s*o,b=s*h,w=a*o,k=a*h;e[0]=o*u,e[4]=-c,e[8]=h*u,e[1]=_*c+k,e[5]=s*u,e[9]=b*c-w,e[2]=w*c-b,e[6]=a*u,e[10]=k*c+_}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return g.warn(\\\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\\\"),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z,s=t.w,a=n+n,o=r+r,h=i+i,u=n*a,c=n*o,l=n*h,f=r*o,d=r*h,m=i*h,p=s*a,y=s*o,v=s*h;return e[0]=1-(f+m),e[4]=c-v,e[8]=l+y,e[1]=c+v,e[5]=1-(u+m),e[9]=d-p,e[2]=l-y,e[6]=d+p,e[10]=1-(u+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:(u=new g.Vector3,c=new g.Vector3,l=new g.Vector3,function(t,e,n){var r=this.elements;return l.subVectors(t,e).normalize(),0===l.length()&&(l.z=1),u.crossVectors(n,l).normalize(),0===u.length()&&(l.x+=1e-4,u.crossVectors(n,l).normalize()),c.crossVectors(l,u),r[0]=u.x,r[4]=c.x,r[8]=l.x,r[1]=u.y,r[5]=c.y,r[9]=l.y,r[2]=u.z,r[6]=c.z,r[10]=l.z,this}),multiply:function(t,e){return void 0!==e?(g.warn(\\\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\\\"),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,s=n[0],a=n[4],o=n[8],h=n[12],u=n[1],c=n[5],l=n[9],f=n[13],d=n[2],m=n[6],p=n[10],y=n[14],v=n[3],g=n[7],x=n[11],_=n[15],b=r[0],w=r[4],k=r[8],z=r[12],E=r[1],S=r[5],M=r[9],A=r[13],I=r[2],T=r[6],C=r[10],O=r[14],R=r[3],P=r[7],F=r[11],U=r[15];return i[0]=s*b+a*E+o*I+h*R,i[4]=s*w+a*S+o*T+h*P,i[8]=s*k+a*M+o*C+h*F,i[12]=s*z+a*A+o*O+h*U,i[1]=u*b+c*E+l*I+f*R,i[5]=u*w+c*S+l*T+f*P,i[9]=u*k+c*M+l*C+f*F,i[13]=u*z+c*A+l*O+f*U,i[2]=d*b+m*E+p*I+y*R,i[6]=d*w+m*S+p*T+y*P,i[10]=d*k+m*M+p*C+y*F,i[14]=d*z+m*A+p*O+y*U,i[3]=v*b+g*E+x*I+_*R,i[7]=v*w+g*S+x*T+_*P,i[11]=v*k+g*M+x*C+_*F,i[15]=v*z+g*A+x*O+_*U,this},multiplyToArray:function(t,e,n){var r=this.elements;return this.multiplyMatrices(t,e),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return g.warn(\\\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\\\"),t.applyProjection(this)},multiplyVector4:function(t){return g.warn(\\\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\\\"),t.applyMatrix4(this)},multiplyVector3Array:function(t){return g.warn(\\\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\\\"),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new g.Vector3;return function(e,n,r){void 0===n&&(n=0),void 0===r&&(r=e.length);for(var i=0,s=n;i<r;i+=3,s+=3)t.x=e[s],t.y=e[s+1],t.z=e[s+2],t.applyMatrix4(this),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z;return e}}(),rotateAxis:function(t){g.warn(\\\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\\\"),t.transformDirection(this)},crossVector:function(t){return g.warn(\\\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\\\"),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],s=t[1],a=t[5],o=t[9],h=t[13],u=t[2],c=t[6],l=t[10],f=t[14];return t[3]*(+i*o*c-r*h*c-i*a*l+n*h*l+r*a*f-n*o*f)+t[7]*(+e*o*f-e*h*l+i*s*l-r*s*f+r*h*u-i*o*u)+t[11]*(+e*h*c-e*a*f-i*s*c+n*s*f+i*a*u-n*h*u)+t[15]*(-r*a*u-e*o*c+e*a*l+r*s*c-n*s*l+n*o*u)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t},getPosition:function(){var t=new g.Vector3;return function(){g.warn(\\\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\\\");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,r=t.elements,i=r[0],s=r[4],a=r[8],o=r[12],h=r[1],u=r[5],c=r[9],l=r[13],f=r[2],d=r[6],m=r[10],p=r[14],y=r[3],v=r[7],x=r[11],_=r[15];n[0]=c*p*v-l*m*v+l*d*x-u*p*x-c*d*_+u*m*_,n[4]=o*m*v-a*p*v-o*d*x+s*p*x+a*d*_-s*m*_,n[8]=a*l*v-o*c*v+o*u*x-s*l*x-a*u*_+s*c*_,n[12]=o*c*d-a*l*d-o*u*m+s*l*m+a*u*p-s*c*p,n[1]=l*m*y-c*p*y-l*f*x+h*p*x+c*f*_-h*m*_,n[5]=a*p*y-o*m*y+o*f*x-i*p*x-a*f*_+i*m*_,n[9]=o*c*y-a*l*y-o*h*x+i*l*x+a*h*_-i*c*_,n[13]=a*l*f-o*c*f+o*h*m-i*l*m-a*h*p+i*c*p,n[2]=u*p*y-l*d*y+l*f*v-h*p*v-u*f*_+h*d*_,n[6]=o*d*y-s*p*y-o*f*v+i*p*v+s*f*_-i*d*_,n[10]=s*l*y-o*u*y+o*h*v-i*l*v-s*h*_+i*u*_,n[14]=o*u*f-s*l*f-o*h*d+i*l*d+s*h*p-i*u*p,n[3]=c*d*y-u*m*y-c*f*v+h*m*v+u*f*x-h*d*x,n[7]=s*m*y-a*d*y+a*f*v-i*m*v-s*f*x+i*d*x,n[11]=a*u*y-s*c*y-a*h*v+i*c*v+s*h*x-i*u*x,n[15]=s*c*f-a*u*f+a*h*d-i*c*d-s*h*m+i*u*m;var b=i*n[0]+h*n[4]+f*n[8]+y*n[12];if(0==b){var w=\\\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\\\";if(e)throw new Error(w);return g.warn(w),this.identity(),this}return this.multiplyScalar(1/b),this},translate:function(t){g.error(\\\"THREE.Matrix4: .translate() has been removed.\\\")},rotateX:function(t){g.error(\\\"THREE.Matrix4: .rotateX() has been removed.\\\")},rotateY:function(t){g.error(\\\"THREE.Matrix4: .rotateY() has been removed.\\\")},rotateZ:function(t){g.error(\\\"THREE.Matrix4: .rotateZ() has been removed.\\\")},rotateByAxis:function(t,e){g.error(\\\"THREE.Matrix4: .rotateByAxis() has been removed.\\\")},scale:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,Math.max(n,r)))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=1-n,s=t.x,a=t.y,o=t.z,h=i*s,u=i*a;return this.set(h*s+n,h*a-r*o,h*o+r*a,0,h*a+r*o,u*a+n,u*o-r*s,0,h*o-r*a,u*o+r*s,i*o*o+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},compose:function(t,e,n){return this.makeRotationFromQuaternion(e),this.scale(n),this.setPosition(t),this},decompose:function(){var t=new g.Vector3,e=new g.Matrix4;return function(n,r,i){var s=this.elements,a=t.set(s[0],s[1],s[2]).length(),o=t.set(s[4],s[5],s[6]).length(),h=t.set(s[8],s[9],s[10]).length();this.determinant()<0&&(a=-a),n.x=s[12],n.y=s[13],n.z=s[14],e.elements.set(this.elements);var u=1/a,c=1/o,l=1/h;return e.elements[0]*=u,e.elements[1]*=u,e.elements[2]*=u,e.elements[4]*=c,e.elements[5]*=c,e.elements[6]*=c,e.elements[8]*=l,e.elements[9]*=l,e.elements[10]*=l,r.setFromRotationMatrix(e),i.x=a,i.y=o,i.z=h,this}}(),makeFrustum:function(t,e,n,r,i,s){var a=this.elements,o=2*i/(e-t),h=2*i/(r-n),u=(e+t)/(e-t),c=(r+n)/(r-n),l=-(s+i)/(s-i),f=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=l,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,n,r){var i=n*Math.tan(g.Math.degToRad(.5*t)),s=-i,a=s*e,o=i*e;return this.makeFrustum(a,o,s,i,n,r)},makeOrthographic:function(t,e,n,r,i,s){var a=this.elements,o=e-t,h=n-r,u=s-i,c=(e+t)/o,l=(n+r)/h,f=(s+i)/u;return a[0]=2/o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-l,a[2]=0,a[6]=0,a[10]=-2/u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){return(new g.Matrix4).fromArray(this.elements)}},g.Sphere=function(t,e){this.center=void 0!==t?t:new g.Vector3,this.radius=void 0!==e?e:0},g.Sphere.prototype={constructor:g.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:(f=new g.Box3,function(t,e){var n=this.center;void 0!==e?n.copy(e):f.setFromPoints(t).center(n);for(var r=0,i=0,s=t.length;i<s;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this}),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var n=this.center.distanceToSquared(t),r=e||new g.Vector3;return r.copy(t),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(t){var e=t||new g.Box3;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new g.Sphere).copy(this)}},g.Frustum=function(t,e,n,r,i,s){this.planes=[void 0!==t?t:new g.Plane,void 0!==e?e:new g.Plane,void 0!==n?n:new g.Plane,void 0!==r?r:new g.Plane,void 0!==i?i:new g.Plane,void 0!==s?s:new g.Plane]},g.Frustum.prototype={constructor:g.Frustum,set:function(t,e,n,r,i,s){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(r),a[4].copy(i),a[5].copy(s),this},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,r=n[0],i=n[1],s=n[2],a=n[3],o=n[4],h=n[5],u=n[6],c=n[7],l=n[8],f=n[9],d=n[10],m=n[11],p=n[12],y=n[13],v=n[14],g=n[15];return e[0].setComponents(a-r,c-o,m-l,g-p).normalize(),e[1].setComponents(a+r,c+o,m+l,g+p).normalize(),e[2].setComponents(a+i,c+h,m+f,g+y).normalize(),e[3].setComponents(a-i,c-h,m-f,g-y).normalize(),e[4].setComponents(a-s,c-u,m-d,g-v).normalize(),e[5].setComponents(a+s,c+u,m+d,g+v).normalize(),this},intersectsObject:(p=new g.Sphere,function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),p.copy(e.boundingSphere),p.applyMatrix4(t.matrixWorld),this.intersectsSphere(p)}),intersectsSphere:function(t){for(var e=this.planes,n=t.center,r=-t.radius,i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:(d=new g.Vector3,m=new g.Vector3,function(t){for(var e=this.planes,n=0;n<6;n++){var r=e[n];d.x=r.normal.x>0?t.min.x:t.max.x,m.x=r.normal.x>0?t.max.x:t.min.x,d.y=r.normal.y>0?t.min.y:t.max.y,m.y=r.normal.y>0?t.max.y:t.min.y,d.z=r.normal.z>0?t.min.z:t.max.z,m.z=r.normal.z>0?t.max.z:t.min.z;var i=r.distanceToPoint(d),s=r.distanceToPoint(m);if(i<0&&s<0)return!1}return!0}),containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0},clone:function(){return(new g.Frustum).copy(this)}},g.Plane=function(t,e){this.normal=void 0!==t?t:new g.Vector3(1,0,0),this.constant=void 0!==e?e:0},g.Plane.prototype={constructor:g.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new g.Vector3,e=new g.Vector3;return function(n,r,i){var s=t.subVectors(i,r).cross(e.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(s,n),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var n=this.distanceToPoint(t);return(e||new g.Vector3).copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectLine:function(){var t=new g.Vector3;return function(e,n){var r=n||new g.Vector3,i=e.delta(t),s=this.normal.dot(i);if(0==s)return 0==this.distanceToPoint(e.start)?r.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/s;return a<0||a>1?void 0:r.copy(i).multiplyScalar(a).add(e.start)}}(),coplanarPoint:function(t){return(t||new g.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new g.Vector3,e=new g.Vector3,n=new g.Matrix3;return function(r,i){var s=i||n.getNormalMatrix(r),a=t.copy(this.normal).applyMatrix3(s),o=this.coplanarPoint(e);return o.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(a,o),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new g.Plane).copy(this)}},g.Math={generateUUID:function(){var t,e=\\\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\\\".split(\\\"\\\"),n=new Array(36),r=0;return function(){for(var i=0;i<36;i++)8==i||13==i||18==i||23==i?n[i]=\\\"-\\\":14==i?n[i]=\\\"4\\\":(r<=2&&(r=33554432+16777216*Math.random()|0),t=15&r,r>>=4,n[i]=e[19==i?3&t|8:t]);return n.join(\\\"\\\")}}(),clamp:function(t,e,n){return t<e?e:t>n?n:t},clampBottom:function(t,e){return t<e?e:t},mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return Math.floor(this.randFloat(t,e))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:(v=Math.PI/180,function(t){return t*v}),radToDeg:(y=180/Math.PI,function(t){return t*y}),isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}}}).call(this,n(32)(t))},function(t,e,n){\\\"use strict\\\";var r=n(2),i=n(9),s=Object(r.a)(),a=s,o={DEBUG:5,LOG:4,INFO:3,WARNING:2,ERROR:1,NONE:0};function h(){this.runtimeStats={},this.level=-1,this.setLevel(o.ERROR),this._reportError=this._reportError.bind(this)}function u(){return\\\"undefined\\\"!=typeof window?encodeURI(a.location.href):\\\"\\\"}function c(){}h.prototype.initialize=function(t){if(t.eventCallback&&(this.callback=t.eventCallback),this.sessionId=t.sessionId,!this.sessionId){var e=Date.now()+\\\"\\\";this.sessionId=parseFloat((1e4*Math.random()|0)+\\\"\\\"+e.substring(4))}\\\"number\\\"==typeof t.logLevel&&this.setLevel(t.logLevel),this.environmentInfo={touch:Object(r.d)(),env:Object(i.b)(),referer:u(),version:s.LMV_VIEWER_VERSION,build_type:s.LMV_BUILD_TYPE};var n={category:\\\"viewer_start\\\",touch:this.environmentInfo.touch,env:this.environmentInfo.env,referer:this.environmentInfo.referer,version:this.environmentInfo.version,build_type:this.environmentInfo.build_type};this.track(n);var a=this;this.interval=setInterval((function(){a.reportRuntimeStats()}),6e4)},h.prototype.shutdown=function(){clearInterval(this.interval),this.interval=void 0},h.prototype.track=function(t){this.updateRuntimeStats(t),!Object(i.c)()&&this.sessionId&&this.callback&&(t.timestamp=Date.now(),t.sessionId=this.sessionId,this.callback(t))},h.prototype.updateRuntimeStats=function(t){if(t.hasOwnProperty(\\\"aggregate\\\"))switch(t.aggregate){case\\\"count\\\":this.runtimeStats[t.name]>0?this.runtimeStats[t.name]++:this.runtimeStats[t.name]=1,this.runtimeStats._nonempty=!0;break;case\\\"last\\\":this.runtimeStats[t.name]=t.value,this.runtimeStats._nonempty=!0;break;default:this.warn(\\\"unknown log aggregate type\\\")}},h.prototype.reportRuntimeStats=function(){this.runtimeStats._nonempty&&(delete this.runtimeStats._nonempty,this.runtimeStats.category=\\\"misc_stats\\\",this.track(this.runtimeStats),this.runtimeStats={})},h.prototype.setLevel=function(t){this.level!==t&&(this.level=t,this.debug=t>=o.DEBUG?console.log:c,this.log=t>=o.LOG?console.log:c,this.info=t>=o.INFO?console.info:c,this.warn=t>=o.WARNING?console.warn:c,this.error=t>=o.ERROR?this._reportError:c)},h.prototype._reportError=function(){if(this.callback){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");this.callback({category:\\\"error\\\",message:t})}console.error.apply(console,arguments)};var l=new h;var f=n(6),d=n(13);n.d(e,\\\"a\\\",(function(){return k}));var m,p,y,v,g,x,_,b,w=n(14),k={},z=!1;function E(t){var e=t.split(\\\"/\\\");if(0==e.length)return t;for(var n=[],r=0;r<e.length;++r){var i=e[r];\\\".\\\"!==i&&(\\\"..\\\"===i&&n.length?n.pop():n.push(i))}return 0==n.length?\\\"\\\":n.join(\\\"/\\\")}function S(t,e){return-1===e.indexOf(\\\"file://\\\")&&(-1!==e.indexOf(\\\"://\\\")||(!!t||void 0))}if(k.simplifyPath=E,k.OSS_PREFIX=\\\"urn:adsk.objects:os.object:\\\",k.generateUrl=function(t,e,n){if(n=n||\\\"\\\",Object(r.c)()&&!S(t,n))return n;var s=(n=E(n)).indexOf(\\\"urn:\\\"),a=n.indexOf(\\\"?\\\");if(n=-1!=s?-1!==a?n.slice(0,s)+encodeURIComponent(n.slice(s,a))+n.slice(a):n.slice(0,s)+encodeURIComponent(n.slice(s)):encodeURI(n),!e||0!==decodeURIComponent(n).indexOf(\\\"urn:\\\"))return S(null,n)?n:t+n;switch(\\\"items\\\"!==e&&(n=n.substr(6)),e){case\\\"items\\\":return i.a.getItemApi(t,n);case\\\"bubbles\\\":return i.a.getManifestApi(t,n);case\\\"thumbnails\\\":return i.a.getThumbnailApi(t,n)}},Object(r.c)())m=n(12),p=n(12),y=n(12),v=n(12),g=n(12),x=new y.Agent({keepAlive:!0,keepAliveMsecs:100,maxSockets:10}),_=new v.Agent({keepAlive:!0,keepAliveMsecs:100,maxSockets:10}),b=new y.Agent({maxSockets:10}),k.rawGet=function(t,e,n,r,i,s){if(s=s||{},S(t,n=k.generateUrl(t,e,n))){if(s.queryParams){var a=-1===n.indexOf(\\\"?\\\")?\\\"?\\\":\\\"&\\\";n=n+a+s.queryParams}var o=g.parse(n),h={host:o.hostname,port:o.port,method:s.method||\\\"GET\\\",path:o.path,headers:{},retryCount:0,agent:\\\"https:\\\"===o.protocol?x:_};if(h.host.endsWith(\\\".api.autodesk.com\\\")&&(h.path.startsWith(\\\"/derivativeservice\\\")||h.path.startsWith(\\\"/modelderivative\\\"))&&(h.agent=b),s.headers)for(var u in s.headers)h.headers[u]=s.headers[u];h.headers[\\\"accept-encoding\\\"]||(h.headers[\\\"accept-encoding\\\"]=\\\"gzip, deflate\\\"),s.range&&(h.headers.Range=\\\"bytes=\\\"+s.range.min+\\\"-\\\"+s.range.max),(s.ondata||s.onprogress)&&(s.responseType=\\\"arraybuffer\\\");var c=(\\\"https:\\\"===o.protocol?y:v).request(h,(function(t){var e=!(t.statusCode>=200&&t.statusCode<400),a=t;e||!function(t,e){return!!(\\\"gzip\\\"===t.headers[\\\"content-encoding\\\"]||e.endsWith(\\\".json.gz\\\")||e.endsWith(\\\"FragmentList.pack\\\")||e.endsWith(\\\"LightList.bin\\\")||e.endsWith(\\\"CameraList.bin\\\")||e.endsWith(\\\"CameraDefinitions.bin\\\")||e.endsWith(\\\"LightDefinitions.bin\\\"))}(t,o.pathname)||s.skipDecompress||(a=t.pipe(p.createGunzip())),\\\"json\\\"!==s.responseType&&\\\"text\\\"!==s.responseType&&s.responseType||a.setEncoding(\\\"utf8\\\");var h=[],u=Buffer.allocUnsafe(65536),d=0;a.on(\\\"data\\\",(function(t){if(s.onprogress){if(t.length+d>u.length){var e=Buffer.allocUnsafe(0|Math.ceil(1.5*u.length));u.copy(e,0,0,d),u=e}return t.copy(u,d,0,t.length),d+=t.length,void(s.onprogress(u,d)&&c.abort())}h.push(t),s.ondata&&s.ondata(t)})),a.on(\\\"end\\\",(function(){if(t.statusCode>=200&&t.statusCode<400){if(\\\"json\\\"===s.responseType){var e=JSON.parse(h.join(\\\"\\\"));return void r(e)}if(\\\"text\\\"===s.responseType||\\\"\\\"===s.responseType){var a=h.join(\\\"\\\");return void r(a)}var o=s.onprogress?u:Buffer.concat(h);if(!s.skipDecompress&&31===o[0]&&139===o[1]){l.warn(\\\"An LMV resource (\\\"+n+\\\") was double compressed, or Content-Encoding header missing\\\");try{o=p.gunzipSync(o),d=o.length}catch(t){i(f.a.BAD_DATA,\\\"Malformed data received when requesting file\\\",{url:n,exception:t.toString(),stack:t.stack})}}200===c.status&&s.range&&(o=new Uint8Array(o,s.range.min,s.range.max-s.range.min)),r(o,d)}else i&&i(t.statusCode,t.statusMessage,{url:n})}))}));c.on(\\\"error\\\",(function(t){i&&i(t.code,t.message,{url:n})})),s.postData&&c.write(s.postData),c.end()}else!function(t,e,n,r){function i(t){if(\\\"json\\\"===r.responseType)try{return JSON.parse(t.toString(\\\"utf8\\\"))}catch(t){n(t)}return t}0===t.indexOf(\\\"file://\\\")&&(t=t.substr(7)),m.readFile(t,(function(s,a){s?n(0,0,{httpStatusText:s,url:t}):31===a[0]&&139===a[1]?p.gunzip(a,null,(function(s,a){s?n(0,0,{httpStatusText:s,url:t}):(a=i(a),r.ondata&&r.ondata(a),e(a))})):(a=i(a),r.ondata&&r.ondata(a),e(a))}))}(n,r,i,s)};else{var M=new(n(30));M.max=25,k.rawGet=function(t,e,n,r,i,s){M.go((function(a){k._rawGet(t,e,n,(function(){a();for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];r&&r.apply(r,e)}),(function(){a();for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];i&&i.apply(i,e)}),s)}))},k._rawGet=function(t,e,n,r,i,s){if(s=s||{},n=k.generateUrl(t,e,n),s.queryParams){var a=-1===n.indexOf(\\\"?\\\")?\\\"?\\\":\\\"&\\\";n=n+a+s.queryParams}var o=new XMLHttpRequest;function h(t){i&&i(o.status,o.statusText,{url:n})}function u(t){if(\\\"json\\\"===s.responseType)try{if(t instanceof Uint8Array)return Object(d.a)(t);if(\\\"string\\\"==typeof t)return JSON.parse(t)}catch(t){}return t}function c(t){if(200===o.status||206===o.status)if(o.response&&o.response instanceof ArrayBuffer){var e;if(e=200===o.status&&s.range?new Uint8Array(o.response,s.range.min,s.range.max-s.range.min):new Uint8Array(o.response),!s.skipDecompress&&31===e[0]&&139===e[1]){z||(z=!0,l.warn(\\\"An LMV resource (\\\"+n+\\\") was not uncompressed by the browser. This hurts performance. Check the Content-Encoding header returned by the server and check whether you're getting double-compressed streams. The warning prints only once but it's likely the problem affects multiple resources.\\\"));try{e=w.ungzip(e)}catch(t){i(f.a.BAD_DATA,\\\"Malformed data received when requesting file\\\",{url:n,exception:t.toString(),stack:t.stack})}}r&&r(u(e))}else{var a=o.response;a||s.responseType&&\\\"text\\\"!==s.responseType||(a=o.responseText),r&&r(u(a))}else h()}try{var m=!s.hasOwnProperty(\\\"asynchronous\\\")||s.asynchronous;if(o.open(s.method||(s.noBody?\\\"HEAD\\\":\\\"GET\\\"),n,m),s.hasOwnProperty(\\\"responseType\\\")&&(o.responseType=s.responseType),o.withCredentials=!0,s.hasOwnProperty(\\\"withCredentials\\\")&&(o.withCredentials=s.withCredentials),s.range&&o.setRequestHeader(\\\"Range\\\",\\\"bytes=\\\"+s.range.min+\\\"-\\\"+s.range.max),s.headers)for(var p in s.headers)o.setRequestHeader(p,s.headers[p]),\\\"authorization\\\"===p.toLocaleLowerCase()&&(o.withCredentials=!1);m&&(o.onload=c,o.onerror=h,o.ontimeout=h,(s.ondata||s.onprogress)&&(o.overrideMimeType(\\\"text/plain; charset=x-user-defined\\\"),s._dlProgress={streamOffset:0},o.onreadystatechange=function(){if(o.readyState>2&&200===o.status)if(s.ondata){var t=o.responseText;if(s._dlProgress.streamOffset>=t.length)return;var e=function(t,e){for(var n=t.length-e,r=new ArrayBuffer(n),i=new Uint8Array(r,0),s=0,a=e;s<n;s++,a++)i[s]=255&t.charCodeAt(a);return i}(t,s._dlProgress.streamOffset);s._dlProgress.streamOffset=t.length,s.ondata(e)}else if(s.onprogress){s.onprogress(o.responseText)&&o.abort()}})),o.send(s.postData),m||c()}catch(t){i(o.status,o.statusText,{url:n,exception:t})}}}function A(t,e){e.hasOwnProperty(\\\"responseType\\\")||(e.responseType=\\\"arraybuffer\\\"),e.hasOwnProperty(\\\"withCredentials\\\")||(e.withCredentials=!!t.auth),e.headers=t.headers,e.queryParams=t.queryParams,e.endpoint=t.endpoint}k.defaultFailureCallback=function(t,e,n){403==t?this.raiseError(f.a.NETWORK_ACCESS_DENIED,\\\"Access denied to remote resource\\\",{url:n.url,httpStatus:t,httpStatusText:e}):404==t?this.raiseError(f.a.NETWORK_FILE_NOT_FOUND,\\\"Remote resource not found\\\",{url:n.url,httpStatus:t,httpStatusText:e}):t>=500&&t<600?this.raiseError(f.a.NETWORK_SERVER_ERROR,\\\"Server error when accessing resource\\\",{url:n.url,httpStatus:t,httpStatusText:e}):n.exception?this.raiseError(f.a.NETWORK_FAILURE,\\\"Network failure\\\",{url:n.url,exception:n.exception.toString(),stack:n.exception.stack}):this.raiseError(f.a.NETWORK_UNHANDLED_RESPONSE_CODE,\\\"Unhandled response code from server\\\",{url:n.url,httpStatus:t,httpStatusText:e,data:n})},k.getItem=function(t,e,n,r,i){if(A(t,i=i||{}),i.range&&!t.supportsRangeRequests){var s=\\\"start=\\\"+i.range.min+\\\"&end=\\\"+i.range.max;i.queryParams?i.queryParams+=\\\"&\\\"+s:i.queryParams=s,i.range=void 0}k.rawGet(t.endpoint,\\\"items\\\",e,n,r,i)},k.getManifest=function(t,e,n,r,i){(i=i||{}).hasOwnProperty(\\\"responseType\\\")||(i.responseType=\\\"json\\\"),A(t,i),k.rawGet(t.endpoint,\\\"bubbles\\\",e,n,r,i)},k.getThumbnail=function(t,e,n,r,i){A(t,i=i||{});var s=i.queryParams||\\\"\\\",a=[];if(-1===s.indexOf(\\\"guid=\\\")&&a.push(\\\"guid=\\\"+encodeURIComponent(i.guid)),-1===s.indexOf(\\\"role=\\\")){var o=i.role||\\\"rendered\\\";a.push(\\\"role=\\\"+o)}if(-1===s.indexOf(\\\"width=\\\")){var h=i.size||400;a.push(\\\"width=\\\"+h)}if(-1===s.indexOf(\\\"height=\\\")){h=i.size||400;a.push(\\\"height=\\\"+h)}-1===s.indexOf(\\\"acmsession=\\\")&&i.acmsession&&a.push(\\\"acmsession=\\\"+i.acmsession);var u=a.join(\\\"&\\\");i.queryParams?i.queryParams=i.queryParams+\\\"&\\\"+u:i.queryParams=u,k.rawGet(t.endpoint,\\\"thumbnails\\\",e,n,r,i)},k.getACMSession=function(t,e,n,r){var i,s={};for(var a in e)\\\"oauth2AccessToken\\\"===a?i=e[a]:-1!==a.indexOf(\\\"x-ads-acm\\\")&&(s[a]=e[a]);s.application=\\\"autodesk\\\";var o=new XMLHttpRequest;o.open(\\\"POST\\\",t+\\\"/oss-ext/v2/acmsessions\\\",!0),o.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),o.setRequestHeader(\\\"Authorization\\\",\\\"Bearer \\\"+i),o.responseType=\\\"json\\\",o.onload=function(){if(200===o.status&&o.response){var t=\\\"string\\\"==typeof o.response?JSON.parse(o.response):o.response;t&&t.acmsession?n(t.acmsession):r(o.status,\\\"Can't get acm session from response.\\\")}else r(o.status)},o.onerror=r,o.ontimeout=r,o.send(JSON.stringify(s)),delete s.application}},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return l}));var r=n(13),i=new ArrayBuffer(8),s=new Uint8Array(i),a=new Uint16Array(i),o=new Int32Array(i),h=new Uint32Array(i),u=new Float32Array(i),c=new Float64Array(i);function l(t){this.buffer=t,this.offset=0,this.byteLength=t.length}l.prototype.seek=function(t){this.offset=t},l.prototype.getBytes=function(t){var e=new Uint8Array(this.buffer.buffer,this.offset,t);return this.offset+=t,e},l.prototype.getVarints=function(){var t,e=0,n=0;do{e|=(127&(t=this.buffer[this.offset++]))<<n,n+=7}while(128&t);return e},l.prototype.getUint8=function(){return this.buffer[this.offset++]},l.prototype.getUint16=function(){return s[0]=this.buffer[this.offset++],s[1]=this.buffer[this.offset++],a[0]},l.prototype.getInt16=function(){var t=this.getUint16();return t>32767&&(t|=4294901760),t},l.prototype.getInt32=function(){var t=this.buffer,e=s,n=this.offset;return e[0]=t[n],e[1]=t[n+1],e[2]=t[n+2],e[3]=t[n+3],this.offset+=4,o[0]},l.prototype.getUint32=function(){var t=this.buffer,e=s,n=this.offset;return e[0]=t[n],e[1]=t[n+1],e[2]=t[n+2],e[3]=t[n+3],this.offset+=4,h[0]},l.prototype.getFloat32=function(){var t=this.buffer,e=s,n=this.offset;return e[0]=t[n],e[1]=t[n+1],e[2]=t[n+2],e[3]=t[n+3],this.offset+=4,u[0]},l.prototype.getIndicesArray=function(t,e,n){for(var r=this.buffer,i=new Uint8Array(t,e,2*n),s=this.offset,a=0,o=2*n;a<o;a+=2)i[a]=r[s],i[a+1]=r[s+1],s+=4;this.offset=s},l.prototype.getVector3Array=function(t,e,n,r){var i=this.buffer,s=this.offset,a=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);if(3===r&&0===n){var o=12*e;a.set(i.subarray(s,s+o)),this.offset+=o}else{r*=4;for(var h=4*n,u=0;u<e;u++){for(var c=0;c<12;c++)a[h+c]=i[s++];h+=r}this.offset=s}},l.prototype.getVector2Array=function(t,e,n,r){var i=this.buffer,s=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),a=this.offset;r*=4;for(var o=4*n,h=0;h<e;h++){for(var u=0;u<8;u++)s[o+u]=i[a++];o+=r}this.offset=a},l.prototype.getVector4=function(t,e){for(var n=this.buffer,r=s,i=this.offset,a=u,o=0;o<4;o++)r[0]=n[i],r[1]=n[i+1],r[2]=n[i+2],r[3]=n[i+3],t[e+o]=a[0],i+=4;this.offset=i},l.prototype.getFloat64=function(){for(var t=this.buffer,e=s,n=this.offset,r=0;r<8;r++)e[r]=t[n+r];return this.offset+=8,c[0]},l.prototype.getString=function(t){var e=Object(r.b)(this.buffer,this.offset,t);return this.offset+=t,e},l.prototype.reset=function(t){this.buffer=t,this.offset=0,this.byteLength=t.length}},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return r}));var r={UNKNOWN_FAILURE:1,BAD_DATA:2,NETWORK_FAILURE:3,NETWORK_ACCESS_DENIED:4,NETWORK_FILE_NOT_FOUND:5,NETWORK_SERVER_ERROR:6,NETWORK_UNHANDLED_RESPONSE_CODE:7,BROWSER_WEBGL_NOT_SUPPORTED:8,BAD_DATA_NO_VIEWABLE_CONTENT:9,BROWSER_WEBGL_DISABLED:10,BAD_DATA_MODEL_IS_EMPTY:11,RTC_ERROR:12,UNSUPORTED_FILE_EXTENSION:13,VIEWER_INTERNAL_ERROR:14,WEBGL_LOST_CONTEXT:15}},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return c}));var r,i,s,a,o,h=n(5),u=n(1);function c(t){var e=this.stream=new h.a(t),n=e.getInt32();this.type=e.getString(n),this.version=e.getInt32(),this.types=null,this.entryOffsets=[];var r=e.offset;e.seek(e.byteLength-8);var i=e.getUint32();this.typesOffset=e.getUint32(),e.seek(this.typesOffset);var s=this.readU32V();this.types=[];for(var a=0;a<s;++a)this.types.push({entryClass:this.readString(),entryType:this.readString(),version:this.readU32V()});e.seek(i);var o=this.readU32V(),u=this.entryOffsets;for(a=0;a<o;++a)u.push(e.getUint32());e.seek(r)}c.prototype.readVarint=function(){var t,e=0,n=0;do{e|=(127&(t=this.stream.getUint8()))<<n,n+=7}while(128&t);return e},c.prototype.readU32V=c.prototype.readVarint,c.prototype.readU16=function(){return this.stream.getUint16()},c.prototype.readU8=function(){return this.stream.getUint8()},c.prototype.readString=function(){return this.stream.getString(this.readU32V())},c.prototype.readVector3f=function(){var t=this.stream;return{x:t.getFloat32(),y:t.getFloat32(),z:t.getFloat32()}},c.prototype.readF32=function(){return this.stream.getFloat32()},c.prototype.readVector3d=(r={x:0,y:0,z:0},function(){var t=this.stream;return r.x=t.getFloat64(),r.y=t.getFloat64(),r.z=t.getFloat64(),r}),c.prototype.readQuaternionf=(i={x:0,y:0,z:0,w:0},function(){var t=this.stream;return i.x=t.getFloat32(),i.y=t.getFloat32(),i.z=t.getFloat32(),i.w=t.getFloat32(),i}),c.prototype.readMatrix3f=(s=new u.a,function(t){t||(t=s);var e=this.stream;t.identity();for(var n=0;n<3;++n)for(var r=0;r<3;++r)t.elements[4*n+r]=e.getFloat32();return t}),c.prototype.readTransform=(a={x:1,y:1,z:1},o=new u.a(!0),function(t,e,n,r,i,s){var h,c,l=this.stream;switch(l.getUint8()){case 4:o.identity();break;case 0:h=this.readVector3d(),o.makeTranslation(h.x,h.y,h.z);break;case 1:c=this.readQuaternionf(),h=this.readVector3d(),a.x=1,a.y=1,a.z=1,o.compose(h,c,a);break;case 2:var f=l.getFloat32();c=this.readQuaternionf(),h=this.readVector3d(),a.x=f,a.y=f,a.z=f,o.compose(h,c,a);break;case 3:this.readMatrix3f(o),h=this.readVector3d(),o.setPosition(h)}if(s&&(s[0]=o.elements[12],s[1]=o.elements[13],s[2]=o.elements[14]),r&&o.multiplyMatrices(r,o),i&&(o.elements[12]-=i.x,o.elements[13]-=i.y,o.elements[14]-=i.z),void 0===t)return(new u.a).copy(o);var d=o.elements;e&&(e[n+0]=d[0],e[n+1]=d[1],e[n+2]=d[2],e[n+3]=d[4],e[n+4]=d[5],e[n+5]=d[6],e[n+6]=d[8],e[n+7]=d[9],e[n+8]=d[10],e[n+9]=d[12],e[n+10]=d[13],e[n+11]=d[14])}),c.prototype.getEntryCounts=function(){return this.entryOffsets.length},c.prototype.seekToEntry=function(t){if(t>=this.getEntryCounts())return null;this.stream.seek(this.entryOffsets[t]);var e=this.stream.getUint32();return e>=this.types.length?null:this.types[e]},c.prototype.readPathID=function(){var t=this.stream;if(this.version<2){if(!(r=t.getUint16()))return null;if(t.getUint16(),1==r)return\\\"\\\";for(var e=t.getUint16(),n=2;n<r;++n)e+=\\\"/\\\"+t.getUint16()}else{var r;if(!(r=this.readU32V()))return null;if(this.readU32V(),1==r)return\\\"\\\";for(e=this.readU32V(),n=2;n<r;++n)e+=\\\"/\\\"+this.readU32V()}return e}},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return a}));var r,i,s=n(0),a=function(t,e){this.min=void 0!==t?t:new s.a(1/0,1/0,1/0),this.max=void 0!==e?e:new s.a(-1/0,-1/0,-1/0)};a.prototype={constructor:a,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromArray:function(t,e){return this.min.x=t[e],this.min.y=t[e+1],this.min.z=t[e+2],this.max.x=t[e+3],this.max.y=t[e+4],this.max.z=t[e+5],this},copyToArray:function(t,e){t[e]=this.min.x,t[e+1]=this.min.y,t[e+2]=this.min.z,t[e+3]=this.max.x,t[e+4]=this.max.y,t[e+5]=this.max.z},setFromCenterAndSize:(i=new s.a,function(t,e){var n=i.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new s.a).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new s.a).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new s.a).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new s.a).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new s.a;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:(r=[new s.a,new s.a,new s.a,new s.a,new s.a,new s.a,new s.a,new s.a],function(t){return r[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),r[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),r[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),r[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),r[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),r[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),r[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),r[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(r),this}),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}},function(t,e,n){\\\"use strict\\\";var r=n(2),i=Object(r.a)(),s=i;s&&s.document;function a(t){return\\\"undefined\\\"==typeof window?\\\"\\\":function(t,e){t=t.replace(/[\\\\[]/,\\\"\\\\\\\\[\\\").replace(/[\\\\]]/,\\\"\\\\\\\\]\\\");var n=new RegExp(\\\"[\\\\\\\\?&]\\\"+t+\\\"=([^&#]*)\\\").exec(e);return null==n?\\\"\\\":decodeURIComponent(n[1].replace(/\\\\+/g,\\\" \\\"))}(t,s.location.href)}i.LOCALIZATION_REL_PATH=\\\"\\\",i.LMV_VIEWER_VERSION=\\\"7.11.0\\\",i.LMV_BUILD_TYPE=\\\"Production\\\",i.LMV_RESOURCE_ROOT=\\\"\\\",i.LMV_THIRD_PARTY_COOKIE=!Object(r.c)()&&void 0,\\\"v\\\"===i.LMV_VIEWER_VERSION.charAt(0)&&(i.LMV_VIEWER_VERSION=i.LMV_VIEWER_VERSION.substr(1)),i.LMV_VECTOR_PDF=!1,i.LMV_RASTER_PDF=!0,n.d(e,\\\"b\\\",(function(){return v})),n.d(e,\\\"c\\\",(function(){return x})),n.d(e,\\\"a\\\",(function(){return _}));var o=Object(r.a)(),h={},u=null;h.ENDPOINT_API_DERIVATIVE_SERVICE_V2=\\\"derivativeV2\\\",h.ENDPOINT_API_MODEL_DERIVATIVE_V2=\\\"modelDerivativeV2\\\",h.ENDPOINT_API_FLUENT=\\\"fluent\\\";var c,l={derivativeV2:{baseURL:\\\"/derivativeservice/v2\\\",itemURL:\\\"/derivativeservice/v2/derivatives/:derivativeurn\\\",manifestURL:\\\"/derivativeservice/v2/manifest/:urn\\\",thumbnailsURL:\\\"/derivativeservice/v2/thumbnails/:urn\\\"},derivativeV2_EU:{baseURL:\\\"/derivativeservice/v2/regions/eu\\\",itemURL:\\\"/derivativeservice/v2/regions/eu/derivatives/:derivativeurn\\\",manifestURL:\\\"/derivativeservice/v2/regions/eu/manifest/:urn\\\",thumbnailsURL:\\\"/derivativeservice/v2/regions/eu/thumbnails/:urn\\\"},modelDerivativeV2:{baseURL:\\\"/modelderivative/v2/\\\",itemURL:\\\"/modelderivative/v2/designdata/:urn/manifest/:derivativeurn\\\",manifestURL:\\\"/modelderivative/v2/designdata/:urn/manifest\\\",thumbnailsURL:\\\"/modelderivative/v2/designdata/:urn/thumbnail\\\"},fluent:{baseURL:\\\"/modeldata\\\",itemURL:\\\"/modeldata/file/:derivativeurn\\\",manifestURL:\\\"/modeldata/manifest/:urn\\\",thumbnailsURL:\\\"/derivativeservice/v2/thumbnails/:urn\\\",cdnURL:\\\"/cdn\\\",cdnWS:\\\"/cdnws\\\"}},f=\\\"\\\",d=h.ENDPOINT_API_DERIVATIVE_SERVICE_V2,m=!1,p=!1,y=\\\"\\\";function v(){return c}h.HTTP_REQUEST_HEADERS={},h.queryParams={},h.setEndpointAndApi=function(t,e){f=t,e&&(d=e)},h.getEndpointAndApi=function(){return f+l[d].baseURL},h.getApiEndpoint=function(){return f},h.getApiFlavor=function(){return d},h.getCdnUrl=function(){return u||(f?f+l[d].cdnURL:void 0)},h.getCdnWebSocketEndpoint=function(){return f+(l[d].cdnWS||\\\"\\\")},h.setCdnUrl=function(t){u=t},h.getCdnRedirectUrl=function(){var t=l[d].cdnRedirectURL;return t?f+t:null},h.setAcmSession=function(t){y=t},h.getAcmSession=function(){return y},h.getManifestApi=function(t,e,n){var r=t||f;return e=e||\\\"\\\",r=(r+=l[n=n||d].manifestURL).replace(\\\":urn\\\",e)},h.getItemApi=function(t,e,n){var r=n||d,i=(t||f)+l[r].itemURL;e=e||\\\"\\\";var s=decodeURIComponent(e);if(-1!==i.indexOf(\\\":urn\\\")){var a=s.split(\\\"/\\\")[0]||\\\"\\\";a=(a=a.split(\\\":\\\"))[a.length-1]||\\\"\\\",i=i.replace(\\\":urn\\\",a)}return r===h.ENDPOINT_API_MODEL_DERIVATIVE_V2&&(e=encodeURIComponent(s)),i=i.replace(\\\":derivativeurn\\\",e)},h.getThumbnailApi=function(t,e,n){return((t||f)+l[n||d].thumbnailsURL).replace(\\\":urn\\\",e||\\\"\\\")},h.getUseCredentials=function(){return m},h.getDomainParam=function(){return console.warn(\\\"getDomainParam is deprecated, switch to getQueryParams instead.\\\"),this.getUseCredentials()&&!Object(r.c)()?\\\"domain=\\\"+encodeURIComponent(o.location.origin):\\\"\\\"},h.addQueryParam=function(t,e){this.queryParams[t]=e},h.deleteQueryParam=function(t){delete this.queryParams[t]},h.getQueryParams=function(t){var e=this.getUseCredentials()&&!Object(r.c)()?\\\"domain=\\\"+encodeURIComponent(o.location.origin):\\\"\\\";a(\\\"bypassds\\\")&&(e=e?e+\\\"&bypassds=1\\\":\\\"bypassds=1\\\");var n=[];for(var i in this.queryParams)n.push(encodeURIComponent(i)+\\\"=\\\"+encodeURIComponent(this.queryParams[i]));return n.length&&(e?e+=\\\"&\\\"+n.join(\\\"&\\\"):e=n.join(\\\"&\\\")),e&&t&&(t.queryParams?t.queryParams+=\\\"&\\\"+e:t.queryParams=e),e},h.setUseCredentials=function(t){m=t},h.setUseCookie=function(t){p=t},h.getUseCookie=function(){return p},h.initLoadContext=function(t){for(var e in(t=t||{}).auth=this.getUseCredentials(),t.endpoint||(t.endpoint=this.getApiEndpoint()),t.api||(t.api=this.getApiFlavor()),t.headers||(t.headers={}),this.HTTP_REQUEST_HEADERS)t.headers[e]=this.HTTP_REQUEST_HEADERS[e];return t.api===this.ENDPOINT_API_FLUENT&&(t.supportsRangeRequests=!0),this.getQueryParams(t),t.otg_cdn=u||this.getCdnUrl(),t.otg_ws=this.getCdnWebSocketEndpoint(),t};var g=!1;function x(){return g}var _=h;h.initLoadContext.bind(h)},function(t,e,n){\\\"use strict\\\";var r=\\\"undefined\\\"!=typeof Uint8Array&&\\\"undefined\\\"!=typeof Uint16Array&&\\\"undefined\\\"!=typeof Int32Array;function i(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var n=e.shift();if(n){if(\\\"object\\\"!=typeof n)throw new TypeError(n+\\\"must be non-object\\\");for(var r in n)i(n,r)&&(t[r]=n[r])}}return t},e.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var s={arraySet:function(t,e,n,r,i){if(e.subarray&&t.subarray)t.set(e.subarray(n,n+r),i);else for(var s=0;s<r;s++)t[i+s]=e[n+s]},flattenChunks:function(t){var e,n,r,i,s,a;for(r=0,e=0,n=t.length;e<n;e++)r+=t[e].length;for(a=new Uint8Array(r),i=0,e=0,n=t.length;e<n;e++)s=t[e],a.set(s,i),i+=s.length;return a}},a={arraySet:function(t,e,n,r,i){for(var s=0;s<r;s++)t[i+s]=e[n+s]},flattenChunks:function(t){return[].concat.apply([],t)}};e.setTyped=function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,s)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,a))},e.setTyped(r)},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"a\\\",(function(){return r}));var r={deduceUVRepetition:function(t){for(var e in t.vblayout)if(0==e.indexOf(\\\"uv\\\")&&0!=e.indexOf(\\\"uvw\\\"))for(var n=t.vblayout[e].offset,r=t.vbstride,i=t.vb,s=t.vb.length/r,a=0,o=n;a<s;a++,o+=r){var h=i[o],u=i[o+1];if(h>2||h<0||u>2||u<0){t.vblayout[e].isPattern=!0;break}}},computeBounds3D:function(t){var e,n,r,i,s,a=1/0,o=1/0,h=1/0,u=-1/0,c=-1/0,l=-1/0,f=t.vbstride,d=t.vblayout.position.offset,m=t.vb,p=t.vb.length/f;for(e=0,n=d;e<p;e++,n+=f)a>(r=m[n])&&(a=r),o>(i=m[n+1])&&(o=i),h>(s=m[n+2])&&(h=s),u<r&&(u=r),c<i&&(c=i),l<s&&(l=s);t.boundingBox={min:{x:a,y:o,z:h},max:{x:u,y:c,z:l}};var y=.5*(a+u),v=.5*(o+c),g=.5*(h+l),x=t.boundingSphere={};x.center={x:y,y:v,z:g};var _=0;for(e=0,n=d;e<p;e++,n+=f){var b=(r=m[n])-y,w=(i=m[n+1])-v,k=(s=m[n+2])-g,z=b*b+w*w+k*k;z>_&&(_=z)}x.radius=Math.sqrt(_)},bboxUnion:function(t,e){e.min.x<t.min.x&&(t.min.x=e.min.x),e.min.y<t.min.y&&(t.min.y=e.min.y),e.min.z<t.min.z&&(t.min.z=e.min.z),e.max.x>t.max.x&&(t.max.x=e.max.x),e.max.y>t.max.y&&(t.max.y=e.max.y),e.max.z>t.max.z&&(t.max.z=e.max.z)}}},function(t,e){},function(t,e,n){\\\"use strict\\\";n.d(e,\\\"b\\\",(function(){return s})),n.d(e,\\\"a\\\",(function(){return a}));var r=!0,i=1048576;function s(t,e,n){if(void 0===e&&(e=0),void 0===n&&(n=t.length),r)return n>i?function(t,e,n){var r,i,s,a,o,h,u,c;for(r=\\\"\\\",o=[],s=n,h=0,i=0;i<s;){switch((a=t[e+i++])>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:o.push(String.fromCharCode(a));break;case 12:case 13:u=t[e+i++],o.push(String.fromCharCode((31&a)<<6|63&u));break;case 14:u=t[e+i++],c=t[e+i++],o.push(String.fromCharCode((15&a)<<12|(63&u)<<6|(63&c)<<0))}(++h>=32768||i>=s)&&(r+=o.join(\\\"\\\"),o.length=0,h=0)}return r}(t,e,n):function(t,e,n){var r,i,s,a,o,h;for(r=\\\"\\\",s=n,i=0;i<s;)switch((a=t[e+i++])>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:r+=String.fromCharCode(a);break;case 12:case 13:o=t[e+i++],r+=String.fromCharCode((31&a)<<6|63&o);break;case 14:o=t[e+i++],h=t[e+i++],r+=String.fromCharCode((15&a)<<12|(63&o)<<6|(63&h)<<0)}return r}(t,e,n);for(var s=\\\"\\\",a=e,o=e+n;a<o;a++)s+=String.fromCharCode(t[a]);return decodeURIComponent(escape(s))}function a(t){var e=s(t,0,t.length);return JSON.parse(e)}},function(t,e,n){\\\"use strict\\\";var r={};(0,n(10).assign)(r,n(22),n(25),n(20)),t.exports=r},function(t,e,n){\\\"use strict\\\";t.exports={2:\\\"need dictionary\\\",1:\\\"stream end\\\",0:\\\"\\\",\\\"-1\\\":\\\"file error\\\",\\\"-2\\\":\\\"stream error\\\",\\\"-3\\\":\\\"data error\\\",\\\"-4\\\":\\\"insufficient memory\\\",\\\"-5\\\":\\\"buffer error\\\",\\\"-6\\\":\\\"incompatible version\\\"}},function(t,e,n){\\\"use strict\\\";t.exports=function(t,e,n,r){for(var i=65535&t|0,s=t>>>16&65535|0,a=0;0!==n;){n-=a=n>2e3?2e3:n;do{s=s+(i=i+e[r++]|0)|0}while(--a);i%=65521,s%=65521}return i|s<<16|0}},function(t,e,n){\\\"use strict\\\";var r=function(){for(var t,e=[],n=0;n<256;n++){t=n;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[n]=t}return e}();t.exports=function(t,e,n,i){var s=r,a=i+n;t^=-1;for(var o=i;o<a;o++)t=t>>>8^s[255&(t^e[o])];return-1^t}},function(t,e,n){\\\"use strict\\\";var r=n(10),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var a=new r.Buf8(256),o=0;o<256;o++)a[o]=o>=252?6:o>=248?5:o>=240?4:o>=224?3:o>=192?2:1;function h(t,e){if(e<65534&&(t.subarray&&s||!t.subarray&&i))return String.fromCharCode.apply(null,r.shrinkBuf(t,e));for(var n=\\\"\\\",a=0;a<e;a++)n+=String.fromCharCode(t[a]);return n}a[254]=a[254]=1,e.string2buf=function(t){var e,n,i,s,a,o=t.length,h=0;for(s=0;s<o;s++)55296==(64512&(n=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(i=t.charCodeAt(s+1)))&&(n=65536+(n-55296<<10)+(i-56320),s++),h+=n<128?1:n<2048?2:n<65536?3:4;for(e=new r.Buf8(h),a=0,s=0;a<h;s++)55296==(64512&(n=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(i=t.charCodeAt(s+1)))&&(n=65536+(n-55296<<10)+(i-56320),s++),n<128?e[a++]=n:n<2048?(e[a++]=192|n>>>6,e[a++]=128|63&n):n<65536?(e[a++]=224|n>>>12,e[a++]=128|n>>>6&63,e[a++]=128|63&n):(e[a++]=240|n>>>18,e[a++]=128|n>>>12&63,e[a++]=128|n>>>6&63,e[a++]=128|63&n);return e},e.buf2binstring=function(t){return h(t,t.length)},e.binstring2buf=function(t){for(var e=new r.Buf8(t.length),n=0,i=e.length;n<i;n++)e[n]=t.charCodeAt(n);return e},e.buf2string=function(t,e){var n,r,i,s,o=e||t.length,u=new Array(2*o);for(r=0,n=0;n<o;)if((i=t[n++])<128)u[r++]=i;else if((s=a[i])>4)u[r++]=65533,n+=s-1;else{for(i&=2===s?31:3===s?15:7;s>1&&n<o;)i=i<<6|63&t[n++],s--;s>1?u[r++]=65533:i<65536?u[r++]=i:(i-=65536,u[r++]=55296|i>>10&1023,u[r++]=56320|1023&i)}return h(u,r)},e.utf8border=function(t,e){var n;for((e=e||t.length)>t.length&&(e=t.length),n=e-1;n>=0&&128==(192&t[n]);)n--;return n<0?e:0===n?e:n+a[t[n]]>e?n:e}},function(t,e,n){\\\"use strict\\\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\\\"\\\",this.state=null,this.data_type=2,this.adler=0}},function(t,e,n){\\\"use strict\\\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(t,e){var n;n=function(){return this}();try{n=n||new Function(\\\"return this\\\")()}catch(t){\\\"object\\\"==typeof window&&(n=window)}t.exports=n},function(t,e,n){\\\"use strict\\\";var r=n(23),i=n(10),s=n(18),a=n(15),o=n(19),h=Object.prototype.toString,u=0,c=-1,l=0,f=8;function d(t){if(!(this instanceof d))return new d(t);this.options=i.assign({level:c,method:f,chunkSize:16384,windowBits:15,memLevel:8,strategy:l,to:\\\"\\\"},t||{});var e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new o,this.strm.avail_out=0;var n=r.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(n!==u)throw new Error(a[n]);if(e.header&&r.deflateSetHeader(this.strm,e.header),e.dictionary){var m;if(m=\\\"string\\\"==typeof e.dictionary?s.string2buf(e.dictionary):\\\"[object ArrayBuffer]\\\"===h.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(n=r.deflateSetDictionary(this.strm,m))!==u)throw new Error(a[n]);this._dict_set=!0}}function m(t,e){var n=new d(e);if(n.push(t,!0),n.err)throw n.msg||a[n.err];return n.result}d.prototype.push=function(t,e){var n,a,o=this.strm,c=this.options.chunkSize;if(this.ended)return!1;a=e===~~e?e:!0===e?4:0,\\\"string\\\"==typeof t?o.input=s.string2buf(t):\\\"[object ArrayBuffer]\\\"===h.call(t)?o.input=new Uint8Array(t):o.input=t,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new i.Buf8(c),o.next_out=0,o.avail_out=c),1!==(n=r.deflate(o,a))&&n!==u)return this.onEnd(n),this.ended=!0,!1;0!==o.avail_out&&(0!==o.avail_in||4!==a&&2!==a)||(\\\"string\\\"===this.options.to?this.onData(s.buf2binstring(i.shrinkBuf(o.output,o.next_out))):this.onData(i.shrinkBuf(o.output,o.next_out)))}while((o.avail_in>0||0===o.avail_out)&&1!==n);return 4===a?(n=r.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===u):2!==a||(this.onEnd(u),o.avail_out=0,!0)},d.prototype.onData=function(t){this.chunks.push(t)},d.prototype.onEnd=function(t){t===u&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Deflate=d,e.deflate=m,e.deflateRaw=function(t,e){return(e=e||{}).raw=!0,m(t,e)},e.gzip=function(t,e){return(e=e||{}).gzip=!0,m(t,e)}},function(t,e,n){\\\"use strict\\\";var r,i=n(10),s=n(24),a=n(16),o=n(17),h=n(15),u=0,c=1,l=3,f=4,d=5,m=0,p=1,y=-2,v=-3,g=-5,x=-1,_=1,b=2,w=3,k=4,z=0,E=2,S=8,M=9,A=15,I=8,T=286,C=30,O=19,R=2*T+1,P=15,F=3,U=258,V=U+F+1,L=32,B=42,D=69,N=73,j=91,H=103,q=113,Z=666,G=1,W=2,Q=3,X=4,Y=3;function K(t,e){return t.msg=h[e],e}function J(t){return(t<<1)-(t>4?9:0)}function $(t){for(var e=t.length;--e>=0;)t[e]=0}function tt(t){var e=t.state,n=e.pending;n>t.avail_out&&(n=t.avail_out),0!==n&&(i.arraySet(t.output,e.pending_buf,e.pending_out,n,t.next_out),t.next_out+=n,e.pending_out+=n,t.total_out+=n,t.avail_out-=n,e.pending-=n,0===e.pending&&(e.pending_out=0))}function et(t,e){s._tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,tt(t.strm)}function nt(t,e){t.pending_buf[t.pending++]=e}function rt(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function it(t,e){var n,r,i=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-V?t.strstart-(t.w_size-V):0,u=t.window,c=t.w_mask,l=t.prev,f=t.strstart+U,d=u[s+a-1],m=u[s+a];t.prev_length>=t.good_match&&(i>>=2),o>t.lookahead&&(o=t.lookahead);do{if(u[(n=e)+a]===m&&u[n+a-1]===d&&u[n]===u[s]&&u[++n]===u[s+1]){s+=2,n++;do{}while(u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&u[++s]===u[++n]&&s<f);if(r=U-(f-s),s=f-U,r>a){if(t.match_start=e,a=r,r>=o)break;d=u[s+a-1],m=u[s+a]}}}while((e=l[e&c])>h&&0!=--i);return a<=t.lookahead?a:t.lookahead}function st(t){var e,n,r,s,h,u,c,l,f,d,m=t.w_size;do{if(s=t.window_size-t.lookahead-t.strstart,t.strstart>=m+(m-V)){i.arraySet(t.window,t.window,m,m,0),t.match_start-=m,t.strstart-=m,t.block_start-=m,e=n=t.hash_size;do{r=t.head[--e],t.head[e]=r>=m?r-m:0}while(--n);e=n=m;do{r=t.prev[--e],t.prev[e]=r>=m?r-m:0}while(--n);s+=m}if(0===t.strm.avail_in)break;if(u=t.strm,c=t.window,l=t.strstart+t.lookahead,f=s,d=void 0,(d=u.avail_in)>f&&(d=f),n=0===d?0:(u.avail_in-=d,i.arraySet(c,u.input,u.next_in,d,l),1===u.state.wrap?u.adler=a(u.adler,c,d,l):2===u.state.wrap&&(u.adler=o(u.adler,c,d,l)),u.next_in+=d,u.total_in+=d,d),t.lookahead+=n,t.lookahead+t.insert>=F)for(h=t.strstart-t.insert,t.ins_h=t.window[h],t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+F-1])&t.hash_mask,t.prev[h&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=h,h++,t.insert--,!(t.lookahead+t.insert<F)););}while(t.lookahead<V&&0!==t.strm.avail_in)}function at(t,e){for(var n,r;;){if(t.lookahead<V){if(st(t),t.lookahead<V&&e===u)return G;if(0===t.lookahead)break}if(n=0,t.lookahead>=F&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==n&&t.strstart-n<=t.w_size-V&&(t.match_length=it(t,n)),t.match_length>=F)if(r=s._tr_tally(t,t.strstart-t.match_start,t.match_length-F),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=F){t.match_length--;do{t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else r=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=t.strstart<F-1?t.strstart:F-1,e===f?(et(t,!0),0===t.strm.avail_out?Q:X):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}function ot(t,e){for(var n,r,i;;){if(t.lookahead<V){if(st(t),t.lookahead<V&&e===u)return G;if(0===t.lookahead)break}if(n=0,t.lookahead>=F&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=F-1,0!==n&&t.prev_length<t.max_lazy_match&&t.strstart-n<=t.w_size-V&&(t.match_length=it(t,n),t.match_length<=5&&(t.strategy===_||t.match_length===F&&t.strstart-t.match_start>4096)&&(t.match_length=F-1)),t.prev_length>=F&&t.match_length<=t.prev_length){i=t.strstart+t.lookahead-F,r=s._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-F),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=i&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=F-1,t.strstart++,r&&(et(t,!1),0===t.strm.avail_out))return G}else if(t.match_available){if((r=s._tr_tally(t,0,t.window[t.strstart-1]))&&et(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return G}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=s._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<F-1?t.strstart:F-1,e===f?(et(t,!0),0===t.strm.avail_out?Q:X):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}function ht(t,e,n,r,i){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=r,this.func=i}function ut(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=S,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new i.Buf16(2*R),this.dyn_dtree=new i.Buf16(2*(2*C+1)),this.bl_tree=new i.Buf16(2*(2*O+1)),$(this.dyn_ltree),$(this.dyn_dtree),$(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf16(P+1),this.heap=new i.Buf16(2*T+1),$(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new i.Buf16(2*T+1),$(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function ct(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=E,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?B:q,t.adler=2===e.wrap?0:1,e.last_flush=u,s._tr_init(e),m):K(t,y)}function lt(t){var e,n=ct(t);return n===m&&((e=t.state).window_size=2*e.w_size,$(e.head),e.max_lazy_match=r[e.level].max_lazy,e.good_match=r[e.level].good_length,e.nice_match=r[e.level].nice_length,e.max_chain_length=r[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=F-1,e.match_available=0,e.ins_h=0),n}function ft(t,e,n,r,s,a){if(!t)return y;var o=1;if(e===x&&(e=6),r<0?(o=0,r=-r):r>15&&(o=2,r-=16),s<1||s>M||n!==S||r<8||r>15||e<0||e>9||a<0||a>k)return K(t,y);8===r&&(r=9);var h=new ut;return t.state=h,h.strm=t,h.wrap=o,h.gzhead=null,h.w_bits=r,h.w_size=1<<h.w_bits,h.w_mask=h.w_size-1,h.hash_bits=s+7,h.hash_size=1<<h.hash_bits,h.hash_mask=h.hash_size-1,h.hash_shift=~~((h.hash_bits+F-1)/F),h.window=new i.Buf8(2*h.w_size),h.head=new i.Buf16(h.hash_size),h.prev=new i.Buf16(h.w_size),h.lit_bufsize=1<<s+6,h.pending_buf_size=4*h.lit_bufsize,h.pending_buf=new i.Buf8(h.pending_buf_size),h.d_buf=1*h.lit_bufsize,h.l_buf=3*h.lit_bufsize,h.level=e,h.strategy=a,h.method=n,lt(t)}r=[new ht(0,0,0,0,(function(t,e){var n=65535;for(n>t.pending_buf_size-5&&(n=t.pending_buf_size-5);;){if(t.lookahead<=1){if(st(t),0===t.lookahead&&e===u)return G;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var r=t.block_start+n;if((0===t.strstart||t.strstart>=r)&&(t.lookahead=t.strstart-r,t.strstart=r,et(t,!1),0===t.strm.avail_out))return G;if(t.strstart-t.block_start>=t.w_size-V&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?Q:X):(t.strstart>t.block_start&&(et(t,!1),t.strm.avail_out),G)})),new ht(4,4,8,4,at),new ht(4,5,16,8,at),new ht(4,6,32,32,at),new ht(4,4,16,16,ot),new ht(8,16,32,32,ot),new ht(8,16,128,128,ot),new ht(8,32,128,256,ot),new ht(32,128,258,1024,ot),new ht(32,258,258,4096,ot)],e.deflateInit=function(t,e){return ft(t,e,S,A,I,z)},e.deflateInit2=ft,e.deflateReset=lt,e.deflateResetKeep=ct,e.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?y:(t.state.gzhead=e,m):y},e.deflate=function(t,e){var n,i,a,h;if(!t||!t.state||e>d||e<0)return t?K(t,y):y;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||i.status===Z&&e!==f)return K(t,0===t.avail_out?g:y);if(i.strm=t,n=i.last_flush,i.last_flush=e,i.status===B)if(2===i.wrap)t.adler=0,nt(i,31),nt(i,139),nt(i,8),i.gzhead?(nt(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),nt(i,255&i.gzhead.time),nt(i,i.gzhead.time>>8&255),nt(i,i.gzhead.time>>16&255),nt(i,i.gzhead.time>>24&255),nt(i,9===i.level?2:i.strategy>=b||i.level<2?4:0),nt(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(nt(i,255&i.gzhead.extra.length),nt(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=o(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=D):(nt(i,0),nt(i,0),nt(i,0),nt(i,0),nt(i,0),nt(i,9===i.level?2:i.strategy>=b||i.level<2?4:0),nt(i,Y),i.status=q);else{var v=S+(i.w_bits-8<<4)<<8;v|=(i.strategy>=b||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(v|=L),v+=31-v%31,i.status=q,rt(i,v),0!==i.strstart&&(rt(i,t.adler>>>16),rt(i,65535&t.adler)),t.adler=1}if(i.status===D)if(i.gzhead.extra){for(a=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending!==i.pending_buf_size));)nt(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=N)}else i.status=N;if(i.status===N)if(i.gzhead.name){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending===i.pending_buf_size)){h=1;break}h=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,nt(i,h)}while(0!==h);i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),0===h&&(i.gzindex=0,i.status=j)}else i.status=j;if(i.status===j)if(i.gzhead.comment){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending===i.pending_buf_size)){h=1;break}h=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,nt(i,h)}while(0!==h);i.gzhead.hcrc&&i.pending>a&&(t.adler=o(t.adler,i.pending_buf,i.pending-a,a)),0===h&&(i.status=H)}else i.status=H;if(i.status===H&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&tt(t),i.pending+2<=i.pending_buf_size&&(nt(i,255&t.adler),nt(i,t.adler>>8&255),t.adler=0,i.status=q)):i.status=q),0!==i.pending){if(tt(t),0===t.avail_out)return i.last_flush=-1,m}else if(0===t.avail_in&&J(e)<=J(n)&&e!==f)return K(t,g);if(i.status===Z&&0!==t.avail_in)return K(t,g);if(0!==t.avail_in||0!==i.lookahead||e!==u&&i.status!==Z){var x=i.strategy===b?function(t,e){for(var n;;){if(0===t.lookahead&&(st(t),0===t.lookahead)){if(e===u)return G;break}if(t.match_length=0,n=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,n&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?Q:X):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}(i,e):i.strategy===w?function(t,e){for(var n,r,i,a,o=t.window;;){if(t.lookahead<=U){if(st(t),t.lookahead<=U&&e===u)return G;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=F&&t.strstart>0&&(r=o[i=t.strstart-1])===o[++i]&&r===o[++i]&&r===o[++i]){a=t.strstart+U;do{}while(r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&i<a);t.match_length=U-(a-i),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=F?(n=s._tr_tally(t,1,t.match_length-F),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(n=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),n&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?Q:X):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}(i,e):r[i.level].func(i,e);if(x!==Q&&x!==X||(i.status=Z),x===G||x===Q)return 0===t.avail_out&&(i.last_flush=-1),m;if(x===W&&(e===c?s._tr_align(i):e!==d&&(s._tr_stored_block(i,0,0,!1),e===l&&($(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),tt(t),0===t.avail_out))return i.last_flush=-1,m}return e!==f?m:i.wrap<=0?p:(2===i.wrap?(nt(i,255&t.adler),nt(i,t.adler>>8&255),nt(i,t.adler>>16&255),nt(i,t.adler>>24&255),nt(i,255&t.total_in),nt(i,t.total_in>>8&255),nt(i,t.total_in>>16&255),nt(i,t.total_in>>24&255)):(rt(i,t.adler>>>16),rt(i,65535&t.adler)),tt(t),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?m:p)},e.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==B&&e!==D&&e!==N&&e!==j&&e!==H&&e!==q&&e!==Z?K(t,y):(t.state=null,e===q?K(t,v):m):y},e.deflateSetDictionary=function(t,e){var n,r,s,o,h,u,c,l,f=e.length;if(!t||!t.state)return y;if(2===(o=(n=t.state).wrap)||1===o&&n.status!==B||n.lookahead)return y;for(1===o&&(t.adler=a(t.adler,e,f,0)),n.wrap=0,f>=n.w_size&&(0===o&&($(n.head),n.strstart=0,n.block_start=0,n.insert=0),l=new i.Buf8(n.w_size),i.arraySet(l,e,f-n.w_size,n.w_size,0),e=l,f=n.w_size),h=t.avail_in,u=t.next_in,c=t.input,t.avail_in=f,t.next_in=0,t.input=e,st(n);n.lookahead>=F;){r=n.strstart,s=n.lookahead-(F-1);do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[r+F-1])&n.hash_mask,n.prev[r&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=r,r++}while(--s);n.strstart=r,n.lookahead=F-1,st(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=F-1,n.match_available=0,t.next_in=u,t.input=c,t.avail_in=h,n.wrap=o,m},e.deflateInfo=\\\"pako deflate (from Nodeca project)\\\"},function(t,e,n){\\\"use strict\\\";var r=n(10),i=4,s=0,a=1,o=2;function h(t){for(var e=t.length;--e>=0;)t[e]=0}var u=0,c=1,l=2,f=29,d=256,m=d+1+f,p=30,y=19,v=2*m+1,g=15,x=16,_=7,b=256,w=16,k=17,z=18,E=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],S=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],M=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],I=new Array(2*(m+2));h(I);var T=new Array(2*p);h(T);var C=new Array(512);h(C);var O=new Array(256);h(O);var R=new Array(f);h(R);var P,F,U,V=new Array(p);function L(t,e,n,r,i){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=t&&t.length}function B(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function D(t){return t<256?C[t]:C[256+(t>>>7)]}function N(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function j(t,e,n){t.bi_valid>x-n?(t.bi_buf|=e<<t.bi_valid&65535,N(t,t.bi_buf),t.bi_buf=e>>x-t.bi_valid,t.bi_valid+=n-x):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=n)}function H(t,e,n){j(t,n[2*e],n[2*e+1])}function q(t,e){var n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1}function Z(t,e,n){var r,i,s=new Array(g+1),a=0;for(r=1;r<=g;r++)s[r]=a=a+n[r-1]<<1;for(i=0;i<=e;i++){var o=t[2*i+1];0!==o&&(t[2*i]=q(s[o]++,o))}}function G(t){var e;for(e=0;e<m;e++)t.dyn_ltree[2*e]=0;for(e=0;e<p;e++)t.dyn_dtree[2*e]=0;for(e=0;e<y;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*b]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function W(t){t.bi_valid>8?N(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function Q(t,e,n,r){var i=2*e,s=2*n;return t[i]<t[s]||t[i]===t[s]&&r[e]<=r[n]}function X(t,e,n){for(var r=t.heap[n],i=n<<1;i<=t.heap_len&&(i<t.heap_len&&Q(e,t.heap[i+1],t.heap[i],t.depth)&&i++,!Q(e,r,t.heap[i],t.depth));)t.heap[n]=t.heap[i],n=i,i<<=1;t.heap[n]=r}function Y(t,e,n){var r,i,s,a,o=0;if(0!==t.last_lit)do{r=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],i=t.pending_buf[t.l_buf+o],o++,0===r?H(t,i,e):(H(t,(s=O[i])+d+1,e),0!==(a=E[s])&&j(t,i-=R[s],a),H(t,s=D(--r),n),0!==(a=S[s])&&j(t,r-=V[s],a))}while(o<t.last_lit);H(t,b,e)}function K(t,e){var n,r,i,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,h=e.stat_desc.elems,u=-1;for(t.heap_len=0,t.heap_max=v,n=0;n<h;n++)0!==s[2*n]?(t.heap[++t.heap_len]=u=n,t.depth[n]=0):s[2*n+1]=0;for(;t.heap_len<2;)s[2*(i=t.heap[++t.heap_len]=u<2?++u:0)]=1,t.depth[i]=0,t.opt_len--,o&&(t.static_len-=a[2*i+1]);for(e.max_code=u,n=t.heap_len>>1;n>=1;n--)X(t,s,n);i=h;do{n=t.heap[1],t.heap[1]=t.heap[t.heap_len--],X(t,s,1),r=t.heap[1],t.heap[--t.heap_max]=n,t.heap[--t.heap_max]=r,s[2*i]=s[2*n]+s[2*r],t.depth[i]=(t.depth[n]>=t.depth[r]?t.depth[n]:t.depth[r])+1,s[2*n+1]=s[2*r+1]=i,t.heap[1]=i++,X(t,s,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],function(t,e){var n,r,i,s,a,o,h=e.dyn_tree,u=e.max_code,c=e.stat_desc.static_tree,l=e.stat_desc.has_stree,f=e.stat_desc.extra_bits,d=e.stat_desc.extra_base,m=e.stat_desc.max_length,p=0;for(s=0;s<=g;s++)t.bl_count[s]=0;for(h[2*t.heap[t.heap_max]+1]=0,n=t.heap_max+1;n<v;n++)(s=h[2*h[2*(r=t.heap[n])+1]+1]+1)>m&&(s=m,p++),h[2*r+1]=s,r>u||(t.bl_count[s]++,a=0,r>=d&&(a=f[r-d]),o=h[2*r],t.opt_len+=o*(s+a),l&&(t.static_len+=o*(c[2*r+1]+a)));if(0!==p){do{for(s=m-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[m]--,p-=2}while(p>0);for(s=m;0!==s;s--)for(r=t.bl_count[s];0!==r;)(i=t.heap[--n])>u||(h[2*i+1]!==s&&(t.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),r--)}}(t,e),Z(s,u,t.bl_count)}function J(t,e,n){var r,i,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),e[2*(n+1)+1]=65535,r=0;r<=n;r++)i=a,a=e[2*(r+1)+1],++o<h&&i===a||(o<u?t.bl_tree[2*i]+=o:0!==i?(i!==s&&t.bl_tree[2*i]++,t.bl_tree[2*w]++):o<=10?t.bl_tree[2*k]++:t.bl_tree[2*z]++,o=0,s=i,0===a?(h=138,u=3):i===a?(h=6,u=3):(h=7,u=4))}function $(t,e,n){var r,i,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),r=0;r<=n;r++)if(i=a,a=e[2*(r+1)+1],!(++o<h&&i===a)){if(o<u)do{H(t,i,t.bl_tree)}while(0!=--o);else 0!==i?(i!==s&&(H(t,i,t.bl_tree),o--),H(t,w,t.bl_tree),j(t,o-3,2)):o<=10?(H(t,k,t.bl_tree),j(t,o-3,3)):(H(t,z,t.bl_tree),j(t,o-11,7));o=0,s=i,0===a?(h=138,u=3):i===a?(h=6,u=3):(h=7,u=4)}}h(V);var tt=!1;function et(t,e,n,i){j(t,(u<<1)+(i?1:0),3),function(t,e,n,i){W(t),i&&(N(t,n),N(t,~n)),r.arraySet(t.pending_buf,t.window,e,n,t.pending),t.pending+=n}(t,e,n,!0)}e._tr_init=function(t){tt||(!function(){var t,e,n,r,i,s=new Array(g+1);for(n=0,r=0;r<f-1;r++)for(R[r]=n,t=0;t<1<<E[r];t++)O[n++]=r;for(O[n-1]=r,i=0,r=0;r<16;r++)for(V[r]=i,t=0;t<1<<S[r];t++)C[i++]=r;for(i>>=7;r<p;r++)for(V[r]=i<<7,t=0;t<1<<S[r]-7;t++)C[256+i++]=r;for(e=0;e<=g;e++)s[e]=0;for(t=0;t<=143;)I[2*t+1]=8,t++,s[8]++;for(;t<=255;)I[2*t+1]=9,t++,s[9]++;for(;t<=279;)I[2*t+1]=7,t++,s[7]++;for(;t<=287;)I[2*t+1]=8,t++,s[8]++;for(Z(I,m+1,s),t=0;t<p;t++)T[2*t+1]=5,T[2*t]=q(t,5);P=new L(I,E,d+1,m,g),F=new L(T,S,0,p,g),U=new L(new Array(0),M,0,y,_)}(),tt=!0),t.l_desc=new B(t.dyn_ltree,P),t.d_desc=new B(t.dyn_dtree,F),t.bl_desc=new B(t.bl_tree,U),t.bi_buf=0,t.bi_valid=0,G(t)},e._tr_stored_block=et,e._tr_flush_block=function(t,e,n,r){var h,u,f=0;t.level>0?(t.strm.data_type===o&&(t.strm.data_type=function(t){var e,n=4093624447;for(e=0;e<=31;e++,n>>>=1)if(1&n&&0!==t.dyn_ltree[2*e])return s;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return a;for(e=32;e<d;e++)if(0!==t.dyn_ltree[2*e])return a;return s}(t)),K(t,t.l_desc),K(t,t.d_desc),f=function(t){var e;for(J(t,t.dyn_ltree,t.l_desc.max_code),J(t,t.dyn_dtree,t.d_desc.max_code),K(t,t.bl_desc),e=y-1;e>=3&&0===t.bl_tree[2*A[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),h=t.opt_len+3+7>>>3,(u=t.static_len+3+7>>>3)<=h&&(h=u)):h=u=n+5,n+4<=h&&-1!==e?et(t,e,n,r):t.strategy===i||u===h?(j(t,(c<<1)+(r?1:0),3),Y(t,I,T)):(j(t,(l<<1)+(r?1:0),3),function(t,e,n,r){var i;for(j(t,e-257,5),j(t,n-1,5),j(t,r-4,4),i=0;i<r;i++)j(t,t.bl_tree[2*A[i]+1],3);$(t,t.dyn_ltree,e-1),$(t,t.dyn_dtree,n-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,f+1),Y(t,t.dyn_ltree,t.dyn_dtree)),G(t),r&&W(t)},e._tr_tally=function(t,e,n){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&n,t.last_lit++,0===e?t.dyn_ltree[2*n]++:(t.matches++,e--,t.dyn_ltree[2*(O[n]+d+1)]++,t.dyn_dtree[2*D(e)]++),t.last_lit===t.lit_bufsize-1},e._tr_align=function(t){j(t,c<<1,3),H(t,b,I),function(t){16===t.bi_valid?(N(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},function(t,e,n){\\\"use strict\\\";var r=n(26),i=n(10),s=n(18),a=n(20),o=n(15),h=n(19),u=n(29),c=Object.prototype.toString;function l(t){if(!(this instanceof l))return new l(t);this.options=i.assign({chunkSize:16384,windowBits:0,to:\\\"\\\"},t||{});var e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var n=r.inflateInit2(this.strm,e.windowBits);if(n!==a.Z_OK)throw new Error(o[n]);if(this.header=new u,r.inflateGetHeader(this.strm,this.header),e.dictionary&&(\\\"string\\\"==typeof e.dictionary?e.dictionary=s.string2buf(e.dictionary):\\\"[object ArrayBuffer]\\\"===c.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(n=r.inflateSetDictionary(this.strm,e.dictionary))!==a.Z_OK))throw new Error(o[n])}function f(t,e){var n=new l(e);if(n.push(t,!0),n.err)throw n.msg||o[n.err];return n.result}l.prototype.push=function(t,e){var n,o,h,u,l,f=this.strm,d=this.options.chunkSize,m=this.options.dictionary,p=!1;if(this.ended)return!1;o=e===~~e?e:!0===e?a.Z_FINISH:a.Z_NO_FLUSH,\\\"string\\\"==typeof t?f.input=s.binstring2buf(t):\\\"[object ArrayBuffer]\\\"===c.call(t)?f.input=new Uint8Array(t):f.input=t,f.next_in=0,f.avail_in=f.input.length;do{if(0===f.avail_out&&(f.output=new i.Buf8(d),f.next_out=0,f.avail_out=d),(n=r.inflate(f,a.Z_NO_FLUSH))===a.Z_NEED_DICT&&m&&(n=r.inflateSetDictionary(this.strm,m)),n===a.Z_BUF_ERROR&&!0===p&&(n=a.Z_OK,p=!1),n!==a.Z_STREAM_END&&n!==a.Z_OK)return this.onEnd(n),this.ended=!0,!1;f.next_out&&(0!==f.avail_out&&n!==a.Z_STREAM_END&&(0!==f.avail_in||o!==a.Z_FINISH&&o!==a.Z_SYNC_FLUSH)||(\\\"string\\\"===this.options.to?(h=s.utf8border(f.output,f.next_out),u=f.next_out-h,l=s.buf2string(f.output,h),f.next_out=u,f.avail_out=d-u,u&&i.arraySet(f.output,f.output,h,u,0),this.onData(l)):this.onData(i.shrinkBuf(f.output,f.next_out)))),0===f.avail_in&&0===f.avail_out&&(p=!0)}while((f.avail_in>0||0===f.avail_out)&&n!==a.Z_STREAM_END);return n===a.Z_STREAM_END&&(o=a.Z_FINISH),o===a.Z_FINISH?(n=r.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===a.Z_OK):o!==a.Z_SYNC_FLUSH||(this.onEnd(a.Z_OK),f.avail_out=0,!0)},l.prototype.onData=function(t){this.chunks.push(t)},l.prototype.onEnd=function(t){t===a.Z_OK&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Inflate=l,e.inflate=f,e.inflateRaw=function(t,e){return(e=e||{}).raw=!0,f(t,e)},e.ungzip=f},function(t,e,n){\\\"use strict\\\";var r=n(10),i=n(16),s=n(17),a=n(27),o=n(28),h=0,u=1,c=2,l=4,f=5,d=6,m=0,p=1,y=2,v=-2,g=-3,x=-4,_=-5,b=8,w=1,k=2,z=3,E=4,S=5,M=6,A=7,I=8,T=9,C=10,O=11,R=12,P=13,F=14,U=15,V=16,L=17,B=18,D=19,N=20,j=21,H=22,q=23,Z=24,G=25,W=26,Q=27,X=28,Y=29,K=30,J=31,$=32,tt=852,et=592,nt=15;function rt(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function it(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function st(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\\\"\\\",e.wrap&&(t.adler=1&e.wrap),e.mode=w,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new r.Buf32(tt),e.distcode=e.distdyn=new r.Buf32(et),e.sane=1,e.back=-1,m):v}function at(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,st(t)):v}function ot(t,e){var n,r;return t&&t.state?(r=t.state,e<0?(n=0,e=-e):(n=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?v:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=n,r.wbits=e,at(t))):v}function ht(t,e){var n,r;return t?(r=new it,t.state=r,r.window=null,(n=ot(t,e))!==m&&(t.state=null),n):v}var ut,ct,lt=!0;function ft(t){if(lt){var e;for(ut=new r.Buf32(512),ct=new r.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(o(u,t.lens,0,288,ut,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;o(c,t.lens,0,32,ct,0,t.work,{bits:5}),lt=!1}t.lencode=ut,t.lenbits=9,t.distcode=ct,t.distbits=5}function dt(t,e,n,i){var s,a=t.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new r.Buf8(a.wsize)),i>=a.wsize?(r.arraySet(a.window,e,n-a.wsize,a.wsize,0),a.wnext=0,a.whave=a.wsize):((s=a.wsize-a.wnext)>i&&(s=i),r.arraySet(a.window,e,n-i,s,a.wnext),(i-=s)?(r.arraySet(a.window,e,n-i,i,0),a.wnext=i,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0}e.inflateReset=at,e.inflateReset2=ot,e.inflateResetKeep=st,e.inflateInit=function(t){return ht(t,nt)},e.inflateInit2=ht,e.inflate=function(t,e){var n,tt,et,nt,it,st,at,ot,ht,ut,ct,lt,mt,pt,yt,vt,gt,xt,_t,bt,wt,kt,zt,Et,St=0,Mt=new r.Buf8(4),At=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return v;(n=t.state).mode===R&&(n.mode=P),it=t.next_out,et=t.output,at=t.avail_out,nt=t.next_in,tt=t.input,st=t.avail_in,ot=n.hold,ht=n.bits,ut=st,ct=at,kt=m;t:for(;;)switch(n.mode){case w:if(0===n.wrap){n.mode=P;break}for(;ht<16;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(2&n.wrap&&35615===ot){n.check=0,Mt[0]=255&ot,Mt[1]=ot>>>8&255,n.check=s(n.check,Mt,2,0),ot=0,ht=0,n.mode=k;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&ot)<<8)+(ot>>8))%31){t.msg=\\\"incorrect header check\\\",n.mode=K;break}if((15&ot)!==b){t.msg=\\\"unknown compression method\\\",n.mode=K;break}if(ht-=4,wt=8+(15&(ot>>>=4)),0===n.wbits)n.wbits=wt;else if(wt>n.wbits){t.msg=\\\"invalid window size\\\",n.mode=K;break}n.dmax=1<<wt,t.adler=n.check=1,n.mode=512&ot?C:R,ot=0,ht=0;break;case k:for(;ht<16;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(n.flags=ot,(255&n.flags)!==b){t.msg=\\\"unknown compression method\\\",n.mode=K;break}if(57344&n.flags){t.msg=\\\"unknown header flags set\\\",n.mode=K;break}n.head&&(n.head.text=ot>>8&1),512&n.flags&&(Mt[0]=255&ot,Mt[1]=ot>>>8&255,n.check=s(n.check,Mt,2,0)),ot=0,ht=0,n.mode=z;case z:for(;ht<32;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.head&&(n.head.time=ot),512&n.flags&&(Mt[0]=255&ot,Mt[1]=ot>>>8&255,Mt[2]=ot>>>16&255,Mt[3]=ot>>>24&255,n.check=s(n.check,Mt,4,0)),ot=0,ht=0,n.mode=E;case E:for(;ht<16;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.head&&(n.head.xflags=255&ot,n.head.os=ot>>8),512&n.flags&&(Mt[0]=255&ot,Mt[1]=ot>>>8&255,n.check=s(n.check,Mt,2,0)),ot=0,ht=0,n.mode=S;case S:if(1024&n.flags){for(;ht<16;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.length=ot,n.head&&(n.head.extra_len=ot),512&n.flags&&(Mt[0]=255&ot,Mt[1]=ot>>>8&255,n.check=s(n.check,Mt,2,0)),ot=0,ht=0}else n.head&&(n.head.extra=null);n.mode=M;case M:if(1024&n.flags&&((lt=n.length)>st&&(lt=st),lt&&(n.head&&(wt=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),r.arraySet(n.head.extra,tt,nt,lt,wt)),512&n.flags&&(n.check=s(n.check,tt,lt,nt)),st-=lt,nt+=lt,n.length-=lt),n.length))break t;n.length=0,n.mode=A;case A:if(2048&n.flags){if(0===st)break t;lt=0;do{wt=tt[nt+lt++],n.head&&wt&&n.length<65536&&(n.head.name+=String.fromCharCode(wt))}while(wt&&lt<st);if(512&n.flags&&(n.check=s(n.check,tt,lt,nt)),st-=lt,nt+=lt,wt)break t}else n.head&&(n.head.name=null);n.length=0,n.mode=I;case I:if(4096&n.flags){if(0===st)break t;lt=0;do{wt=tt[nt+lt++],n.head&&wt&&n.length<65536&&(n.head.comment+=String.fromCharCode(wt))}while(wt&&lt<st);if(512&n.flags&&(n.check=s(n.check,tt,lt,nt)),st-=lt,nt+=lt,wt)break t}else n.head&&(n.head.comment=null);n.mode=T;case T:if(512&n.flags){for(;ht<16;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(ot!==(65535&n.check)){t.msg=\\\"header crc mismatch\\\",n.mode=K;break}ot=0,ht=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),t.adler=n.check=0,n.mode=R;break;case C:for(;ht<32;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}t.adler=n.check=rt(ot),ot=0,ht=0,n.mode=O;case O:if(0===n.havedict)return t.next_out=it,t.avail_out=at,t.next_in=nt,t.avail_in=st,n.hold=ot,n.bits=ht,y;t.adler=n.check=1,n.mode=R;case R:if(e===f||e===d)break t;case P:if(n.last){ot>>>=7&ht,ht-=7&ht,n.mode=Q;break}for(;ht<3;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}switch(n.last=1&ot,ht-=1,3&(ot>>>=1)){case 0:n.mode=F;break;case 1:if(ft(n),n.mode=N,e===d){ot>>>=2,ht-=2;break t}break;case 2:n.mode=L;break;case 3:t.msg=\\\"invalid block type\\\",n.mode=K}ot>>>=2,ht-=2;break;case F:for(ot>>>=7&ht,ht-=7&ht;ht<32;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if((65535&ot)!=(ot>>>16^65535)){t.msg=\\\"invalid stored block lengths\\\",n.mode=K;break}if(n.length=65535&ot,ot=0,ht=0,n.mode=U,e===d)break t;case U:n.mode=V;case V:if(lt=n.length){if(lt>st&&(lt=st),lt>at&&(lt=at),0===lt)break t;r.arraySet(et,tt,nt,lt,it),st-=lt,nt+=lt,at-=lt,it+=lt,n.length-=lt;break}n.mode=R;break;case L:for(;ht<14;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(n.nlen=257+(31&ot),ot>>>=5,ht-=5,n.ndist=1+(31&ot),ot>>>=5,ht-=5,n.ncode=4+(15&ot),ot>>>=4,ht-=4,n.nlen>286||n.ndist>30){t.msg=\\\"too many length or distance symbols\\\",n.mode=K;break}n.have=0,n.mode=B;case B:for(;n.have<n.ncode;){for(;ht<3;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.lens[At[n.have++]]=7&ot,ot>>>=3,ht-=3}for(;n.have<19;)n.lens[At[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,zt={bits:n.lenbits},kt=o(h,n.lens,0,19,n.lencode,0,n.work,zt),n.lenbits=zt.bits,kt){t.msg=\\\"invalid code lengths set\\\",n.mode=K;break}n.have=0,n.mode=D;case D:for(;n.have<n.nlen+n.ndist;){for(;vt=(St=n.lencode[ot&(1<<n.lenbits)-1])>>>16&255,gt=65535&St,!((yt=St>>>24)<=ht);){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(gt<16)ot>>>=yt,ht-=yt,n.lens[n.have++]=gt;else{if(16===gt){for(Et=yt+2;ht<Et;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(ot>>>=yt,ht-=yt,0===n.have){t.msg=\\\"invalid bit length repeat\\\",n.mode=K;break}wt=n.lens[n.have-1],lt=3+(3&ot),ot>>>=2,ht-=2}else if(17===gt){for(Et=yt+3;ht<Et;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}ht-=yt,wt=0,lt=3+(7&(ot>>>=yt)),ot>>>=3,ht-=3}else{for(Et=yt+7;ht<Et;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}ht-=yt,wt=0,lt=11+(127&(ot>>>=yt)),ot>>>=7,ht-=7}if(n.have+lt>n.nlen+n.ndist){t.msg=\\\"invalid bit length repeat\\\",n.mode=K;break}for(;lt--;)n.lens[n.have++]=wt}}if(n.mode===K)break;if(0===n.lens[256]){t.msg=\\\"invalid code -- missing end-of-block\\\",n.mode=K;break}if(n.lenbits=9,zt={bits:n.lenbits},kt=o(u,n.lens,0,n.nlen,n.lencode,0,n.work,zt),n.lenbits=zt.bits,kt){t.msg=\\\"invalid literal/lengths set\\\",n.mode=K;break}if(n.distbits=6,n.distcode=n.distdyn,zt={bits:n.distbits},kt=o(c,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,zt),n.distbits=zt.bits,kt){t.msg=\\\"invalid distances set\\\",n.mode=K;break}if(n.mode=N,e===d)break t;case N:n.mode=j;case j:if(st>=6&&at>=258){t.next_out=it,t.avail_out=at,t.next_in=nt,t.avail_in=st,n.hold=ot,n.bits=ht,a(t,ct),it=t.next_out,et=t.output,at=t.avail_out,nt=t.next_in,tt=t.input,st=t.avail_in,ot=n.hold,ht=n.bits,n.mode===R&&(n.back=-1);break}for(n.back=0;vt=(St=n.lencode[ot&(1<<n.lenbits)-1])>>>16&255,gt=65535&St,!((yt=St>>>24)<=ht);){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(vt&&0==(240&vt)){for(xt=yt,_t=vt,bt=gt;vt=(St=n.lencode[bt+((ot&(1<<xt+_t)-1)>>xt)])>>>16&255,gt=65535&St,!(xt+(yt=St>>>24)<=ht);){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}ot>>>=xt,ht-=xt,n.back+=xt}if(ot>>>=yt,ht-=yt,n.back+=yt,n.length=gt,0===vt){n.mode=W;break}if(32&vt){n.back=-1,n.mode=R;break}if(64&vt){t.msg=\\\"invalid literal/length code\\\",n.mode=K;break}n.extra=15&vt,n.mode=H;case H:if(n.extra){for(Et=n.extra;ht<Et;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.length+=ot&(1<<n.extra)-1,ot>>>=n.extra,ht-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=q;case q:for(;vt=(St=n.distcode[ot&(1<<n.distbits)-1])>>>16&255,gt=65535&St,!((yt=St>>>24)<=ht);){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(0==(240&vt)){for(xt=yt,_t=vt,bt=gt;vt=(St=n.distcode[bt+((ot&(1<<xt+_t)-1)>>xt)])>>>16&255,gt=65535&St,!(xt+(yt=St>>>24)<=ht);){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}ot>>>=xt,ht-=xt,n.back+=xt}if(ot>>>=yt,ht-=yt,n.back+=yt,64&vt){t.msg=\\\"invalid distance code\\\",n.mode=K;break}n.offset=gt,n.extra=15&vt,n.mode=Z;case Z:if(n.extra){for(Et=n.extra;ht<Et;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}n.offset+=ot&(1<<n.extra)-1,ot>>>=n.extra,ht-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){t.msg=\\\"invalid distance too far back\\\",n.mode=K;break}n.mode=G;case G:if(0===at)break t;if(lt=ct-at,n.offset>lt){if((lt=n.offset-lt)>n.whave&&n.sane){t.msg=\\\"invalid distance too far back\\\",n.mode=K;break}lt>n.wnext?(lt-=n.wnext,mt=n.wsize-lt):mt=n.wnext-lt,lt>n.length&&(lt=n.length),pt=n.window}else pt=et,mt=it-n.offset,lt=n.length;lt>at&&(lt=at),at-=lt,n.length-=lt;do{et[it++]=pt[mt++]}while(--lt);0===n.length&&(n.mode=j);break;case W:if(0===at)break t;et[it++]=n.length,at--,n.mode=j;break;case Q:if(n.wrap){for(;ht<32;){if(0===st)break t;st--,ot|=tt[nt++]<<ht,ht+=8}if(ct-=at,t.total_out+=ct,n.total+=ct,ct&&(t.adler=n.check=n.flags?s(n.check,et,ct,it-ct):i(n.check,et,ct,it-ct)),ct=at,(n.flags?ot:rt(ot))!==n.check){t.msg=\\\"incorrect data check\\\",n.mode=K;break}ot=0,ht=0}n.mode=X;case X:if(n.wrap&&n.flags){for(;ht<32;){if(0===st)break t;st--,ot+=tt[nt++]<<ht,ht+=8}if(ot!==(4294967295&n.total)){t.msg=\\\"incorrect length check\\\",n.mode=K;break}ot=0,ht=0}n.mode=Y;case Y:kt=p;break t;case K:kt=g;break t;case J:return x;case $:default:return v}return t.next_out=it,t.avail_out=at,t.next_in=nt,t.avail_in=st,n.hold=ot,n.bits=ht,(n.wsize||ct!==t.avail_out&&n.mode<K&&(n.mode<Q||e!==l))&&dt(t,t.output,t.next_out,ct-t.avail_out)?(n.mode=J,x):(ut-=t.avail_in,ct-=t.avail_out,t.total_in+=ut,t.total_out+=ct,n.total+=ct,n.wrap&&ct&&(t.adler=n.check=n.flags?s(n.check,et,ct,t.next_out-ct):i(n.check,et,ct,t.next_out-ct)),t.data_type=n.bits+(n.last?64:0)+(n.mode===R?128:0)+(n.mode===N||n.mode===U?256:0),(0===ut&&0===ct||e===l)&&kt===m&&(kt=_),kt)},e.inflateEnd=function(t){if(!t||!t.state)return v;var e=t.state;return e.window&&(e.window=null),t.state=null,m},e.inflateGetHeader=function(t,e){var n;return t&&t.state?0==(2&(n=t.state).wrap)?v:(n.head=e,e.done=!1,m):v},e.inflateSetDictionary=function(t,e){var n,r=e.length;return t&&t.state?0!==(n=t.state).wrap&&n.mode!==O?v:n.mode===O&&i(1,e,r,0)!==n.check?g:dt(t,e,r,r)?(n.mode=J,x):(n.havedict=1,m):v},e.inflateInfo=\\\"pako inflate (from Nodeca project)\\\"},function(t,e,n){\\\"use strict\\\";t.exports=function(t,e){var n,r,i,s,a,o,h,u,c,l,f,d,m,p,y,v,g,x,_,b,w,k,z,E,S;n=t.state,r=t.next_in,E=t.input,i=r+(t.avail_in-5),s=t.next_out,S=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=n.dmax,u=n.wsize,c=n.whave,l=n.wnext,f=n.window,d=n.hold,m=n.bits,p=n.lencode,y=n.distcode,v=(1<<n.lenbits)-1,g=(1<<n.distbits)-1;t:do{m<15&&(d+=E[r++]<<m,m+=8,d+=E[r++]<<m,m+=8),x=p[d&v];e:for(;;){if(d>>>=_=x>>>24,m-=_,0===(_=x>>>16&255))S[s++]=65535&x;else{if(!(16&_)){if(0==(64&_)){x=p[(65535&x)+(d&(1<<_)-1)];continue e}if(32&_){n.mode=12;break t}t.msg=\\\"invalid literal/length code\\\",n.mode=30;break t}b=65535&x,(_&=15)&&(m<_&&(d+=E[r++]<<m,m+=8),b+=d&(1<<_)-1,d>>>=_,m-=_),m<15&&(d+=E[r++]<<m,m+=8,d+=E[r++]<<m,m+=8),x=y[d&g];n:for(;;){if(d>>>=_=x>>>24,m-=_,!(16&(_=x>>>16&255))){if(0==(64&_)){x=y[(65535&x)+(d&(1<<_)-1)];continue n}t.msg=\\\"invalid distance code\\\",n.mode=30;break t}if(w=65535&x,m<(_&=15)&&(d+=E[r++]<<m,(m+=8)<_&&(d+=E[r++]<<m,m+=8)),(w+=d&(1<<_)-1)>h){t.msg=\\\"invalid distance too far back\\\",n.mode=30;break t}if(d>>>=_,m-=_,w>(_=s-a)){if((_=w-_)>c&&n.sane){t.msg=\\\"invalid distance too far back\\\",n.mode=30;break t}if(k=0,z=f,0===l){if(k+=u-_,_<b){b-=_;do{S[s++]=f[k++]}while(--_);k=s-w,z=S}}else if(l<_){if(k+=u+l-_,(_-=l)<b){b-=_;do{S[s++]=f[k++]}while(--_);if(k=0,l<b){b-=_=l;do{S[s++]=f[k++]}while(--_);k=s-w,z=S}}}else if(k+=l-_,_<b){b-=_;do{S[s++]=f[k++]}while(--_);k=s-w,z=S}for(;b>2;)S[s++]=z[k++],S[s++]=z[k++],S[s++]=z[k++],b-=3;b&&(S[s++]=z[k++],b>1&&(S[s++]=z[k++]))}else{k=s-w;do{S[s++]=S[k++],S[s++]=S[k++],S[s++]=S[k++],b-=3}while(b>2);b&&(S[s++]=S[k++],b>1&&(S[s++]=S[k++]))}break}}break}}while(r<i&&s<o);r-=b=m>>3,d&=(1<<(m-=b<<3))-1,t.next_in=r,t.next_out=s,t.avail_in=r<i?i-r+5:5-(r-i),t.avail_out=s<o?o-s+257:257-(s-o),n.hold=d,n.bits=m}},function(t,e,n){\\\"use strict\\\";var r=n(10),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],s=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],a=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],o=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(t,e,n,h,u,c,l,f){var d,m,p,y,v,g,x,_,b,w=f.bits,k=0,z=0,E=0,S=0,M=0,A=0,I=0,T=0,C=0,O=0,R=null,P=0,F=new r.Buf16(16),U=new r.Buf16(16),V=null,L=0;for(k=0;k<=15;k++)F[k]=0;for(z=0;z<h;z++)F[e[n+z]]++;for(M=w,S=15;S>=1&&0===F[S];S--);if(M>S&&(M=S),0===S)return u[c++]=20971520,u[c++]=20971520,f.bits=1,0;for(E=1;E<S&&0===F[E];E++);for(M<E&&(M=E),T=1,k=1;k<=15;k++)if(T<<=1,(T-=F[k])<0)return-1;if(T>0&&(0===t||1!==S))return-1;for(U[1]=0,k=1;k<15;k++)U[k+1]=U[k]+F[k];for(z=0;z<h;z++)0!==e[n+z]&&(l[U[e[n+z]]++]=z);if(0===t?(R=V=l,g=19):1===t?(R=i,P-=257,V=s,L-=257,g=256):(R=a,V=o,g=-1),O=0,z=0,k=E,v=c,A=M,I=0,p=-1,y=(C=1<<M)-1,1===t&&C>852||2===t&&C>592)return 1;for(;;){x=k-I,l[z]<g?(_=0,b=l[z]):l[z]>g?(_=V[L+l[z]],b=R[P+l[z]]):(_=96,b=0),d=1<<k-I,E=m=1<<A;do{u[v+(O>>I)+(m-=d)]=x<<24|_<<16|b|0}while(0!==m);for(d=1<<k-1;O&d;)d>>=1;if(0!==d?(O&=d-1,O+=d):O=0,z++,0==--F[k]){if(k===S)break;k=e[n+l[z]]}if(k>M&&(O&y)!==p){for(0===I&&(I=M),v+=E,T=1<<(A=k-I);A+I<S&&!((T-=F[A+I])<=0);)A++,T<<=1;if(C+=1<<A,1===t&&C>852||2===t&&C>592)return 1;u[p=O&y]=M<<24|A<<16|v-c|0}}return 0!==O&&(u[v+O]=k-I<<24|64<<16|0),f.bits=M,0}},function(t,e,n){\\\"use strict\\\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\\\"\\\",this.comment=\\\"\\\",this.hcrc=0,this.done=!1}},function(t,e){function n(){this.pending=0,this.max=1/0,this.listeners=[],this.waiting=[],this.error=null}function r(t){t.pending+=1;var e=!1;return function(r){if(e)throw new Error(\\\"callback called twice\\\");if(e=!0,t.error=t.error||r,t.pending-=1,t.waiting.length>0&&t.pending<t.max)i(t,t.waiting.shift());else if(0===t.pending){var s=t.listeners;t.listeners=[],s.forEach(n)}};function n(e){e(t.error)}}function i(t,e){e(r(t))}t.exports=n,n.prototype.go=function(t){this.pending<this.max?i(this,t):this.waiting.push(t)},n.prototype.wait=function(t){0===this.pending?t(this.error):this.listeners.push(t)},n.prototype.hold=function(){return r(this)}},function(t,e){\\n/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function(){\\\"use strict\\\";function t(t){throw t}var e,n=void 0,r=this;function i(t,e){var i,s=t.split(\\\".\\\"),a=r;!(s[0]in a)&&a.execScript&&a.execScript(\\\"var \\\"+s[0]);for(;s.length&&(i=s.shift());)s.length||e===n?a=a[i]?a[i]:a[i]={}:a[i]=e}var s,a=\\\"undefined\\\"!=typeof Uint8Array&&\\\"undefined\\\"!=typeof Uint16Array&&\\\"undefined\\\"!=typeof Uint32Array;for(new(a?Uint8Array:Array)(256),s=0;256>s;++s)for(var o=(o=s)>>>1;o;o>>>=1)0;var h=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],u=a?new Uint32Array(h):h;function c(t){var e,n,r,i,s,o,h,u,c,l=t.length,f=0,d=Number.POSITIVE_INFINITY;for(u=0;u<l;++u)t[u]>f&&(f=t[u]),t[u]<d&&(d=t[u]);for(e=1<<f,n=new(a?Uint32Array:Array)(e),r=1,i=0,s=2;r<=f;){for(u=0;u<l;++u)if(t[u]===r){for(o=0,h=i,c=0;c<r;++c)o=o<<1|1&h,h>>=1;for(c=o;c<e;c+=s)n[c]=r<<16|u;++i}++r,i<<=1,s<<=1}return[n,f,d]}var l,f=[];for(l=0;288>l;l++)switch(!0){case 143>=l:f.push([l+48,8]);break;case 255>=l:f.push([l-144+400,9]);break;case 279>=l:f.push([l-256+0,7]);break;case 287>=l:f.push([l-280+192,8]);break;default:t(\\\"invalid literal: \\\"+l)}var d=function(){function e(e){switch(!0){case 3===e:return[257,e-3,0];case 4===e:return[258,e-4,0];case 5===e:return[259,e-5,0];case 6===e:return[260,e-6,0];case 7===e:return[261,e-7,0];case 8===e:return[262,e-8,0];case 9===e:return[263,e-9,0];case 10===e:return[264,e-10,0];case 12>=e:return[265,e-11,1];case 14>=e:return[266,e-13,1];case 16>=e:return[267,e-15,1];case 18>=e:return[268,e-17,1];case 22>=e:return[269,e-19,2];case 26>=e:return[270,e-23,2];case 30>=e:return[271,e-27,2];case 34>=e:return[272,e-31,2];case 42>=e:return[273,e-35,3];case 50>=e:return[274,e-43,3];case 58>=e:return[275,e-51,3];case 66>=e:return[276,e-59,3];case 82>=e:return[277,e-67,4];case 98>=e:return[278,e-83,4];case 114>=e:return[279,e-99,4];case 130>=e:return[280,e-115,4];case 162>=e:return[281,e-131,5];case 194>=e:return[282,e-163,5];case 226>=e:return[283,e-195,5];case 257>=e:return[284,e-227,5];case 258===e:return[285,e-258,0];default:t(\\\"invalid length: \\\"+e)}}var n,r,i=[];for(n=3;258>=n;n++)r=e(n),i[n]=r[2]<<24|r[1]<<16|r[0];return i}();function m(e,n){switch(this.l=[],this.m=32768,this.d=this.f=this.c=this.t=0,this.input=a?new Uint8Array(e):e,this.u=!1,this.n=y,this.K=!1,!n&&(n={})||(n.index&&(this.c=n.index),n.bufferSize&&(this.m=n.bufferSize),n.bufferType&&(this.n=n.bufferType),n.resize&&(this.K=n.resize)),this.n){case p:this.a=32768,this.b=new(a?Uint8Array:Array)(32768+this.m+258);break;case y:this.a=0,this.b=new(a?Uint8Array:Array)(this.m),this.e=this.W,this.B=this.R,this.q=this.V;break;default:t(Error(\\\"invalid inflate mode\\\"))}}a&&new Uint32Array(d);var p=0,y=1;m.prototype.r=function(){for(;!this.u;){var e=F(this,3);switch(1&e&&(this.u=!0),e>>>=1){case 0:var r=this.input,i=this.c,s=this.b,o=this.a,h=n,u=n,c=n,l=s.length,f=n;switch(this.d=this.f=0,(h=r[i++])===n&&t(Error(\\\"invalid uncompressed block header: LEN (first byte)\\\")),u=h,(h=r[i++])===n&&t(Error(\\\"invalid uncompressed block header: LEN (second byte)\\\")),u|=h<<8,(h=r[i++])===n&&t(Error(\\\"invalid uncompressed block header: NLEN (first byte)\\\")),c=h,(h=r[i++])===n&&t(Error(\\\"invalid uncompressed block header: NLEN (second byte)\\\")),u===~(c|=h<<8)&&t(Error(\\\"invalid uncompressed block header: length verify\\\")),i+u>r.length&&t(Error(\\\"input buffer is broken\\\")),this.n){case p:for(;o+u>s.length;){if(u-=f=l-o,a)s.set(r.subarray(i,i+f),o),o+=f,i+=f;else for(;f--;)s[o++]=r[i++];this.a=o,s=this.e(),o=this.a}break;case y:for(;o+u>s.length;)s=this.e({H:2});break;default:t(Error(\\\"invalid inflate mode\\\"))}if(a)s.set(r.subarray(i,i+u),o),o+=u,i+=u;else for(;u--;)s[o++]=r[i++];this.c=i,this.a=o,this.b=s;break;case 1:this.q(O,P);break;case 2:V(this);break;default:t(Error(\\\"unknown BTYPE: \\\"+e))}}return this.B()};var v,g,x=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],_=a?new Uint16Array(x):x,b=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],w=a?new Uint16Array(b):b,k=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],z=a?new Uint8Array(k):k,E=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],S=a?new Uint16Array(E):E,M=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],A=a?new Uint8Array(M):M,I=new(a?Uint8Array:Array)(288);for(v=0,g=I.length;v<g;++v)I[v]=143>=v?8:255>=v?9:279>=v?7:8;var T,C,O=c(I),R=new(a?Uint8Array:Array)(30);for(T=0,C=R.length;T<C;++T)R[T]=5;var P=c(R);function F(e,r){for(var i,s=e.f,a=e.d,o=e.input,h=e.c;a<r;)(i=o[h++])===n&&t(Error(\\\"input buffer is broken\\\")),s|=i<<a,a+=8;return i=s&(1<<r)-1,e.f=s>>>r,e.d=a-r,e.c=h,i}function U(t,e){for(var r,i,s,a=t.f,o=t.d,h=t.input,u=t.c,c=e[0],l=e[1];o<l&&(r=h[u++])!==n;)a|=r<<o,o+=8;return s=(i=c[a&(1<<l)-1])>>>16,t.f=a>>s,t.d=o-s,t.c=u,65535&i}function V(t){function e(t,e,n){var r,i,s,a;for(a=0;a<t;)switch(r=U(this,e),r){case 16:for(s=3+F(this,2);s--;)n[a++]=i;break;case 17:for(s=3+F(this,3);s--;)n[a++]=0;i=0;break;case 18:for(s=11+F(this,7);s--;)n[a++]=0;i=0;break;default:i=n[a++]=r}return n}var n,r,i,s,o=F(t,5)+257,h=F(t,5)+1,u=F(t,4)+4,l=new(a?Uint8Array:Array)(_.length);for(s=0;s<u;++s)l[_[s]]=F(t,3);n=c(l),r=new(a?Uint8Array:Array)(o),i=new(a?Uint8Array:Array)(h),t.q(c(e.call(t,o,n,r)),c(e.call(t,h,n,i)))}function L(t){t=t||{},this.files=[],this.v=t.comment}function B(t,e){e=e||{},this.input=a&&t instanceof Array?new Uint8Array(t):t,this.c=0,this.ba=e.verify||!1,this.j=e.password}(e=m.prototype).q=function(t,e){var n=this.b,r=this.a;this.C=t;for(var i,s,a,o,h=n.length-258;256!==(i=U(this,t));)if(256>i)r>=h&&(this.a=r,n=this.e(),r=this.a),n[r++]=i;else for(o=w[s=i-257],0<z[s]&&(o+=F(this,z[s])),i=U(this,e),a=S[i],0<A[i]&&(a+=F(this,A[i])),r>=h&&(this.a=r,n=this.e(),r=this.a);o--;)n[r]=n[r++-a];for(;8<=this.d;)this.d-=8,this.c--;this.a=r},e.V=function(t,e){var n=this.b,r=this.a;this.C=t;for(var i,s,a,o,h=n.length;256!==(i=U(this,t));)if(256>i)r>=h&&(h=(n=this.e()).length),n[r++]=i;else for(o=w[s=i-257],0<z[s]&&(o+=F(this,z[s])),i=U(this,e),a=S[i],0<A[i]&&(a+=F(this,A[i])),r+o>h&&(h=(n=this.e()).length);o--;)n[r]=n[r++-a];for(;8<=this.d;)this.d-=8,this.c--;this.a=r},e.e=function(){var t,e,n=new(a?Uint8Array:Array)(this.a-32768),r=this.a-32768,i=this.b;if(a)n.set(i.subarray(32768,n.length));else for(t=0,e=n.length;t<e;++t)n[t]=i[t+32768];if(this.l.push(n),this.t+=n.length,a)i.set(i.subarray(r,r+32768));else for(t=0;32768>t;++t)i[t]=i[r+t];return this.a=32768,i},e.W=function(t){var e,n,r,i=this.input.length/this.c+1|0,s=this.input,o=this.b;return t&&(\\\"number\\\"==typeof t.H&&(i=t.H),\\\"number\\\"==typeof t.P&&(i+=t.P)),2>i?n=(r=(s.length-this.c)/this.C[2]/2*258|0)<o.length?o.length+r:o.length<<1:n=o.length*i,a?(e=new Uint8Array(n)).set(o):e=o,this.b=e},e.B=function(){var t,e,n,r,i,s=0,o=this.b,h=this.l,u=new(a?Uint8Array:Array)(this.t+(this.a-32768));if(0===h.length)return a?this.b.subarray(32768,this.a):this.b.slice(32768,this.a);for(e=0,n=h.length;e<n;++e)for(r=0,i=(t=h[e]).length;r<i;++r)u[s++]=t[r];for(e=32768,n=this.a;e<n;++e)u[s++]=o[e];return this.l=[],this.buffer=u},e.R=function(){var t,e=this.a;return a?this.K?(t=new Uint8Array(e)).set(this.b.subarray(0,e)):t=this.b.subarray(0,e):(this.b.length>e&&(this.b.length=e),t=this.b),this.buffer=t},L.prototype.L=function(t){this.j=t},L.prototype.s=function(t){var e=65535&t[2]|2;return e*(1^e)>>8&255},L.prototype.k=function(t,e){t[0]=(u[255&(t[0]^e)]^t[0]>>>8)>>>0,t[1]=1+(6681*(20173*(t[1]+(255&t[0]))>>>0)>>>0)>>>0,t[2]=(u[255&(t[2]^t[1]>>>24)]^t[2]>>>8)>>>0},L.prototype.T=function(t){var e,n,r=[305419896,591751049,878082192];for(a&&(r=new Uint32Array(r)),e=0,n=t.length;e<n;++e)this.k(r,255&t[e]);return r};var D=0,N=8,j=[80,75,1,2],H=[80,75,3,4],q=[80,75,5,6];function Z(t,e){this.input=t,this.offset=e}function G(t,e){this.input=t,this.offset=e}Z.prototype.parse=function(){var e=this.input,n=this.offset;(e[n++]!==j[0]||e[n++]!==j[1]||e[n++]!==j[2]||e[n++]!==j[3])&&t(Error(\\\"invalid file header signature\\\")),this.version=e[n++],this.ia=e[n++],this.Z=e[n++]|e[n++]<<8,this.I=e[n++]|e[n++]<<8,this.A=e[n++]|e[n++]<<8,this.time=e[n++]|e[n++]<<8,this.U=e[n++]|e[n++]<<8,this.p=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.z=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.J=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.h=e[n++]|e[n++]<<8,this.g=e[n++]|e[n++]<<8,this.F=e[n++]|e[n++]<<8,this.ea=e[n++]|e[n++]<<8,this.ga=e[n++]|e[n++]<<8,this.fa=e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24,this.$=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.filename=String.fromCharCode.apply(null,a?e.subarray(n,n+=this.h):e.slice(n,n+=this.h)),this.X=a?e.subarray(n,n+=this.g):e.slice(n,n+=this.g),this.v=a?e.subarray(n,n+this.F):e.slice(n,n+this.F),this.length=n-this.offset};var W=1;function Q(e){var r,i,s,o,h=[],u={};if(!e.i){if(e.o===n){var c,l=e.input;if(!e.D)t:{var f,d=e.input;for(f=d.length-12;0<f;--f)if(d[f]===q[0]&&d[f+1]===q[1]&&d[f+2]===q[2]&&d[f+3]===q[3]){e.D=f;break t}t(Error(\\\"End of Central Directory Record not found\\\"))}c=e.D,(l[c++]!==q[0]||l[c++]!==q[1]||l[c++]!==q[2]||l[c++]!==q[3])&&t(Error(\\\"invalid signature\\\")),e.ha=l[c++]|l[c++]<<8,e.ja=l[c++]|l[c++]<<8,e.ka=l[c++]|l[c++]<<8,e.aa=l[c++]|l[c++]<<8,e.Q=(l[c++]|l[c++]<<8|l[c++]<<16|l[c++]<<24)>>>0,e.o=(l[c++]|l[c++]<<8|l[c++]<<16|l[c++]<<24)>>>0,e.w=l[c++]|l[c++]<<8,e.v=a?l.subarray(c,c+e.w):l.slice(c,c+e.w)}for(r=e.o,s=0,o=e.aa;s<o;++s)(i=new Z(e.input,r)).parse(),r+=i.length,h[s]=i,u[i.filename]=s;e.Q<r-e.o&&t(Error(\\\"invalid file header size\\\")),e.i=h,e.G=u}}function X(t,e,n){return n^=t.s(e),t.k(e,n),n}G.prototype.parse=function(){var e=this.input,n=this.offset;(e[n++]!==H[0]||e[n++]!==H[1]||e[n++]!==H[2]||e[n++]!==H[3])&&t(Error(\\\"invalid local file header signature\\\")),this.Z=e[n++]|e[n++]<<8,this.I=e[n++]|e[n++]<<8,this.A=e[n++]|e[n++]<<8,this.time=e[n++]|e[n++]<<8,this.U=e[n++]|e[n++]<<8,this.p=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.z=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.J=(e[n++]|e[n++]<<8|e[n++]<<16|e[n++]<<24)>>>0,this.h=e[n++]|e[n++]<<8,this.g=e[n++]|e[n++]<<8,this.filename=String.fromCharCode.apply(null,a?e.subarray(n,n+=this.h):e.slice(n,n+=this.h)),this.X=a?e.subarray(n,n+=this.g):e.slice(n,n+=this.g),this.length=n-this.offset},(e=B.prototype).Y=function(){var t,e,n,r=[];for(this.i||Q(this),t=0,e=(n=this.i).length;t<e;++t)r[t]=n[t].filename;return r},e.r=function(e,r){var i,s;this.G||Q(this),(i=this.G[e])===n&&t(Error(e+\\\" not found\\\")),s=r||{};var o,h,c,l,f,d,p,y,v=this.input,g=this.i;if(g||Q(this),g[i]===n&&t(Error(\\\"wrong index\\\")),h=g[i].$,(o=new G(this.input,h)).parse(),h+=o.length,c=o.z,0!=(o.I&W)){for(!s.password&&!this.j&&t(Error(\\\"please set password\\\")),d=this.S(s.password||this.j),p=h,y=h+12;p<y;++p)X(this,d,v[p]);for(p=h+=12,y=h+(c-=12);p<y;++p)v[p]=X(this,d,v[p])}switch(o.A){case D:l=a?this.input.subarray(h,h+c):this.input.slice(h,h+c);break;case N:l=new m(this.input,{index:h,bufferSize:o.J}).r();break;default:t(Error(\\\"unknown compression type\\\"))}if(this.ba){var x,_=n,b=\\\"number\\\"==typeof _?_:_=0,w=l.length;for(x=-1,b=7&w;b--;++_)x=x>>>8^u[255&(x^l[_])];for(b=w>>3;b--;_+=8)x=(x=(x=(x=(x=(x=(x=(x=x>>>8^u[255&(x^l[_])])>>>8^u[255&(x^l[_+1])])>>>8^u[255&(x^l[_+2])])>>>8^u[255&(x^l[_+3])])>>>8^u[255&(x^l[_+4])])>>>8^u[255&(x^l[_+5])])>>>8^u[255&(x^l[_+6])])>>>8^u[255&(x^l[_+7])];f=(4294967295^x)>>>0,o.p!==f&&t(Error(\\\"wrong crc: file=0x\\\"+o.p.toString(16)+\\\", data=0x\\\"+f.toString(16)))}return l},e.L=function(t){this.j=t},e.k=L.prototype.k,e.S=L.prototype.T,e.s=L.prototype.s,i(\\\"Zlib.Unzip\\\",B),i(\\\"Zlib.Unzip.prototype.decompress\\\",B.prototype.r),i(\\\"Zlib.Unzip.prototype.getFilenames\\\",B.prototype.Y),i(\\\"Zlib.Unzip.prototype.setPassword\\\",B.prototype.L)}).call(this)},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\\\"loaded\\\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\\\"id\\\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){\\\"use strict\\\";n.r(e);var r=n(11),i=n(0),s=n(8),a=n(1),o=n(4);function h(t){return(h=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t})(t)}for(var u=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\",c=new Uint8Array(256),l=0;l<u.length;l++)c[u.charCodeAt(l)]=l;var f=function(t){var e,n,r,i,s,a=.75*t.length,o=t.length,h=0;\\\"=\\\"===t[t.length-1]&&(a--,\\\"=\\\"===t[t.length-2]&&a--);var u=new ArrayBuffer(a),l=new Uint8Array(u);for(e=0;e<o;e+=4)n=c[t.charCodeAt(e)],r=c[t.charCodeAt(e+1)],i=c[t.charCodeAt(e+2)],s=c[t.charCodeAt(e+3)],l[h++]=n<<2|r>>4,l[h++]=(15&r)<<4|i>>2,l[h++]=(3&i)<<6|63&s;return u};function d(t){if(this.loadedBuffers={},t instanceof Uint8Array){var e=new Int32Array(t.buffer,0,20);1179937895!==e[0]&&debug(\\\"glb header \\\"+e[0]);var n=e[3],r=new Uint8Array(t.buffer,20,n),i=t.buffer.slice(20+n);t=function(t){var e;if(void 0!==(\\\"undefined\\\"==typeof TextDecoder?\\\"undefined\\\":h(TextDecoder)))e=new TextDecoder(\\\"utf-8\\\").decode(t);else{for(var n=\\\"\\\",r=0;r<t.length;r++)n+=String.fromCharCode(t[r]);e=decodeURIComponent(escape(n))}return JSON.parse(e)}(r),this.loadedBuffers.binary_glTF=i}this.gltf=t,this.manifest=null,this.metadata=this.gltf.asset||{},this.metadata.gltf=this.metadata.version||1,this.materials=this.gltfMaterials={name:\\\"GLTF Materials\\\",version:\\\"1.0\\\",scene:{SceneUnit:\\\"m\\\"},materials:{}},this.materialToIndex={},this.materialList=[],this.geomToIndex={},this.geomList=[],this.geomsLoaded=0,this.fragments={length:0,numLoaded:0,boxes:null,transforms:null,materials:null,fragId2dbId:null,entityIndexes:null,mesh2frag:{}},this.geompacks=[],this.instances=[],this.cameras=[],this.lights=[],this.bbox=null,this.animations=null,this.pendingRequests=0,this.globalOffset={x:0,y:0,z:0},this.bbox=new s.a,this.nodeToDbId={},this.nextDbId=1,this.nextFragId=0}d.prototype.loadManifest=function(t){this.manifest={name:\\\"LMV Manifest\\\",toolkitversion:\\\"LMVTK 2.6.4\\\",manifestversion:2,adskID:{sourceSystem:\\\"\\\",type:\\\"\\\",id:\\\"\\\",version:\\\"\\\"},assets:[],typesets:[]};var e=this.gltf.buffers;for(var n in e)if(\\\"binary_glTF\\\"!==n){var r=e[n];if(0!==r.uri.indexOf(\\\"data:application/octet-stream;base64,\\\")){var i={id:n,URI:r.uri,uri:r.uri,usize:r.byteLength,type:r.type};this.manifest.assets.push(i)}else this.loadedBuffers[n]=f(r.uri.slice(\\\"data:application/octet-stream;base64,\\\".length)),r.uri=\\\"embed://\\\"+n}var s=this.gltf.images;for(var a in s){var o=s[a],h={id:a,URI:o.uri,uri:o.uri,name:o.name,type:\\\"image\\\"};this.manifest.assets.push(h)}},d.prototype.loadRemainingSvf=function(t){t.manifest&&(this.manifest=t.manifest),this.manifest.assetMap={};for(var e=0;e<this.manifest.assets.length;e++){var n=this.manifest.assets[e];this.manifest.assetMap[n.id]=n}for(var r in this.processMeshesList(),this.processMaterialsList(),this.deriveInstanceTree(),t.loadDoneCB(\\\"svf\\\"),this.loadedBuffers)this.loadGeometry(t,r);this.loadBuffers(t)},d.prototype.loadBuffers=function(t){for(var e=this,n=[],r=this.manifest.assets,i=0;i<r.length;i++)\\\"image\\\"!==r[i].type&&n.push(r[i]);var s=-1;!function r(i){if(s<n.length-1){var a=n[s+1],h={responseType:a.type||\\\"arraybuffer\\\"};o.a.getItem(t,t.basePath+a.URI,r,t.onFailureCallback,h)}if(i){var u=n[s];e.loadedBuffers[u.id]=i.buffer,e.loadGeometry(t,u.id)}s++}(null)};var m={5120:1,5121:1,5122:2,5123:2,5124:4,5125:4,5126:4},p={SCALAR:1,VEC2:2,VEC3:3,VEC4:4},y=new Float32Array(1),v=new Uint8Array(y.buffer);function g(t,e){return v[0]=t[e],v[1]=t[e+1],v[2]=t[e+2],v[3]=t[e+3],y[0]}d.prototype.loadGeometry=function(t,e){var n=(b=this.gltf.buffers[e]).meshes,i=this;function s(t){var e=i.gltf.accessors[t].bufferView;if(e){var n=i.gltf.bufferViews[e].buffer;if(n)return!!i.loadedBuffers[n]}return!1}for(var a=0;a<n.length;a++)for(var o=(l=this.gltf.meshes[n[a]]).primitives,h=void 0===t.packNormals||t.packNormals,u=0;u<o.length;u++){var c=o[u],l={vblayout:{},vbstride:0,packedNormals:h},f=!0;if(c.indices&&(f=f&&s(c.indices))){var d=i.gltf.accessors[c.indices];l.triangleCount=d.count/3;var y=d.byteStride,v=2,x=i.gltf.bufferViews[d.bufferView],_=d.byteOffset+x.byteOffset,b=i.loadedBuffers[x.buffer];5123===d.componentType?(N=l.indices=new Uint16Array(d.count),v=2,D=new Uint16Array(b)):5125===d.componentType?(N=l.indices=new Uint32Array(d.count),v=4,D=new Uint32Array(b)):debug(\\\"Unimplemented component type for index buffer\\\");var w=_/v;0===y?y=1:y/=v;for(var k=0;k<d.count;k++)N[k]=D[w+k*y]}var z=0;for(var E in c.attributes){f=f&&s(c.attributes[E]);var S=i.gltf.accessors[c.attributes[E]];if(f)if(\\\"NORMAL\\\"===E)l.vbstride+=h?1:3,l.vblayout.normal={offset:z,itemSize:h?2:3,bytesPerItem:h?2:4,normalize:h},z+=h?1:3;else{var M=E;if(\\\"POSITION\\\"===E)M=\\\"position\\\",l.vertexCount=S.count;else if(0===E.indexOf(\\\"TEXCOORD\\\")){M=\\\"uv\\\"+(parseInt(E.split(\\\"_\\\")[1])||\\\"\\\")}else 0===E.indexOf(\\\"COLOR\\\")&&(M=\\\"color\\\");var A=m[S.componentType]*p[S.type];l.vbstride+=A/4,l.vblayout[M]={offset:z,itemSize:p[S.type],bytesPerItem:m[S.componentType],normalize:!1},z+=A/4}}if(f){var I,T=l.vb=new Float32Array(l.vertexCount*l.vbstride);for(var E in h&&(I=new Uint16Array(l.vb.buffer)),c.attributes){S=i.gltf.accessors[c.attributes[E]],x=i.gltf.bufferViews[S.bufferView],_=S.byteOffset+x.byteOffset;var C=new Uint8Array(i.loadedBuffers[x.buffer]);if(\\\"NORMAL\\\"===E){var O=l.vblayout.normal;S.count!=l.vertexCount&&debug(\\\"Normals count does not equal vertex count\\\");y=0!==S.byteStride?S.byteStride:B*p[S.type];var R=_;for(z=O.offset,k=0;k<l.vertexCount;k++,z+=l.vbstride){var P=g(C,R),F=g(C,R+4),U=g(C,R+8);if(I){var V=.5*(Math.atan2(F,P)/Math.PI+1),L=.5*(U+1);I[2*z]=65535*V|0,I[2*z+1]=65535*L|0}else T[z]=P,T[z+1]=F,T[z+2]=U;R+=y}}else{M=E;if(\\\"POSITION\\\"===E)M=\\\"position\\\",l.vertexCount=S.count;else if(0===E.indexOf(\\\"TEXCOORD\\\")){M=\\\"uv\\\"+(parseInt(E.split(\\\"_\\\")[1])||\\\"\\\")}else 0===E.indexOf(\\\"COLOR\\\")&&(M=\\\"color\\\");O=l.vblayout[M];var B=m[S.componentType],D=(y=0!==S.byteStride?S.byteStride:B*p[S.type],new Uint8Array(C)),N=new Uint8Array(T.buffer,4*O.offset);for(R=_,z=0,k=0;k<l.vertexCount;k++){for(var j=0;j<O.itemSize*B;j++)N[z+j]=D[R+j];z+=l.vbstride*B,R+=y}}var H=i.gltf.buffers[x.buffer];H.refCount--,0===H.refCount&&delete i.loadedBuffers[x.buffer]}i.geomsLoaded++,r.a.computeBounds3D(l),t.loadDoneCB(\\\"mesh\\\",{mesh:l,packId:n[a],meshIndex:u,progress:i.geomsLoaded/i.geomList.length})}}b.meshes=null},d.prototype.processMaterialsList=function(){var t=this.gltf.materials;for(var e in t){var n=this.materialList.length;this.materialToIndex[e]=n,this.gltfMaterials.materials[n]=t[e],this.materialList.push(e)}},d.prototype.processMeshesList=function(){var t=this.gltf.meshes,e=this;function n(t){var n=e.gltf.accessors[t].bufferView;if(n){var i=e.gltf.bufferViews[n].buffer;if(i){var a=e.gltf.buffers[i];a.refCount?a.refCount++:a.refCount=1,a.meshes||(a.meshes=[]),s||(a.meshes.push(r),s=!0)}}}for(var r in t)for(var i=t[r],s=!1,a=0;a<i.primitives.length;a++){var o=r+\\\":\\\"+a;this.geomToIndex[o]=this.geomList.length,this.geomList.push(o);var h=i.primitives[a];for(var u in h.indices&&n(h.indices),h.attributes)n(h.attributes[u])}this.numGeoms=this.geomList.length},d.prototype.countFragments=function(){var t=this.gltf.scene,e=this.gltf.scenes[t],n=this.gltf.nodes,r=0,i=this;!function t(e){var s=e.meshes;if(e.meshes)for(var a=0;a<s.length;a++)for(var o=i.gltf.meshes[s[a]].primitives,h=0;h<o.length;h++)r++;var u=e.children||e.nodes;if(u)for(var c=0;c<u.length;c++){t(n[u[c]])}}(e),this.fragments.length=r,this.fragments.boxes=new Float32Array(6*r),this.fragments.transforms=new Float32Array(12*r),this.fragments.materials=new Int32Array(r),this.fragments.entityIndexes=new Int32Array(r),this.fragments.fragId2dbId=new Int32Array(r),this.fragments.packIds=new Int32Array(r)},d.prototype.deriveInstanceTree=function(){this.countFragments();var t=this.gltf.scene,e=this.gltf.scenes[t],n=this.gltf.nodes;this.instanceTree={name:t,dbId:this.nextDbId++,children:[]},this.nodeToDbId[t]=this.instanceTree.dbId;var r=[],o=1,h=this,u=this.fragments,c=new s.a;var l=function t(e,l,f,d){d>o&&(o=d);var m=f.clone();if(l.matrix){(g=new a.a(!0)).fromArray(l.matrix),m.multiply(g)}else{var p=l.translation,y=l.rotation,v=l.scale;if(void 0!==p||void 0!==y||void 0!==v){var g,x=function(t,e,n,r){this.x=t||0,this.y=e||0,this.z=n||0,this.w=r||0},_=p?new i.a(p[0],p[1],p[2]):new i.a,b=y?new x(y[0],y[1],y[2],y[3]):new x,w=v?new i.a(v[0],v[1],v[2]):new i.a(1,1,1);(g=new a.a(!0)).compose(_,b,w),m.multiply(g)}}var k=new s.a,z=l.meshes;if(l.meshes){e.fragIds=[];for(var E=0;E<z.length;E++)for(var S=h.gltf.meshes[z[E]].primitives,M=0;M<S.length;M++){var A=z[E]+\\\":\\\"+M,I=h.nextFragId++;e.fragIds.push(I),u.fragId2dbId[I]=e.dbId,u.entityIndexes[I]=h.geomToIndex[A],u.mesh2frag[A]?u.mesh2frag[A].push(I):u.mesh2frag[A]=[I],u.materials[I]=h.materialToIndex[S[M].material];var T=12*I,C=m.elements,O=u.transforms;O[T]=C[0],O[T+1]=C[1],O[T+2]=C[2],O[T+3]=C[4],O[T+4]=C[5],O[T+5]=C[6],O[T+6]=C[8],O[T+7]=C[9],O[T+8]=C[10],O[T+9]=C[12],O[T+10]=C[13],O[T+11]=C[14];var R=S[M].attributes.POSITION;if(R){var P=h.gltf.accessors[R];P.min&&P.max?(c.min.x=P.min[0],c.min.y=P.min[1],c.min.z=P.min[2],c.max.x=P.max[0],c.max.y=P.max[1],c.max.z=P.max[2]):(c.min.x=-.5,c.min.y=-.5,c.min.z=-.5,c.max.x=.5,c.max.y=.5,c.max.z=.5,debug(\\\"unknown bbox for mesh, using unit box\\\",z[E])),c.applyMatrix4(m),T=6*I,(D=u.boxes)[T]=c.min.x,D[T+1]=c.min.y,D[T+2]=c.min.z,D[T+3]=c.max.x,D[T+4]=c.max.y,D[T+5]=c.max.z,k.union(c)}}}var F=l.children||l.nodes;if(F){e.children=[];for(var U=0;U<F.length;U++){var V=n[F[U]],L={name:V.name||F[U],dbId:h.nextDbId++};h.nodeToDbId[F[U]]=L.dbId,e.children.push(L);var B=t(L,V,m,d+1);k.union(B)}}var D,N=6*e.dbId;return(D=r)[N]=k.min.x,D[N+1]=k.min.y,D[N+2]=k.min.z,D[N+3]=k.max.x,D[N+4]=k.max.y,D[N+5]=k.max.z,k}(this.instanceTree,e,new a.a(!0),1);h.bbox.union(l),this.instanceBoxes=new Float32Array(r.length),this.instanceBoxes.set(r),this.objectCount=this.nextDbId,this.maxTreeDepth=o};var x=n(2);function _(t,e){var n,r;this.bytes_per_node=e?32:36,t instanceof ArrayBuffer?(n=t.byteLength/this.bytes_per_node,r=t,this.nodeCount=n):(n=0|t,r=new ArrayBuffer(this.bytes_per_node*n),this.nodeCount=0),this.nodeCapacity=n,this.nodesRaw=r,this.is_lean_node=e,this.node_stride=this.bytes_per_node/4,this.node_stride_short=this.bytes_per_node/2,this.nodesF=new Float32Array(this.nodesRaw),this.nodesI=new Int32Array(this.nodesRaw),this.nodesS=new Uint16Array(this.nodesRaw)}_.prototype.setLeftChild=function(t,e){this.nodesI[t*this.node_stride+6]=e},_.prototype.getLeftChild=function(t){return this.nodesI[t*this.node_stride+6]},_.prototype.setPrimStart=function(t,e){this.is_lean_node?this.nodesI[t*this.node_stride+6]=e:this.nodesI[t*this.node_stride+8]=e},_.prototype.getPrimStart=function(t){return this.is_lean_node?this.nodesI[t*this.node_stride+6]:this.nodesI[t*this.node_stride+8]},_.prototype.setPrimCount=function(t,e){this.nodesS[t*this.node_stride_short+14]=e},_.prototype.getPrimCount=function(t){return this.nodesS[t*this.node_stride_short+14]},_.prototype.setFlags=function(t,e,n,r){this.nodesS[t*this.node_stride_short+15]=r<<3|n<<2|3&e},_.prototype.getFlags=function(t){return this.nodesS[t*this.node_stride_short+15]},_.prototype.setBox0=function(t,e){var n=t*this.node_stride,r=this.nodesF;r[n]=e[0],r[n+1]=e[1],r[n+2]=e[2],r[n+3]=e[3],r[n+4]=e[4],r[n+5]=e[5]},_.prototype.getBoxThree=function(t,e){var n=t*this.node_stride,r=this.nodesF;e.min.x=r[n],e.min.y=r[n+1],e.min.z=r[n+2],e.max.x=r[n+3],e.max.y=r[n+4],e.max.z=r[n+5]},_.prototype.getBoxArray=function(t,e,n){var r=t*this.node_stride,i=this.nodesF;e[0+(n=n||0)]=i[r],e[1+n]=i[r+1],e[2+n]=i[r+2],e[3+n]=i[r+3],e[4+n]=i[r+4],e[5+n]=i[r+5]},_.prototype.setBoxThree=function(t,e){var n=t*this.node_stride,r=this.nodesF;r[n]=e.min.x,r[n+1]=e.min.y,r[n+2]=e.min.z,r[n+3]=e.max.x,r[n+4]=e.max.y,r[n+5]=e.max.z},_.prototype.makeEmpty=function(t){var e=t*this.node_stride,n=this.nodesI;n[e+6]=-1,n[e+7]=0,this.is_lean_node||(n[e+8]=-1)},_.prototype.realloc=function(t){if(this.nodeCount+t>this.nodeCapacity){var e=0|3*this.nodeCapacity/2;e<this.nodeCount+t&&(e=this.nodeCount+t);var n=new ArrayBuffer(e*this.bytes_per_node),r=new Int32Array(n);r.set(this.nodesI),this.nodeCapacity=e,this.nodesRaw=n,this.nodesF=new Float32Array(n),this.nodesI=r,this.nodesS=new Uint16Array(n)}},_.prototype.nextNodes=function(t){this.realloc(t);var e=this.nodeCount;this.nodeCount+=t;for(var n=0;n<t;n++)this.makeEmpty(e+n);return e},_.prototype.getRawData=function(){return this.nodesRaw.slice(0,this.nodeCount*this.bytes_per_node)};var b=3,w=1e-5,k=1e-5,z=15,E=16,S=function(){function t(t,e,n){t[0]>e[n]&&(t[0]=e[n]),t[3]<e[n]&&(t[3]=e[n]),t[1]>e[n+1]&&(t[1]=e[n+1]),t[4]<e[n+1]&&(t[4]=e[n+1]),t[2]>e[n+2]&&(t[2]=e[n+2]),t[5]<e[n+2]&&(t[5]=e[n+2])}function e(t,e,n){t[0]>e[n]&&(t[0]=e[n]),t[1]>e[n+1]&&(t[1]=e[n+1]),t[2]>e[n+2]&&(t[2]=e[n+2]),t[3]<e[n+3]&&(t[3]=e[n+3]),t[4]<e[n+4]&&(t[4]=e[n+4]),t[5]<e[n+5]&&(t[5]=e[n+5])}function n(t,e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]>e[2]&&(t[2]=e[2]),t[3]<e[3]&&(t[3]=e[3]),t[4]<e[4]&&(t[4]=e[4]),t[5]<e[5]&&(t[5]=e[5])}function r(t,e,n,r){for(var i=0;i<3;i++)t[e+i]=n[r+3+i]-n[r+i]}function i(t,e){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5]}var s=1/0;function a(t){t[0]=s,t[1]=s,t[2]=s,t[3]=-s,t[4]=-s,t[5]=-s}function o(t){var e=t[3]-t[0],n=t[4]-t[1],r=t[5]-t[2];return e<0||n<0||r<0?0:2*(e*n+n*r+r*e)}function h(){this.vb_left=new Float32Array(6),this.vb_right=new Float32Array(6),this.cb_left=new Float32Array(6),this.cb_right=new Float32Array(6),this.num_left=0,this.best_split=-1,this.best_cost=-1,this.num_bins=-1}function u(){this.box_bbox=new Float32Array(6),this.box_centroid=new Float32Array(6),this.num_prims=0}function c(){this.BL=new Float32Array(6),this.CL=new Float32Array(6),this.NL=0,this.AL=0}h.prototype.reset=function(){this.num_left=0,this.best_split=-1,this.best_cost=-1,this.num_bins=-1},u.prototype.reset=function(){this.num_prims=0,a(this.box_bbox),a(this.box_centroid)},c.prototype.reset=function(){this.NL=0,this.AL=0,a(this.BL),a(this.CL)};var l,f=[];for(l=0;l<E;l++)f.push(new u);var d=[];for(l=0;l<E-1;l++)d.push(new c);var m=new Float32Array(6),p=new Float32Array(6);function y(r,s,a,h,u,c,l){if(c[h]<r.scene_epsilon)l.best_cost=1/0;else{var y,v,g=E;for(g>a-s+1&&(g=a-s+1),y=0;y<g;y++)f[y].reset();for(y=0;y<g-1;y++)d[y].reset();for(l.num_bins=g,function(n,r,i,s,a,o,h){for(var u=n.centroids,c=n.primitives,l=n.finfo.boxes,d=n.finfo.boxStride,m=h*(1-k)/o[s],p=a[s],y=n.sort_prims,v=r;v<=i;v++){var g=0|c[v],x=0|m*(u[3*g+s]-p);x<0?x=0:x>=h&&(x=h-1),y[v]=x,f[x].num_prims++,e(f[x].box_bbox,l,g*d),t(f[x].box_centroid,u,3*g)}}(r,s,a,h,u,c,g),i(d[0].BL,f[0].box_bbox),i(d[0].CL,f[0].box_centroid),d[0].AL=o(d[0].BL),d[0].NL=f[0].num_prims,y=1;y<g-1;y++){v=f[y];var x=d[y];i(x.BL,d[y-1].BL),n(x.BL,v.box_bbox),x.AL=o(x.BL),i(x.CL,d[y-1].CL),n(x.CL,v.box_centroid),x.NL=d[y-1].NL+v.num_prims}i(m,f[y=g-1].box_bbox),i(p,f[y].box_centroid);var _=o(m),b=f[y].num_prims,w=y,z=_*b+d[y-1].AL*d[y-1].NL;for(i(l.vb_right,m),i(l.cb_right,f[y].box_centroid),i(l.vb_left,d[y-1].BL),i(l.cb_left,d[y-1].CL),l.num_left=d[y-1].NL,y-=1;y>=1;y--){v=f[y],n(m,v.box_bbox),n(p,v.box_centroid);var S=(_=o(m))*(b+=v.num_prims)+d[y-1].AL*d[y-1].NL;S<=z&&(z=S,w=y,i(l.vb_right,m),i(l.cb_right,p),i(l.vb_left,d[y-1].BL),i(l.cb_left,d[y-1].CL),l.num_left=d[y-1].NL)}l.best_split=w,l.best_cost=z}}var v=new Float32Array(3);return{bvh_subdivide:function(e,n,i,s,o,u,c,l){r(v,0,u,0);var f=e.nodes,d=c?e.frags_per_leaf_node_transparent:e.frags_per_leaf_node,m=c?e.frags_per_inner_node_transparent:e.frags_per_inner_node,p=e.max_polys_per_node,g=0;v[1]>v[0]&&(g=1),v[2]>v[g]&&(g=2),f.setBox0(n,o);var x=0,_=0,b=s-i+1;if(e.finfo.hasPolygonCounts&&e.frags_per_inner_node)for(var w=b<=e.frags_per_inner_node?s:i+e.frags_per_inner_node-1,k=i;k<=w&&(_++,!((x+=e.finfo.getPolygonCount(e.primitives[k]))>p));k++);if(b<=d&&x<p||1===b||l>z||v[g]<e.scene_epsilon)return f.setLeftChild(n,-1),f.setPrimStart(n,i),f.setPrimCount(n,s-i+1),void f.setFlags(n,0,0,c?1:0);m&&(g=function(e,n,i,s,o,h,u,c){var l=e.primitives,f=e.centroids,d=o-s+1;d>e.frags_per_inner_node&&(d=e.frags_per_inner_node),d>c&&(d=c),n.setPrimStart(i,s),n.setPrimCount(i,d),s+=d,a(h);for(var m=s;m<=o;m++)t(h,f,3*l[m]);r(u,0,h,0);var p=0;return u[1]>u[0]&&(p=1),u[2]>u[p]&&(p=2),p}(e,f,n,i,s,u,v,_),i+=f.getPrimCount(n));var E=new h;if(y(e,i,s,g,u,v,E),E.num_bins<0)f.setPrimCount(n,f.getPrimCount(n)+s-i+1);else{!function(t,e,n,r,i,s,a){var o,h,u=t.primitives,c=t.sort_prims,l=0,f=0|e,d=0|a.best_split;for(o=e;o<=n;o++){var m=0|u[o];c[o]<d?u[f++]=m:c[l++]=m}for(h=0;h<l;h++)u[f+h]=c[h]}(e,i,s,0,0,0,E);var S=f.nextNodes(2),M=.5*(E.vb_left[3+g]+E.vb_left[g]),A=.5*(E.vb_right[3+g]+E.vb_right[g]);f.setFlags(n,g,M<A?0:1,c?1:0),f.setLeftChild(n,S),e.recursion_stack.push([e,S+1,i+E.num_left,s,E.vb_right,E.cb_right,c,l+1]),e.recursion_stack.push([e,S,i,i+E.num_left-1,E.vb_left,E.cb_left,c,l+1])}},compute_boxes:function(n){var i=n.boxv_o,s=n.boxc_o,o=n.boxv_t,h=n.boxc_t;a(i),a(s),a(o),a(h);for(var u,c,l,f,d=n.centroids,m=n.finfo.boxes,p=n.finfo.boxStride,y=0,g=n.prim_count;y<g;y++){var x=n.primitives[y];l=m,f=p*x,(u=d)[c=3*x]=.5*(l[f]+l[f+3]),u[c+1]=.5*(l[f+1]+l[f+4]),u[c+2]=.5*(l[f+2]+l[f+5]),y>=n.first_transparent?(t(h,d,3*x),e(o,m,p*x)):(t(s,d,3*x),e(i,m,p*x))}r(v,0,n.boxv_o,0);var _=Math.max(v[0],v[1],v[2]);n.scene_epsilon=w*_},box_area:function(t,e){var n=t[e+3]-t[e],r=t[e+4]-t[e+1],i=t[e+5]-t[e+2];return n<0||r<0||i<0?0:2*(n*r+r*i+i*n)}}}();function M(t,e){this.boxes=t.boxes,this.polygonCounts=t.polygonCounts,this.hasPolygonCounts=!!this.polygonCounts,this.materials=t.materials,this.materialDefs=e,this.count=t.length,this.boxStride=6,this.wantSort=!0}function A(t,e,n){this.finfo=n||new M(t,e),this.prim_count=this.finfo.getCount(),this.frags_per_leaf_node=-1,this.frags_per_inner_node=-1,this.nodes=null,this.work_buf=new ArrayBuffer(4*this.prim_count),this.sort_prims=new Int32Array(this.work_buf),this.primitives=new Int32Array(this.prim_count),this.centroids=new Float32Array(b*this.prim_count),this.boxv_o=new Float32Array(6),this.boxc_o=new Float32Array(6),this.boxv_t=new Float32Array(6),this.boxc_t=new Float32Array(6),this.recursion_stack=[]}M.prototype.getCount=function(){return this.count},M.prototype.isTransparent=function(t){return!(!this.materialDefs||!this.materialDefs[this.materials[t]])&&this.materialDefs[this.materials[t]].transparent},M.prototype.getPolygonCount=function(t){return this.polygonCounts[t]},A.prototype.sortPrimitives=function(t){var e,n,r=new Float32Array(this.work_buf),i=this.primitives,s=0,a=t;for(e=0,n=this.prim_count;e<n;e++){i[e]=e;var o=this.finfo.isTransparent(e);o&&s++,a?(r[e]=S.box_area(this.finfo.boxes,this.finfo.boxStride*e),o&&(r[e]=-r[e])):r[e]=o?-1:1}if(a)Array.prototype.sort.call(this.primitives,(function(t,e){return r[e]-r[t]}));else if(s&&s<this.prim_count){var h=new Int32Array(s),u=0,c=0;for(e=0,n=this.prim_count;e<n;e++)r[e]>=0?i[u++]=i[e]:h[c++]=i[e];i.set(h,this.prim_count-s)}this.first_transparent=this.prim_count-s},A.prototype.build=function(t){var e=t&&!!t.useSlimNodes,n=this;function r(e,r){t.hasOwnProperty(e)?n[e]=t[e]:n[e]=r}if(e)r(\\\"frags_per_leaf_node\\\",1),r(\\\"frags_per_inner_node\\\",0),r(\\\"frags_per_leaf_node_transparent\\\",1),r(\\\"frags_per_inner_node_transparent\\\",0),r(\\\"max_polys_per_node\\\",1/0);else{var i=t.isWeakDevice?.5:1;r(\\\"frags_per_leaf_node\\\",0|256*i),r(\\\"frags_per_inner_node\\\",0|this.frags_per_leaf_node),r(\\\"frags_per_leaf_node_transparent\\\",this.frags_per_leaf_node),r(\\\"frags_per_inner_node_transparent\\\",0),r(\\\"max_polys_per_node\\\",0|2e4*i)}if(this.nodes&&this.nodes.is_lean_node==e)this.nodes.nodeCount=0;else{for(var s=this.prim_count/this.frags_per_leaf_node,a=1;a<s;)a*=2;this.nodes=new _(a,!!t&&t.useSlimNodes)}this.sortPrimitives(this.finfo.wantSort),S.compute_boxes(this);var o,h=this.nodes.nextNodes(2);for(S.bvh_subdivide(this,h,0,this.first_transparent-1,this.boxv_o,this.boxc_o,!1,0);this.recursion_stack.length;)o=this.recursion_stack.pop(),S.bvh_subdivide(o[0],o[1],o[2],o[3],o[4],o[5],o[6],o[7]);for(S.bvh_subdivide(this,h+1,this.first_transparent,this.prim_count-1,this.boxv_t,this.boxc_t,!0,0);this.recursion_stack.length;)o=this.recursion_stack.pop(),S.bvh_subdivide(o[0],o[1],o[2],o[3],o[4],o[5],o[6],o[7])};var I=n(5),T=n(7),C={MESH_VISIBLE:1,MESH_HIGHLIGHTED:2,MESH_HIDE:4,MESH_ISLINE:8,MESH_MOVED:16,MESH_RENDERFLAG:32,MESH_NOTLOADED:64,MESH_ISPOINT:128,MESH_ISWIDELINE:256,MESH_TRAVERSED:512,MESH_DRAWN:1024},O=(Object(x.b)(),null),R=100;function P(){this.length=0,this.numLoaded=0,this.boxes=null,this.transforms=null,this.materials=null,this.packIds=null,this.entityIndexes=null,this.fragId2dbId=null,this.topoIndexes=null,this.visibilityFlags=null}function F(t,e){var n=e.geomDataIndexes.length,r=t.stream,i=0,s={},a=e.mesh2frag={};e.polygonCounts=e.geomDataIndexes;for(var o=0;o<n;o++){var h=e.geomDataIndexes[o];if(s[h]){var u=s[h];e.polygonCounts[o]=e.polygonCounts[u],e.packIds[o]=e.packIds[u],e.entityIndexes[o]=e.entityIndexes[u],i+=e.polygonCounts[o]}else{if(!t.seekToEntry(h))return;r.getUint8(),r.seek(r.offset+24),e.polygonCounts[o]=r.getUint16(),e.packIds[o]=parseInt(t.readString()),e.entityIndexes[o]=t.readU32V(),i+=e.polygonCounts[o],s[h]=o}var c=e.packIds[o]+\\\":\\\"+e.entityIndexes[o],l=a[c];void 0===l?a[c]=o:Array.isArray(l)?l.push(o):a[c]=[l,o]}return e.geomDataIndexes=null,s=null,i}function U(t,e,n,r,o,h,u,c){var l=function(t,e){var n=[];if(!e)return n;for(var r=t.getEntryCounts(),i=t.stream,s=0;s<r;s++){var a=t.seekToEntry(s);if(!a)return;if(a.version>5)return;a.version>4&&t.readU8(),t.readU32V(),a.version>2?t.readU32V():(t.readString(),t.readU32V()),t.readTransform(s,null,12*s);for(var o=0;o<6;o++)i.getFloat32();if(a.version>1){var h=t.readU32V();e.indexOf(h)>=0&&n.push(s)}}return n}(t,h),f=l.length?l.length:t.getEntryCounts(),d=t.stream;O&&f>O&&(f=O),e.totalLength=t.getEntryCounts(),e.length=f,e.numLoaded=0;var m,p,y=e.boxes=o?new Float64Array(6*f):new Float32Array(6*f),v=e.transforms=o?new Float64Array(12*f):new Float32Array(12*f),g=e.materials=new Int32Array(f),x=e.packIds=new Int32Array(f),_=e.entityIndexes=new Int32Array(f),b=e.geomDataIndexes=new Int32Array(f),w=e.fragId2dbId=new Int32Array(f),k=e.visibilityFlags=new Uint16Array(f),z=[0,0,0];r&&(m=new s.a,p=new a.a(!0).fromArray(r.elements));var E=!n&&u,S=v,M=12,A=9;function I(t){if(r){var e=6*t;m.setFromArray(y,e),m.applyMatrix4(p),m.copyToArray(y,e)}}function T(t){for(var e=6*t,n=0;n<6;n++)y[e++]=d.getFloat32()}function P(t,e){for(var n=6*t,r=0;r<6;r++)y[n++]=d.getFloat32()+e[r%3]}E&&(o||(y=new Float64Array(6*f),S=new Float64Array(3*f),M=3,A=0));for(var F=0,U=e.length;F<U;F++){var V=l.length?t.seekToEntry(l[F]):t.seekToEntry(F);if(!V)return;if(V.version>5)return;var L=!0;if(V.version>4)L=0!=(1&t.readU8());if(k[F]=L?C.MESH_VISIBLE:0,g[F]=t.readU32V(),V.version>2?b[F]=t.readU32V():(x[F]=parseInt(t.readString()),_[F]=t.readU32V()),t.readTransform(F,v,12*F,r,n,z),E&&S!==v&&S.set(z,F*M+A),V.version>3?P(F,z):T(F),I(F),n){var B=6*F;y[B++]-=n.x,y[B++]-=n.y,y[B++]-=n.z,y[B++]-=n.x,y[B++]-=n.y,y[B++]-=n.z}V.version>1&&(w[F]=t.readU32V())}if(E){for(var D=-1,N=-1,j=-1,H=y.length,q=0;q<H;q+=6)D=Math.max(D,y[q+3]-y[q]),N=Math.max(N,y[q+4]-y[q+1]),j=Math.max(j,y[q+5]-y[q+2]);var Z=u.size();if(Z.x>D*R||Z.y>N*R||Z.z>j*R){var G=0,W=0,Q=0;for(q=0;q<H;q+=3)G+=y[q],W+=y[q+1],Q+=y[q+2];n=new i.a(3*G/H,3*W/H,3*Q/H)}else n=c;var X=e.boxes;for(q=0;q<H;q+=3)X[q]=y[q]-n.x,X[q+1]=y[q+1]-n.y,X[q+2]=y[q+2]-n.z;if(r&&S!==v){var Y=new i.a;for(F=0;F<U;++F){var K=F*M+A;Y.fromArray(S,K).applyMatrix4(p).toArray(S,K)}}for(F=0;F<U;++F){var J=12*F+9,$=F*M+A;v[J]=S[$]-n.x,v[J+1]=S[$+1]-n.y,v[J+2]=S[$+2]-n.z}}return e.finishLoading=!0,n}function V(t,e,n,r){var i=t.seekToEntry(e);if(!i)return null;if(i.version>2)return null;i.version>1&&t.readU8();return{definition:t.stream.getUint32(),transform:t.readTransform(void 0,void 0,void 0,n,r),instanceNodePath:t.readPathID()}}var L={NT_Inner:0,NT_Geometry:1,NT_Camera:2,NT_Light:3};function B(t){return(B=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\\\"function\\\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t})(t)}function D(t){switch(t){case\\\"meter\\\":case\\\"meters\\\":case\\\"m\\\":return 1;case\\\"feet and inches\\\":case\\\"foot\\\":case\\\"feet\\\":case\\\"ft\\\":return.3048;case\\\"inch\\\":case\\\"inches\\\":case\\\"in\\\":return.0254;case\\\"centimeter\\\":case\\\"centimeters\\\":case\\\"cm\\\":return.01;case\\\"millimeter\\\":case\\\"millimeters\\\":case\\\"mm\\\":return.001;default:return 1}}function N(t,e){var n=t.globalOffset;if(n.x||n.y||n.z){if(e){var r=new a.a(!0);r.copy(e),(e=r).elements[12]-=n.x,e.elements[13]-=n.y,e.elements[14]-=n.z}else(e=new a.a(!0)).makeTranslation(-n.x,-n.y,-n.z);t.placementWithOffset=e}else t.placementWithOffset=e}function j(t,e){if(t.metadata){var n=t.metadata[\\\"world bounding box\\\"],r=new i.a(n.minXYZ[0],n.minXYZ[1],n.minXYZ[2]),o=new i.a(n.maxXYZ[0],n.maxXYZ[1],n.maxXYZ[2]);t.bbox=new s.a(r,o);var h=function(t,e){if(t.placementTransform=e.placementTransform,e.applyScaling){var n=\\\"m\\\";t.metadata[\\\"distance unit\\\"]&&(n=t.metadata[\\\"distance unit\\\"].value),t.scalingUnit=n,\\\"object\\\"===B(e.applyScaling)?(e.applyScaling.from&&(n=e.applyScaling.from),e.applyScaling.to&&(t.scalingUnit=e.applyScaling.to)):t.scalingUnit=e.applyScaling;var r=D(n)/D(t.scalingUnit);if(1!=r){var i=new a.a(!0),s=new a.a(!0);s.elements[0]=r,s.elements[5]=r,s.elements[10]=r,e.placementTransform&&i.copy(e.placementTransform),t.placementTransform=e.placementTransform=i.multiply(s)}}var o=t.metadata[\\\"custom values\\\"];if(o&&o.refPointTransform){t.refPointTransform=new a.a(!0);var h=t.refPointTransform.elements,u=o.refPointTransform;h[0]=u[0],h[1]=u[1],h[2]=u[2],h[4]=u[3],h[5]=u[4],h[6]=u[5],h[8]=u[6],h[9]=u[7],h[10]=u[8],h[12]=u[9],h[13]=u[10],h[14]=u[11]}else{var c=t.metadata.georeference,l=c&&c.refPointLMV,f=0;if(o&&o.hasOwnProperty(\\\"angleToTrueNorth\\\")&&(f=Math.PI/180*o.angleToTrueNorth),l||f){var d=new a.a(!0),m=d.elements;m[0]=m[5]=Math.cos(f),m[1]=-Math.sin(f),m[4]=Math.sin(f);var p=new a.a(!0);m=p.elements,l&&(m[12]=-l[0],m[13]=-l[1],m[14]=-l[2]),t.refPointTransform=d.multiply(p)}}if(e.applyRefPoint&&t.refPointTransform){var y=new a.a(!0);e.placementTransform&&y.copy(e.placementTransform),y.multiply(t.refPointTransform),t.placementTransform=e.placementTransform=y}else!e.applyRefPoint&&e.placementTransform&&(t.placementTransform=new a.a(!0).copy(e.placementTransform));return t.placementTransform&&function(t){for(var e=t.elements,n=0;n<4;n++)for(var r=0;r<4;r++)if(n===r){if(1!==e[4*n+r])return!1}else if(0!==e[4*n+r])return!1;return!0}(t.placementTransform)&&(t.placementTransform=null),t.placementTransform}(t,e);h&&!t.bbox.empty()&&t.bbox.applyMatrix4(h),e.globalOffset?t.globalOffset=e.globalOffset:t.globalOffset=t.bbox.center(),N(t,h),t.bbox.empty()||(t.bbox.min.sub(t.globalOffset),t.bbox.max.sub(t.globalOffset)),t.metadata.hasOwnProperty(\\\"double sided geometry\\\")&&t.metadata[\\\"double sided geometry\\\"].value&&(t.doubleSided=!0)}}function H(t,e){t[0]-=e.x,t[1]-=e.y,t[2]-=e.z}function q(t,e){var n=e.definition,r=t.seekToEntry(n);if(!r)return null;if(r.version>2)return null;var i=t.stream,s={isPerspective:!i.getUint8(),position:t.readVector3f(),target:t.readVector3f(),up:t.readVector3f(),aspect:i.getFloat32(),fov:i.getFloat32()*(180/Math.PI)};return r.version<2&&(i.getFloat32(),i.getFloat32()),s.orthoScale=i.getFloat32(),s}function Z(t,e){var n=t.seekToEntry(e);if(!n)return null;if(n.version>1)return null;var r=t.stream;return{position:t.readVector3f(),dir:t.readVector3f(),r:r.getFloat32(),g:r.getFloat32(),b:r.getFloat32(),intensity:r.getFloat32(),spotAngle:r.getFloat32(),size:r.getFloat32(),type:r.getUint8()}}var G=n(31).Zlib;function W(t){this.unzip=new G.Unzip(t),this.manifest=null,this.materials=null,this.metadata=null,this.fragments=null,this.geompacks=[],this.instances=[],this.cameras=[],this.lights=[],this.propertydb={attrs:[],avs:[],ids:[],values:[],offsets:[]},this.bbox=null,this.animations=null,this.pendingRequests=0,this.globalOffset={x:0,y:0,z:0},this.topologyPath=null}W.prototype.loadAsyncResource=function(t,e,n,r){if(n)r(n);else{var i=this;this.pendingRequests++,o.a.getItem(t,t.basePath+e,(function(e){i.pendingRequests--,r(e),0==i.pendingRequests&&i.postLoad(t)}),t.onFailureCallback)}},W.prototype.loadManifest=function(t){var e=this.unzip.decompress(\\\"manifest.json\\\");if(!e)return!1;var n=new I.a(e);this.manifest=JSON.parse(n.getString(e.byteLength))},W.prototype.applyLargeBoxOffset=function(t){!t||t.x===this.globalOffset.x&&t.y===this.globalOffset.y&&t.z===this.globalOffset.z||(this.bbox.empty()||this.bbox.translate({x:this.globalOffset.x-t.x,y:this.globalOffset.y-t.y,z:this.globalOffset.z-t.z}),this.verylargebbox=!0,this.globalOffset.copy(t),N(this,this.placementTransform))},W.prototype.parseFragmentList=function(t,e,n,r){var i=this;this.loadAsyncResource(e,n,r,(function(t){var n=new T.a(t),r=U(n,i.fragments=new P,e.globalOffset,e.placementTransform,e.fragmentTransformsDouble,void 0,i.bbox,i.globalOffset);n=null,i.applyLargeBoxOffset(r)}))},W.prototype.parseGeometryMetadata=function(t,e,n,r){var i=this;this.loadAsyncResource(e,n,r,(function(t){var e=new T.a(t);i.geomMetadata={},function(t,e){var n=t.getEntryCounts(),r=t.stream;e.length=n;for(var i,s=e.fragTypes=new Uint8Array(n),a=e.primCounts=new Uint16Array(n),o=e.packIds=new Int32Array(n),h=e.entityIndexes=new Int32Array(n),u=0,c=n;u<c;u++){var l=t.seekToEntry(u);if(!l)return;if(s[u]=r.getUint8(),r.seek(r.offset+24),a[u]=r.getUint16(),o[u]=parseInt(t.readString()),h[u]=t.readU32V(),l.version>2){var f=r.getInt32();if(-1!=f&&void 0===i){i=e.topoIndexes=new Int32Array(n);for(var d=0;d<u;d++)i[d]=-1}null!=i&&(i[u]=f)}}}(e,i.geomMetadata),i.numGeoms=i.geomMetadata.primCounts.length}))},W.prototype.parseInstanceTree=function(t,e,n,r){var i=this;this.loadAsyncResource(t,e,n,(function(t){var e=new T.a(t);i.instanceTransforms=function(t,e){for(var n=[],r=[],i=[],s=[],a=0,o=t.stream;o.offset<o.byteLength-8-1;){if(t.readTransform(a,n,12*a,void 0,void 0,void 0),e<5)o.getUint8()&&o.getUint32();var h=o.getUint8();if(e>=5)o.getUint8();if(e>=3&&(r[a]=o.getVarints()),a)switch(h){case L.NT_Inner:break;case L.NT_Geometry:var u;if(e<2){if(1===(u=o.getUint16()))i[a]=o.getUint32();else if(u>0){for(var c=[],l=0;l<u;l++)c.push(o.getUint32());i[a]=c}}else if(1===(u=o.getVarints()))i[a]=o.getVarints();else if(u>0){for(c=[],l=0;l<u;l++)c.push(o.getVarints());i[a]=c}break;case L.NT_Camera:case L.NT_Light:o.getUint8()&&o.getUint32();break;default:debug(\\\"Unrecognized instance tree node type.\\\")}var f=0;h===L.NT_Inner&&(f=e<2?o.getUint16():o.getVarints()),s[a]=f,a++}var d=new Uint32Array(r.length);d.set(r);var m=new Float32Array(n.length);m.set(n);var p=new Uint32Array(s.length);return p.set(s),{dbIds:d,fragIds:i,transforms:m,childCounts:p}}(e,r)}))},W.prototype.loadRemainingSvf=function(t){var e=this,n=this.unzip;this.manifest=t.manifest;var r=this.manifest,i=r.assets,s=n.decompress(\\\"metadata.json\\\"),a=new I.a(s);s.byteLength>3&&0!==s[3]&&(this.metadata=JSON.parse(a.getString(s.byteLength)).metadata,j(this,t)),this.packFileTotalSize=0,this.primitiveCount=0;for(var o=r.typesets,h={},u=0;u<o.length;u++){var c=o[u];h[c.id]=c.types}for(u=0;u<i.length;u++){var l=i[u];if(!Object(x.b)()||\\\"Set.bin\\\"!==l.id){var f=l.type;0==f.indexOf(\\\"Autodesk.CloudPlatform.\\\")&&(f=f.substr(23));var d=l.URI,m=l.typeset?h[l.typeset]:null,p=l.usize||0,y=Math.round(p/1048576*1e5)/1e5|0;if(0!=d.indexOf(\\\"embed:/\\\"))if(\\\"PackFile\\\"==f)\\\"Autodesk.CloudPlatform.Geometry\\\"==(m?m[0].class:null)&&(this.packFileTotalSize+=p,this.geompacks.push({id:l.id,uri:d,usize:p}));else\\\"PropertyAttributes\\\"==f?this.propertydb.attrs.push({path:d}):\\\"PropertyAVs\\\"==f?this.propertydb.avs.push({path:d}):\\\"PropertyIDs\\\"==f?this.propertydb.ids.push({path:d}):\\\"PropertyOffsets\\\"==f?this.propertydb.offsets.push({path:d}):\\\"PropertyValues\\\"==f&&this.propertydb.values.push({path:d});var v=l.URI,g=null;if(0==v.indexOf(\\\"embed:/\\\")&&(v=v.substr(7),g=n.decompress(v)),\\\"ProteinMaterials\\\"==f)-1==v.indexOf(\\\"Protein\\\")?this.loadAsyncResource(t,v,g,(function(t){var n=new I.a(t),r=t.byteLength;e.materials=0<r?JSON.parse(n.getString(r)):null})):this.loadAsyncResource(t,v,g,(function(t){var n=new I.a(t),r=t.byteLength;if(0<r)try{e.proteinMaterials=JSON.parse(n.getString(r))}catch(n){for(var i=\\\"\\\",s=0;s<t.length;s++)i+=String.fromCharCode(t[s]);try{e.proteinMaterials=JSON.parse(i)}catch(t){console.error(\\\"Failed to parse Protein materials file either as UTF8 or ANSI\\\")}}else e.proteinMaterials=null}));else if(\\\"StandardMaterials\\\"==f)this.loadAsyncResource(t,v,g,(function(t){var n=new I.a(t),r=t.byteLength;if(0<r){var i=n.getString(r);e.stdSurfMats=JSON.parse(i)}else e.stdSurfMats=null}));else if(\\\"FragmentList\\\"==f)this.parseFragmentList(l,t,v,g);else if(\\\"GeometryMetadataList\\\"==f)this.parseGeometryMetadata(l,t,v,g);else if(\\\"PackFile\\\"==f)-1!=v.indexOf(\\\"CameraDefinitions.bin\\\")?this.loadAsyncResource(t,v,g,(function(t){e.camDefPack=new T.a(t)})):-1!=v.indexOf(\\\"CameraList.bin\\\")?this.loadAsyncResource(t,v,g,(function(t){e.camInstPack=new T.a(t)})):-1!=v.indexOf(\\\"LightDefinitions.bin\\\")?this.loadAsyncResource(t,v,g,(function(t){e.lightDefPack=new T.a(t)})):-1!=v.indexOf(\\\"LightList.bin\\\")&&this.loadAsyncResource(t,v,g,(function(t){e.lightInstPack=new T.a(t)}));else if(\\\"Animations\\\"==f)this.loadAsyncResource(t,v,g,(function(t){var n=new I.a(t),r=t.byteLength;e.animations=0<r?JSON.parse(n.getString(r)):null}));else if(\\\"Topology\\\"==f)e.topologyPath=t.basePath+v,e.topologySizeMB=y;else if(t.loadInstanceTree&&(\\\"InstanceTree\\\"==f||\\\"InstanceTreeTree\\\"==f)){var _=m?m[0].version:1;this.parseInstanceTree(t,v,g,_)}}}0==this.pendingRequests&&this.postLoad(t),delete this.unzip},W.prototype.addTransparencyFlagsToMaterials=function(t){for(var e in t){var n=t[e],r=n.userassets,i=n.materials[r[0]];n.transparent=i.transparent}},W.prototype.postLoadOfCam=function(t){if(this.camDefPack&&this.camInstPack){for(var e=0,n=this.camInstPack.getEntryCounts();e<n;e++){var r=V(this.camInstPack,e,this.placementTransform,this.globalOffset),s=q(this.camDefPack,r);r.transform&&(r.transform.transformPoint(s.position),r.transform.transformPoint(s.target),r.transform.transformDirection(s.up));var a=this.bbox;if(a&&!a.containsPoint(s.target)){var o=(new i.a).copy(a.center()).distanceTo(s.position),h=(new i.a).copy(s.target).sub(s.position).normalize().multiplyScalar(o);s.target=(new i.a).copy(s.position).add(h)}this.cameras.push(s)}delete this.camDefPack,delete this.camInstPack}},W.prototype.postLoadOfLight=function(t){if(this.lightDefPack&&this.lightInstPack){for(var e=0,n=this.lightInstPack.getEntryCounts();e<n;e++){var r=V(this.lightInstPack,e,this.placementTransform,this.globalOffset);this.lights.push(Z(this.lightDefPack,r.definition))}delete this.lightInstPack,delete this.lightDefPack}},W.prototype.postLoadOfFragments=function(t){var e=this.fragments;if(this.geomMetadata){e.polygonCounts=e.geomDataIndexes;var n=this.geomMetadata;null!=n.topoIndexes&&(e.topoIndexes=new Int32Array(e.length));for(var r=0,i=e.length;r<i;r++){var s=e.geomDataIndexes[r];e.entityIndexes[r]=n.entityIndexes[s],e.packIds[r]=n.packIds[s],e.polygonCounts[r]=n.primCounts[s],this.primitiveCount+=n.primCounts[s],null!=n.topoIndexes&&(e.topoIndexes[r]=n.topoIndexes[s])}e.geomDataIndexes=null,this.geomMetadata=null}this.calculateMesh2Frag(e)},W.prototype.calculateMesh2Frag=function(t){for(var e=t.mesh2frag={},n=t.packIds,r=t.entityIndexes,i=0,s=t.length;i<s;i++){var a=n[i]+\\\":\\\"+r[i],o=e[a];void 0===o?e[a]=i:Array.isArray(o)?o.push(i):e[a]=[o,i]}},W.prototype.postLoadOfBBox=function(t){if(!this.bbox||t.placementTransform){for(var e=[1/0,1/0,1/0,-1/0,-1/0,-1/0],n=this.fragments,r=n.boxes,i=0,s=n.length;i<s;i++){var a,o=6*i;for(a=0;a<3;a++)r[o+a]<e[a]&&(e[a]=r[o+a]);for(a=3;a<6;a++)r[o+a]>e[a]&&(e[a]=r[o+a])}this.bbox={min:{x:e[0],y:e[1],z:e[2]},max:{x:e[3],y:e[4],z:e[5]}}}},W.prototype.postLoadOfObjectIds=function(t){var e=t.objectIds;if(null!=e){for(var n=[],r=[],i=0;i<e.length;++i)for(var s=0;s<this.fragments.length;++s)this.fragments.fragId2dbId[s]==e[i]&&(n.push(this.fragments.packIds[s]),r.push(s));var a=1,o=n.length;for(i=1;i<o;){for(;i<o&&n[i]==n[i-1];)++i;if(o==i)break;n[a++]=n[i++]}n.splice(a-1,o-a);var h=[];for(i=0;i<this.geompacks.length;++i)for(s=0;s<n.length;++s)parseInt(this.geompacks[i].id)==n[s]&&h.push(this.geompacks[i]);this.geompacks=h;var u=function(t,e){t.length=e.length,t.numLoaded=0;for(var n=t.length,r=[1/0,1/0,1/0,-1/0,-1/0,-1/0],i=new Float32Array(6*n),s=new Float32Array(12*n),a=new Int32Array(n),o=new Int32Array(n),h=new Int32Array(n),u=new Uint16Array(n),c={},l=0;l<e.length;++l){for(var f=e[l],d=6*f,m=6*l,p=0;p<6;++p)i[m++]=t.boxes[d++];d=12*f,m=12*l;for(p=0;p<12;++p)s[m++]=t.transforms[d++];a[l]=t.materials[f],o[l]=t.packIds[f],h[l]=t.entityIndexes[f],u[l]=t.visibilityFlags[f];var y=t.packIds[f]+\\\":\\\"+t.entityIndexes[f],v=c[y];null==v?c[y]=l:Array.isArray(v)?v.push(l):c[y]=[v,l];var g=6*l;for(p=0;p<3;++p)i[g+p]<r[p]&&(r[p]=i[g+p]);for(p=3;p<6;++p)i[g+p]>r[p]&&(r[p]=i[g+p])}return t.boxes=i,t.transforms=s,t.materials=a,t.packIds=o,t.entityIndexes=h,t.mesh2frag=c,t.visibilityFlags=u,r}(this.fragments,r);this.bbox={min:{x:u[0],y:u[1],z:u[2]},max:{x:u[3],y:u[4],z:u[5]}}}},W.prototype.postLoadComplete=function(t){if(t.loadDoneCB(\\\"svf\\\"),this.fragments.polygonCounts){var e=performance.now(),n=this.materials?this.materials.materials:null;n&&this.addTransparencyFlagsToMaterials(n),this.bvh=new A(this.fragments,n),this.bvh.build(t.bvhOptions);var r=performance.now();t.worker.debug(\\\"BVH build time (worker thread):\\\"+(r-e)),t.loadDoneCB(\\\"bvh\\\")}t.loadDoneCB(\\\"done\\\")},W.prototype.postLoad=function(t){!function(t){if(t.animations){var e=t.animations.animations;if(e)for(var n=t.globalOffset,r=(new a.a).makeTranslation(n.x,n.y,n.z),i=(new a.a).makeTranslation(-n.x,-n.y,-n.z),s=new a.a,o=new a.a,h=0;h<e.length;h++){var u=e[h];if(u.hierarchy)for(var c=0;c<u.hierarchy.length;c++){var l=u.hierarchy[c].keys;if(l)for(var f=0;f<l.length;f++){var d=l[f].pos;if(d){var m=n,p=l[f].rot;p&&(s.makeRotationFromQuaternion({x:p[0],y:p[1],z:p[2],w:p[3]}),o.multiplyMatrices(r,s).multiply(i),m={x:o.elements[12],y:o.elements[13],z:o.elements[14]}),H(d,m)}var y=l[f].target;y&&H(y,n);var v=l[f].points;if(v)for(var g=0;g<v.length;g++)H(v[g],n)}}}}}(this),this.postLoadOfCam(t),this.postLoadOfLight(t),this.postLoadOfFragments(t),this.postLoadOfBBox(t),this.postLoadOfObjectIds(t),this.postLoadComplete(t)};var Q=n(14);function X(t,e){this.offset=0,this.byteLength=e,this.range=0,this.compressedBuffer=t,this.compressedByteLength=t.length,this.compressedOffset=0,this.decompressEnd=!1,this.resetCount=0,this.convBuf=new ArrayBuffer(8),this.convUint8=new Uint8Array(this.convBuf),this.convUint16=new Uint16Array(this.convBuf),this.convInt32=new Int32Array(this.convBuf),this.convUint32=new Uint32Array(this.convBuf),this.convFloat32=new Float32Array(this.convBuf),this.convFloat64=new Float64Array(this.convBuf),this.COMPRESSED_chunk_SIZE=524288,this.DECOMPRESSED_chunk_SIZE=262144,this.chunks=[],this.chunksByteLengthMax=0,this.chunksByteLengthMin=0,this.chunkPointer=null,this.chunkOffset=0,this.tempchunk={startIdx:0,endIdx:0,buffer:null},this.inflate=this.getInflate(),this.prepare(0,1024)}X.prototype.getInflate=function(){if(!this.inflate){this.inflate=new Q.Inflate({level:3,chunkSize:this.DECOMPRESSED_chunk_SIZE});var t=this;this.inflate.onData=function(e){t.chunksByteLengthMax+=e.byteLength,t.chunksByteLengthMax<t.offset&&(e=null,t.chunksByteLengthMin=t.chunksByteLengthMax),t.chunks.push(e)},this.inflate.onEnd=function(){if(t.decompressEnd=!0,t.inflate=null,t.chunksByteLengthMax!=t.byteLength)throw\\\"Decompress error, unexpected size.\\\"}}return this.inflate},X.prototype.prepare=function(t,e,n){if(this.chunksByteLengthMin>t&&(this.reset(),this.offset=t,this.range=e),!n){for(var r=Math.floor(t/this.DECOMPRESSED_chunk_SIZE),i=Math.floor(this.chunksByteLengthMin/this.DECOMPRESSED_chunk_SIZE),s=this.chunks.length<r?this.chunks.length:r,a=i;a<s;a++)this.chunks[a]=null;this.chunksByteLengthMin=s*this.DECOMPRESSED_chunk_SIZE}var o=t+(e=e||1);o=o>this.byteLength?this.byteLength:o;for(var h=!1;o>this.chunksByteLengthMax;){var u=this.COMPRESSED_chunk_SIZE;this.compressedOffset+u>=this.compressedByteLength&&(u=this.compressedByteLength-this.compressedOffset,h=!0);var c=new Uint8Array(this.compressedBuffer.buffer,this.compressedOffset,u);if(this.getInflate().push(c,h),this.compressedOffset+=u,h)break}},X.prototype.ensurechunkData=function(t){t=t||1;var e=this.chunks.length,n=Math.floor(this.offset/this.DECOMPRESSED_chunk_SIZE),r=Math.floor((this.offset+t-1)/this.DECOMPRESSED_chunk_SIZE);if(r>=e){var i=(r-e+1)*this.DECOMPRESSED_chunk_SIZE;this.prepare(this.DECOMPRESSED_chunk_SIZE*e,i,!0)}if(n<r){if(this.tempchunk.startIdx>n||this.tempchunk.endIdx<r){var s=(r-n+1)*this.DECOMPRESSED_chunk_SIZE;this.tempchunk.buffer=new Uint8Array(s);for(var a=0,o=n;o<=r;o++)this.tempchunk.buffer.set(this.chunks[o],a),a+=this.DECOMPRESSED_chunk_SIZE;this.tempchunk.startIdx=n,this.tempchunk.endIdx=r}this.chunkPointer=this.tempchunk.buffer}else this.chunkPointer=this.chunks[n];this.chunkOffset=this.offset-n*this.DECOMPRESSED_chunk_SIZE,this.offset+=t},X.prototype.seek=function(t,e,n){this.offset=t,this.range=e,this.prepare(t,e,n)},X.prototype.getBytes=function(t){return this.ensurechunkData(t),new Uint8Array(this.chunkPointer.buffer,this.chunkOffset,t)},X.prototype.getVarints=function(){var t,e=0,n=0;do{this.ensurechunkData(),e|=(127&(t=this.chunkPointer[this.chunkOffset]))<<n,n+=7}while(128&t);return e},X.prototype.getUint8=function(){return this.ensurechunkData(),this.chunkPointer[this.chunkOffset]},X.prototype.getUint16=function(){return this.ensurechunkData(),this.convUint8[0]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),this.convUint8[1]=this.chunkPointer[this.chunkOffset],this.convUint16[0]},X.prototype.getInt16=function(){var t=this.getUint16();return t>32767&&(t|=4294901760),t},X.prototype.getInt32=function(){var t=this.convUint8;return this.ensurechunkData(),t[0]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[1]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[2]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[3]=this.chunkPointer[this.chunkOffset],this.convInt32[0]},X.prototype.getUint32=function(){var t=this.convUint8;return this.ensurechunkData(),t[0]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[1]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[2]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[3]=this.chunkPointer[this.chunkOffset],this.convUint32[0]},X.prototype.getFloat32=function(){var t=this.convUint8;return this.ensurechunkData(),t[0]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[1]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[2]=this.chunkPointer[this.chunkOffset],this.ensurechunkData(),t[3]=this.chunkPointer[this.chunkOffset],this.convFloat32[0]},X.prototype.getFloat64=function(){for(var t=this.convUint8,e=0;e<8;e++)this.ensurechunkData(),t[e]=this.chunkPointer[this.chunkOffset];return this.convFloat64[0]},X.prototype.getString=function(t){var e=\\\"\\\";this.ensurechunkData(t);for(var n,r=this.chunkPointer,i=this.chunkOffset,s=this.chunkOffset+t;i<s;i++)e+=String.fromCharCode(r[i]);try{n=decodeURIComponent(escape(e))}catch(t){n=e,debug(\\\"Failed to decode string \\\"+n)}return n},X.prototype.reset=function(t){this.resetCount++,debug(\\\"InputStream Less Reset: \\\"+this.resetCount),t&&(this.compressedBuffer=t,this.compressedByteLength=t.length),this.offset=0,this.chunks=[],this.chunksByteLengthMax=0,this.chunksByteLengthMin=0,this.compressedOffset=0,this.decompressEnd=!1,this.chunkPointer=null,this.chunkOffset=0,this.inflate=null,this.tempchunk.startIdx=0,this.tempchunk.endIdx=0,this.tempchunk.buffer=null};var Y=n(14);function K(t,e){var n,r=!1;if(31==t[0]&&139==t[1])if(e){r=!0;var i=(n=new X(t,e)).getInt32();this.type=n.getString(i),this.version=n.getInt32();var s=Math.floor(.9*n.byteLength);n.seek(s,n.byteLength-s)}else{t=Y.ungzip(t);i=(n=new I.a(t)).getInt32();this.type=n.getString(i),this.version=n.getInt32()}else n=new I.a(t);this.stream=n,this.types=null,this.entryOffsets=[],n.seek(n.byteLength-8,8,r);var a=n.getUint32();this.typesOffset=n.getUint32(),n.seek(this.typesOffset,1,r);var o=this.readU32V();this.types=[];for(var h=0;h<o;++h)this.types.push({entryClass:this.readString(),entryType:this.readString(),version:this.readU32V()});n.seek(a,1,r);var u=this.readU32V(),c=this.entryOffsets;for(h=0;h<u;++h)c.push(n.getUint32());n.seek(0)}K.prototype=Object.create(T.a.prototype);var J=Object(x.b)()?6291456:33554432;function $(t){W.call(this,t),this.memoryOptimizedMode=!1,this.pendingGeometryMetadataLoad={}}$.prototype=Object.create(W.prototype),$.prototype.constructor=$,$.prototype.loadAsyncResource=function(t,e,n,r,i){if(n)r(n);else{var s=this;this.pendingRequests++,o.a.getItem(t,t.basePath+e,(function(e){s.pendingRequests--,r(e),0==s.pendingRequests&&s.postLoad(t)}),t.onFailureCallback,{skipDecompress:i})}},$.prototype.parseFragmentList=function(t,e,n,r){this.memoryOptimizedMode=e.perfOpt.forceMemoryOptimizedMode||t.size>J,debug(\\\"PackageML: memory optimized mode: \\\"+this.memoryOptimizedMode);var i=this;if(this.loadAsyncResource(e,n,r,(function(n){var r=new K(n,t.usize),s=U(r,i.fragments=new P,e.globalOffset,e.placementTransform,e.fragmentTransformsDouble,e.objectIds,i.bbox,i.globalOffset);r=null,i.applyLargeBoxOffset(s),i.memoryOptimizedMode&&i.pendingGeometryMetadataLoad.path&&i.loadAsyncResource(e,i.pendingGeometryMetadataLoad.path,i.pendingGeometryMetadataLoad.contents,(function(t){var e=new K(t,i.pendingGeometryMetadataLoad.usize);debug(\\\"PackageML: read geometry metadata into fragment directly.\\\"),i.primitiveCount=F(e,i.fragments),i.numGeoms=e.getEntryCounts(),e=null,i.pendingGeometryMetadataLoad.contents=null}),i.memoryOptimizedMode)}),i.memoryOptimizedMode),!this.memoryOptimizedMode&&this.pendingGeometryMetadataLoad.path){n=this.pendingGeometryMetadataLoad.path,r=this.pendingGeometryMetadataLoad.contents;this.pendingGeometryMetadataLoad={},debug(\\\"PackageML: read geometry metadata as usual.\\\"),W.prototype.parseGeometryMetadata.call(this,null,e,n,r)}},$.prototype.parseGeometryMetadata=function(t,e,n,r){var i=t.usize;if(this.fragments){var s=this;this.loadAsyncResource(e,n,r,(function(t){var e=new K(t,i);s.primitiveCount=F(e,s.fragments),s.numGeoms=e.getEntryCounts(),e=null}),s.memoryOptimizedMode)}else this.pendingGeometryMetadataLoad.path=n,this.pendingGeometryMetadataLoad.contents=r,this.pendingGeometryMetadataLoad.usize=i},$.prototype.postLoadOfFragments=function(t){this.memoryOptimizedMode?this.fragments.mesh2frag||this.calculateMesh2Frag(this.fragments):W.prototype.postLoadOfFragments.call(this,t)},$.prototype.postLoadOfObjectIds=function(t){if(this.memoryOptimizedMode){if(t.objectIds&&t.objectIds.length>0){var e=this.geompacks.length,n=this.fragments,r=0,i=new Int8Array(e);for(r=0;r<n.packIds.length;r++)i[n.packIds[r]]=15;var s=0;for(r=0;r<i.length;r++)15===i[r]&&(this.geompacks[s]=this.geompacks[r],s++);s<e&&this.geompacks.splice(s,e-s)}}else W.prototype.postLoadOfObjectIds.call(this,t)},$.prototype.postLoadComplete=function(t){if(this.memoryOptimizedMode){if(this.fragments.polygonCounts){var e=performance.now(),n=this.materials?this.materials.materials:null;n&&this.addTransparencyFlagsToMaterials(n),this.bvh=new A(this.fragments,n),this.bvh.build(t.bvhOptions);var r=performance.now();t.worker.debug(\\\"BVH build time (worker thread):\\\"+(r-e))}t.loadDoneCB(\\\"svf\\\"),t.loadDoneCB(\\\"done\\\")}else W.prototype.postLoadComplete.call(this,t)};var tt=n(6);function et(t,e){try{e()}catch(e){t.worker.raiseError(tt.a.BAD_DATA,\\\"Unhandled exception while loading SVF\\\",{url:t.url,exception:e.toString(),stack:e.stack}),t.worker.postMessage(null)}}function nt(t){var e=t.worker;et(t,(function(){var n=t.svf;t.loadDoneCB=function(r,i){if(\\\"svf\\\"==r){var s,a,o=n.fragments,h=[o.transforms.buffer,o.packIds.buffer,o.entityIndexes.buffer,o.fragId2dbId.buffer,o.visibilityFlags.buffer];n.bvh?(a={nodes:n.bvh.nodes.getRawData(),primitives:n.bvh.primitives,useLeanNodes:32==n.bvh.nodes.bytes_per_node},h.push(a.nodes),h.push(a.primitives.buffer),h.push(o.boxes.buffer),h.push(o.polygonCounts.buffer),h.push(o.materials.buffer),s={svf:n,bvh:a,progress:1}):s={svf:n,progress:.8},e.postMessage(s,h)}else if(\\\"bvh\\\"==r)a={nodes:n.bvh.nodes.getRawData(),primitives:n.bvh.primitives,useLeanNodes:32==n.bvh.nodes.bytes_per_node},e.postMessage({bvh:a,basePath:n.basePath,progress:1},[a.nodes,a.primitives.buffer]);else if(\\\"mesh\\\"==r){var u=[];i.mesh&&u.push(i.mesh.vb.buffer),e.postMessage(i,u)}else\\\"done\\\"==r?e.postMessage({progress:1}):(e.raiseError(tt.a.BAD_DATA,\\\"Failure while loading SVF\\\",{url:t.url}),e.postMessage(null))},n.loadRemainingSvf(t)}))}function rt(t){var e=t.worker;e.postMessage({progress:.01});var n=\\\"svf\\\",r=t.url.toLocaleLowerCase();r.lastIndexOf(\\\".gltf\\\")===r.length-5&&(n=\\\"gltf\\\"),r.lastIndexOf(\\\".glb\\\")===r.length-4&&(n=\\\"glb\\\");var i={responseType:\\\"gltf\\\"===n?\\\"json\\\":\\\"arraybuffer\\\"};o.a.getItem(t,t.url,(function(r){e.postMessage({progress:.5}),et(t,(function(){var i,s={max_pf_files:t.max_pf_files};i=\\\"gltf\\\"===n||\\\"glb\\\"===n?new d(r):t.perfOpt&&t.perfOpt.memoryOptimizedSvfLoading?new $(new Uint8Array(r)):new W(new Uint8Array(r),s),t.svf=i,i.loadManifest(t),t.interceptManifest?e.postMessage({manifest:i.manifest}):(t.manifest=i.manifest,nt(t))}))}),t.onFailureCallback,i),\\\"svf\\\"===n&&o.a.getItem(t,t.basePath+\\\"0.pf\\\",(function(){}),(function(){}),i)}function it(t){var e=t.worker;function n(t){e.postMessage({\\\"fetch-topology\\\":{error:t,topology:null}})}o.a.getItem(t,t.path,(function(t){e.postMessage({\\\"status-topology\\\":{}});var r=null;try{var i=new I.a(t),s=t.byteLength;0<s&&(r=JSON.parse(i.getString(s))),r?e.postMessage({\\\"fetch-topology\\\":{error:null,topology:r}}):n(\\\"topology-no-content\\\")}catch(t){n(t)}}),n)}function st(t){t.register(\\\"LOAD_SVF\\\",{doOperation:rt}),t.register(\\\"LOAD_SVF_CONTD\\\",{doOperation:nt}),t.register(\\\"FETCH_TOPOLOGY\\\",{doOperation:it})}n.d(e,\\\"register\\\",(function(){return st}))},function(t,e,n){\\\"use strict\\\";n.r(e);var r=n(7),i=n(2),s=n(11),a=new Float32Array(3),o=1/Math.PI,h=Math.atan2;Object(i.c)()||(h=function(t,e){var n=Math.abs(e),r=Math.abs(t),i=Math.min(n,r)/Math.max(n,r),s=i*i,a=((-.0464964749*s+.15931422)*s-.327622764)*s*i+i;return r>n&&(a=1.57079637-a),e<0&&(a=3.14159274-a),t<0&&(a=-a),a});var u=function(t,e,n,r,i){var s={x:e[t*r],y:e[t*r+1],z:e[t*r+2]},a={x:s.x-e[t*i],y:s.y-e[t*i+1],z:s.z-e[t*i+2]},o=n[r].next==i?n[r].prev:n[r].next;return{pos:s,next:a,prev:o<0?{x:a.x,y:a.y,z:a.z}:{x:e[t*o]-s.x,y:e[t*o+1]-s.y,z:e[t*o+2]-s.z}}},c=function(t,e,n,r,i){if(\\\"OCTM\\\"!=t.getString(4))return null;if(5!=t.getInt32())return null;var u=t.getString(3);t.getUint8();var c={stream:null,vertices:null,indices:null,normals:null,colors:null,uvs:[],attrs:[]};c.vertexCount=t.getInt32(),c.triangleCount=t.getInt32(),c.texMapCount=t.getInt32(),c.attribMapCount=t.getInt32(),c.flags=t.getInt32(),c.comment=t.getString(t.getInt32());var l=i;c.vbstride=3,1&c.flags&&(c.vbstride+=l?1:3),c.vbstride+=2*(c.texMapCount||0),c.vbstride+=3*(c.attribMapCount||0),c.vblayout={};var f=0;if(c.vblayout.position={offset:f,itemSize:3},f+=3,1&c.flags&&(c.vblayout.normal={offset:f,itemSize:l?2:3,bytesPerItem:l?2:4,normalize:l},f+=l?1:3),c.texMapCount)for(var d=0;d<c.texMapCount;d++){var m=\\\"uv\\\";d&&(m+=(d+1).toString()),c.vblayout[m]={offset:f,itemSize:2},f+=2}return\\\"RAW\\\"==u?(function(t,e,n,r,i){var s=function(){return t.getString(t.getInt32())},u=t.getString(4);if(\\\"INDX\\\"!=u)return null;var c=e.vertexCount,l=e.triangleCount,f=e.vbstride,d=c*f,m=d+(3*l*2+3)/4|0;if(e.sharedBufferBytes=4*m,!i){var p,y,v,g,x;if(n||(n=new ArrayBuffer(4*m),r=0),p=e.vb=new Float32Array(n,r,d),e.indices=new Uint16Array(n,r+4*d,3*l),t.getIndicesArray(p.buffer,r+4*d,3*l),\\\"VERT\\\"!=(u=t.getString(4)))return null;if(e.vblayout.normal&&2===e.vblayout.normal.itemSize&&(y=new Uint16Array(p.buffer,p.byteOffset,p.byteLength/2)),t.getVector3Array(p,c,e.vblayout.position.offset,f),1&e.flags){if(\\\"NORM\\\"!=(u=t.getString(4)))return null;if(y)for(a.length<3*c&&(a=new Float32Array(3*c)),t.getVector3Array(a,c,0,3),v=0,x=e.vblayout.normal.offset;v<c;v++,x+=f){var _=.5*(h(a[3*v+1],a[3*v])*o+1),b=.5*(a[3*v+2]+1);y[2*x]=65535*_|0,y[2*x+1]=65535*b|0}else t.getVector3Array(p,c,e.vblayout.normal.offset,f)}for(g=0;g<e.texMapCount;g++){if(\\\"TEXC\\\"!=(u=t.getString(4)))return null;var w={name:s(),file:s()};e.uvs.push(w);var k=\\\"uv\\\";g&&(k+=(g+1).toString()),t.getVector2Array(p,c,e.vblayout[k].offset,f)}var z=f-3*(e.attribMapCount||0);for(g=0;g<e.attribMapCount;g++){if(\\\"ATTR\\\"!=(u=t.getString(4)))return null;var E,S={name:s()};if(-1!=S.name.indexOf(\\\"Color\\\"))E=\\\"color\\\";else{if(-1==S.name.indexOf(\\\"UVW\\\")){e.attrs.push(S),t.getBytes(16*c);continue}E=\\\"uvw\\\"}e.vblayout[E]={offset:z,itemSize:3};var M=[0,0,0,0];for(v=0,x=z;v<c;v++,x+=f)t.getVector4(M,0),p[x]=M[0],p[x+1]=M[1],p[x+2]=M[2];z+=3}}}(t,c,e,n,r),r||(s.a.deduceUVRepetition(c),s.a.computeBounds3D(c)),c):\\\"MG2\\\"==u?(debug(\\\"readOpenCTM_MG2(stream, mesh, dstBuffer, startOffset, estimateSizeOnly) not supported\\\"),r||(s.a.deduceUVRepetition(c),s.a.computeBounds3D(c)),c):null},l=function(t,e,n,r){if(n)return null;var i,a,o={vertices:null,indices:null,colors:null,normals:null,uvs:[],attrs:[],lineWidth:1};r?(e.version>1?(o.vertexCount=t.readU16(),i=t.readU16(),a=t.readU16(),e.version>2&&(o.lineWidth=t.readF32())):(o.vertexCount=t.readU32V(),i=t.readU32V(),a=t.readU32V()),o.isLines=!0):(o.vertexCount=t.readU16(),i=t.readU16(),o.pointSize=t.readF32(),o.isPoints=!0);var h=0!=t.stream.getUint8();o.vbstride=3,h&&(o.vbstride+=3),o.vblayout={};var c=0;o.vblayout.position={offset:c,itemSize:3},c+=3,h&&(o.vblayout.color={offset:c,itemSize:3}),o.vb=new Float32Array(o.vertexCount*o.vbstride);var l,f,d=o.vb,m=o.vbstride,p=t.stream;if(p.getVector3Array(d,o.vertexCount,o.vblayout.position.offset,m),h)for(l=0,c=o.vblayout.color.offset,f=o.vertexCount;l<f;l++,c+=m)d[c]=p.getFloat32(),d[c+1]=p.getFloat32(),d[c+2]=p.getFloat32(),p.getFloat32();var y=function(t){return t.buffer.slice(t.byteOffset,t.byteOffset+t.length)};if(r){var v,g;e.version>1?(v=new Uint16Array(y(p.getBytes(2*i))),g=new Uint16Array(y(p.getBytes(2*a)))):(v=new Int32Array(y(p.getBytes(4*i))),g=new Int32Array(y(p.getBytes(4*a))));var x=g[a-1]-a+1;o.indices=new Uint16Array(2*x);for(var _=0,b=0;b+1<a;b++)for(var w=g[b];w+1<g[b+1];w++)o.indices[_++]=v[w],o.indices[_++]=v[w+1]}else o.indices=new Uint16Array(y(p.getBytes(2*i)));return 1!=o.lineWidth&&function(t,e,n,r,i){i=t.vbstride,t.vblayout.prev={offset:i,itemSize:3},i+=3,t.vblayout.next={offset:i,itemSize:3},i+=3,t.vblayout.side={offset:i,itemSize:1},t.vbstride+=7;var s,a,o,h,c,l=0,f=new Array(t.vertexCount);for(s=0;s<t.vertexCount;++s)f[s]={prev:-1,next:-1,prev_seg:-1};for(a=0;a<r;++a)o=2*a,h=t.indices[o],c=t.indices[o+1],f[h].next=c,f[h].prev>=0&&++l,f[c].prev=h,f[c].prev_seg=a,f[c].next>=0&&++l;var d=2*r,m=new Array(d),p=new Uint16Array(6*(r+l)),y=0;for(a=0;a<r;++a)o=2*a,h=t.indices[o],c=t.indices[o+1],m[o]=u(e,n,f,h,c),m[o+1]=u(e,n,f,c,h),h=o,c=o+1,p[y++]=2*h+1,p[y++]=2*c,p[y++]=2*h,p[y++]=2*c,p[y++]=2*c+1,p[y++]=2*h,f[h=t.indices[o]].prev>=0&&(c=2*f[h].prev_seg+1,h=o,p[y++]=2*c,p[y++]=2*h,p[y++]=2*c+1,p[y++]=2*h+1,p[y++]=2*h,p[y++]=2*c);t.indices=p;var v=2*d;t.vb=new Float32Array(v*t.vbstride),i=t.vblayout.position.offset;for(var g=0;g<d;++g)for(var x=0;x<2;++x)t.vb[i]=m[g].pos.x,t.vb[i+1]=m[g].pos.y,t.vb[i+2]=m[g].pos.z,i+=e,t.vb[i]=m[g].prev.x,t.vb[i+1]=m[g].prev.y,t.vb[i+2]=m[g].prev.z,i+=3,t.vb[i]=m[g].next.x,t.vb[i+1]=m[g].next.y,t.vb[i+2]=m[g].next.z,i+=3,t.vb[i]=x?-1:1,i+=1;t.vertexCount=v,t.isWideLines=!0}(o,m,d,x,c),s.a.computeBounds3D(o),o},f=function(t,e,n){return l(t,e,n,!0)},d=function(t,e,n){return l(t,e,n,!1)};function m(t,e,n){var r=t.seekToEntry(e);return r?\\\"Autodesk.CloudPlatform.OpenCTM\\\"==r.entryType?c(t.stream,n.dstBuffer,n.startOffset,n.estimateSizeOnly,n.packNormals):\\\"Autodesk.CloudPlatform.Lines\\\"==r.entryType?f(t,r,n.estimateSizeOnly):\\\"Autodesk.CloudPlatform.Points\\\"==r.entryType?d(t,r,n.estimateSizeOnly):null:null}var p,y,v,g,x,_,b,w,k,z=n(6),E=n(4),S=n(0);function M(t){return t.vb?t.vb.length/t.vbstride:t.attributes.positions?t.attributes.positions.count:0}function A(t,e,n){var r=t.attributes;p||(p=new S.a,y=new S.a,new S.a),n&&(v||(v=new THREE.Matrix3),v.getNormalMatrix(n));var i,s=t.vb||r.position.array,a=t.vb||r.normal&&r.normal.array,o=t.vb?t.vbstride:3;if(t.vblayout){if(!t.vblayout.position)return;i=t.vblayout.position.offset}else{if(!r.position)return;i=r.position.itemOffset||0}var h=0,u=t.vblayout?t.vblayout.normal:r.normal||null;u?h=u.offset||u.itemOffset||0:a=null,!u||3===u.itemSize&&4===u.bytesPerItem||(a=null);for(var c=t.vb?t.vb.length/t.vbstride:s.length,l=i,f=h,d=0;d<c;d++,l+=o,f+=o)p.set(s[l],s[l+1],s[l+2]),n&&p.applyMatrix4(n),a&&(y.set(a[f],a[f+1],a[f+2]),n&&y.applyMatrix3(v)),e(p,a?y:null,null,d)}function I(t,e){var n,r,i,s=t.attributes;g||(g=new S.a,x=new S.a,_=new S.a,b=new S.a,w=new S.a,k=new S.a);var a,o=t.vb||s.position.array,h=t.vb||s.normal&&s.normal.array,u=t.vb?t.vbstride:3;if(t.vblayout){if(!t.vblayout.position)return;a=t.vblayout.position.offset}else{if(!s.position)return;a=s.position.itemOffset||0}var c=0,l=t.vblayout?t.vblayout.normal:s.normal||null;l?c=l.offset||l.itemOffset||0:h=null,!l||3===l.itemSize&&4===l.bytesPerItem||(h=null);var f=t.ib||t.indices||(s.index?s.index.array:null);if(f){var d=t.offsets;d&&0!==d.length||(d=[{start:0,count:f.length,index:0}]);for(var m=0,p=d.length;m<p;++m)for(var y=d[m].start,v=d[m].count,z=d[m].index,E=y,M=y+v;E<M;E+=3){var A=(n=z+f[E])*u+a,I=(r=z+f[E+1])*u+a,T=(i=z+f[E+2])*u+a;if(g.x=o[A],g.y=o[A+1],g.z=o[A+2],x.x=o[I],x.y=o[I+1],x.z=o[I+2],_.x=o[T],_.y=o[T+1],_.z=o[T+2],h){var C=n*u+c,O=r*u+c,R=i*u+c;b.x=h[C],b.y=h[C+1],b.z=h[C+2],w.x=h[O],w.y=h[O+1],w.z=h[O+2],k.x=h[R],k.y=h[R+1],k.z=h[R+2],e(g,x,_,n,r,i,b,w,k,E/3)}else e(g,x,_,n,r,i,null,null,null,E/3)}}else{var P=t.vb?t.vb.length/t.vbstride:o.length/3;for(E=0;E<P;E++){A=(n=3*E)*u+a,I=(r=3*E+1)*u+a,T=(i=3*E+2)*u+a;if(g.x=o[A],g.y=o[A+1],g.z=o[A+2],x.x=o[I],x.y=o[I+1],x.z=o[I+2],_.x=o[T],_.y=o[T+1],_.z=o[T+2],h){C=n*u+c,O=r*u+c,R=i*u+c;b.x=h[C],b.y=h[C+1],b.z=h[C+2],w.x=h[O],w.y=h[O+1],w.z=h[O+2],k.x=h[R],k.y=h[R+1],k.z=h[R+2],e(g,x,_,n,r,i,b,w,k,E)}else e(g,x,_,n,r,i,null,null,null,E)}}}var T=n(8);function C(t,e){var n=[],r={},i=1;if(t.boundingBox||e){var s=(new T.a).copy(t.boundingBox||e).size();i=Math.max(s.x,Math.max(s.y,s.z))}var a=65536/i;return A(t,(function(t,e,i,s){var o=function(t,e){var n=0|t.x*a,i=0|t.y*a,s=0|t.z*a,o=r[n];o||(r[n]=o={});var h=o[i];h||(o[i]=h={});var u=h[s];return void 0===u&&(h[s]=u=e),u}(t,s);n[s]=o})),n}function O(t,e,n,r){if(!t.isLines&&!t.iblines){var i=C(t,n),s=function(t,e){var n=new Float32Array(3*M(t));return A(t,(function(t,e,r,i){n[3*i]=t.x,n[3*i+1]=t.y,n[3*i+2]=t.z}),e),n}(t,e),a={},o=[],h=new S.a,u=new S.a,c=new S.a,l=new S.a,f=new S.a;for(var d in I(t,(function(t,e,n,r,i,s){v(r,i,s),v(i,s,r),v(s,r,i)})),a)for(var m in a[d])o.push(parseInt(d)),o.push(parseInt(m));o.length>1&&(t.iblines=new Uint16Array(o.length),t.iblines.set(o))}function p(t,e){e.x=s[3*t],e.y=s[3*t+1],e.z=s[3*t+2]}function y(t,e,n,r){p(t,h),p(e,u),p(n,c),u.sub(h),c.sub(h),u.cross(c),r.copy(u).normalize()}function v(t,e,n){var s=i[t],h=i[e],u=i[n];if(s!==h&&s!==u&&h!==u){var c=!1;if(s>h){var d=s;s=h,h=d,c=!0}var m=a[s];if(m){var p=m[h];if(void 0===p)m[h]=c?-n-1:n;else{if(r)o.push(t),o.push(e);else{y(t,e,n,l),p<0?y(h,s,i[-p-1],f):y(s,h,i[p],f);var v=l.dot(f);Math.abs(v)<.25&&(o.push(t),o.push(e))}delete m[h]}}else a[s]={},a[s][h]=n}}}function R(t){var e=t.worker;var n={skipAssetCallback:t.skipAssetCallback};E.a.getItem(t,t.url,(function(n){e.postMessage({url:t.url,workerId:t.workerId,progress:.5}),function(t,e){try{e()}catch(e){t.raiseError(z.a.BAD_DATA,\\\"Unhandled exception while reading pack file\\\",{url:t.url,exception:e.toString(),stack:e.stack})}}(t,(function(){var i,s,a=new r.a(n),o=!1,h={estimateSizeOnly:!0,packNormals:void 0===t.packNormals||t.packNormals},u=a.getEntryCounts(),c=t.inMemory||[],l=0,f=function(t){var e=c[t>>5];return!(e&&e&1<<(31&t))};for(i=0;i<u;i++)f(i)&&(l+=(s=m(a,i,h))&&s.sharedBufferBytes||0);var d=l?new ArrayBuffer(l):null,p=0,y={packId:t.packId,workerId:t.workerId,progress:1,meshes:[],sharedBuffer:d},v=d?[d]:[];for(h={dstBuffer:d,startOffset:0,estimateSizeOnly:!1,packNormals:void 0===t.packNormals||t.packNormals},i=0;i<u;i++)h.startOffset=p,f(i)&&((s=m(a,i,h))?(p+=s.sharedBufferBytes||0,y.meshes[i]=s,t.createWireframe&&(O(s),s.iblines&&v.push(s.iblines.buffer))):(o||(e.raiseError(z.a.BAD_DATA,\\\"Unable to load geometry\\\",{url:t.url}),o=!0),e.postMessage(y)));e.postMessage(y,v)}))}),t.onFailureCallback,n)}function P(t){t.register(\\\"LOAD_GEOMETRY\\\",{doOperation:R})}n.d(e,\\\"register\\\",(function(){return P}))},function(t,e,n){\\\"use strict\\\";n.r(e);var r=n(4),i=n(9);function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\\\"value\\\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\\\"Cannot call a class as a function\\\")}(this,t),this._workers={}}var e,n,a;return e=t,(n=[{key:\\\"dispatch\\\",value:function(t){if(t.hasOwnProperty(\\\"operation\\\")){t.endpoint&&i.a.setEndpointAndApi(t.endpoint,t.api);var e=this._workers[t.operation];if(e){if(t.basePath=\\\"\\\",t.url){var n=t.url.lastIndexOf(\\\"/\\\");-1!=n&&(t.basePath=t.url.substr(0,n+1))}t.raiseError=function(){t.worker.raiseError.apply(t.worker,arguments)},t.onFailureCallback=r.a.defaultFailureCallback.bind(t),e.doOperation(t)}}}},{key:\\\"register\\\",value:function(t,e){this._workers[t]=e}},{key:\\\"unregister\\\",value:function(t){delete this._workers[t]}}])&&s(e.prototype,n),a&&s(e,a),t}());n(33).register(a),n(34).register(a),n(36).register(a),self.addEventListener(\\\"message\\\",(function(t){var e=t.data;e.worker=self,a.dispatch(e)}),!1),self.raiseError=function(t,e,n){self.postMessage({error:{code:t,msg:e,args:n}})},self.debug=function(t){self.postMessage({debug:1,message:t})}},function(t,e,n){\\\"use strict\\\";n.r(e);var r=n(3),i=[[1,5,4,7,3,2,6],[0,3,2,1,5,4,6],[0,3,2,6,5,4,6],[0,4,7,3,2,1,6],[0,3,2,1,-1,-1,4],[0,3,2,6,5,1,6],[0,4,7,6,2,1,6],[0,3,7,6,2,1,6],[0,3,7,6,5,1,6],[0,1,5,4,7,3,6],[0,1,5,4,-1,-1,4],[0,1,2,6,5,4,6],[0,4,7,3,-1,-1,4],[-1,-1,-1,-1,-1,-1,0],[1,2,6,5,-1,-1,4],[0,4,7,6,2,3,6],[2,3,7,6,-1,-1,4],[1,2,3,7,6,5,6],[0,1,5,6,7,3,6],[0,1,5,6,7,4,6],[0,1,2,6,7,4,6],[0,4,5,6,7,3,6],[4,5,6,7,-1,-1,4],[1,2,6,7,4,5,6],[0,4,5,6,2,3,6],[2,3,7,4,5,6,6],[1,2,3,7,4,5,6]];function s(){this.frustum=new r.Frustum,this.viewProj=new r.Matrix4,this.viewDir=[0,0,1],this.ar=1,this.viewport=new r.Vector3(1,1,1),this.areaConv=1,this.areaCullThreshold=1,this.eye=new r.Vector3,this.perspective=!1}var a,o;function h(t,e,n){return n.x=1&e?t.max.x:t.min.x,n.y=2&e?t.max.y:t.min.y,n.z=4&e?t.max.z:t.min.z,n}s.OUTSIDE=0,s.INTERSECTS=1,s.CONTAINS=2,s.CONTAINMENT_UNKNOWN=-1,s.prototype.reset=function(t,e){this.viewProj.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this.perspective=t.isPerspective,this.frustum.setFromMatrix(this.viewProj);var n=t.matrixWorldInverse.elements;this.ar=t.aspect,this.viewDir[0]=-n[2],this.viewDir[1]=-n[6],this.viewDir[2]=-n[10],this.eye.x=t.position.x,this.eye.y=t.position.y,this.eye.z=t.position.z,this.areaConv=t.clientWidth*t.clientHeight/4,this.cutPlanes=e},s.prototype.projectedArea=function(){var t=[new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3],e=new r.Box2;function n(t,e){var n=t.x,r=t.y,i=t.z,s=e.elements,a=s[3]*n+s[7]*r+s[11]*i+s[15];a<0&&(a=-a);var o=1/a;t.x=(s[0]*n+s[4]*r+s[8]*i+s[12])*o,t.y=(s[1]*n+s[5]*r+s[9]*i+s[13])*o}return function(r){if(r.empty())return 0;var i=this.viewProj;t[0].set(r.min.x,r.min.y,r.min.z),t[1].set(r.min.x,r.min.y,r.max.z),t[2].set(r.min.x,r.max.y,r.min.z),t[3].set(r.min.x,r.max.y,r.max.z),t[4].set(r.max.x,r.min.y,r.min.z),t[5].set(r.max.x,r.min.y,r.max.z),t[6].set(r.max.x,r.max.y,r.min.z),t[7].set(r.max.x,r.max.y,r.max.z);for(var s=0;s<8;s++)n(t[s],i);return e.makeEmpty(),e.setFromPoints(t),e.min.x<-1&&(e.min.x=-1),e.min.x>1&&(e.min.x=1),e.min.y<-1&&(e.min.y=-1),e.min.y>1&&(e.min.y=1),e.max.x>1&&(e.max.x=1),e.max.x<-1&&(e.max.x=-1),e.max.y>1&&(e.max.y=1),e.max.y<-1&&(e.max.y=-1),(e.max.x-e.min.x)*(e.max.y-e.min.y)}}(),s.prototype.projectedBoxArea=function(){for(var t,e=[],n=[],s=0;s<10;s++)e.push(new r.Vector3),n.push(new r.Vector3);function a(t,e){var n=t.x,r=t.y,i=t.z,s=e.elements,a=s[3]*n+s[7]*r+s[11]*i+s[15];a<0&&(a=-a);var o=1/a;t.x=(s[0]*n+s[4]*r+s[8]*i+s[12])*o,t.y=(s[1]*n+s[5]*r+s[9]*i+s[13])*o}return function(r,s){if(r.empty())return 0;var o,h=this.viewProj;if(this.perspective?(o=this.eye.x>=r.min.x?this.eye.x>r.max.x?2:1:0,this.eye.y>=r.min.y&&(o+=this.eye.y>r.max.y?6:3),this.eye.z>=r.min.z&&(o+=this.eye.z>r.max.z?18:9)):(o=this.viewDir[0]<=0?this.viewDir[0]<0?2:1:0,this.viewDir[1]<=0&&(o+=this.viewDir[1]<0?6:3),this.viewDir[2]<=0&&(o+=this.viewDir[2]<0?18:9)),13===o)return 4;var u,c=i[o][6];for(u=0;u<c;u++){var l=i[o][u];e[u].set((l+1)%4<2?r.min.x:r.max.x,l%4<2?r.min.y:r.max.y,l<4?r.min.z:r.max.z),a(e[u],h)}var f=0;if(s)for(f=(e[c-1].x-e[0].x)*(e[c-1].y+e[0].y),u=0;u<c-1;u++)f+=(e[u].x-e[u+1].x)*(e[u].y+e[u+1].y);else{var d=function(e,r){var i,s,a,o,h,u,c,l,f=e,d=n,m=function(t){switch(c){case 0:return t.x>=-1;case 1:return t.x<=1;case 2:return t.y>=-1;case 3:return t.y<=1}},p=function(t){d[l].x=t.x,d[l++].y=t.y},y=function(){var t,e;switch(c){case 0:t=-1,e=s.y+(a.y-s.y)*(t-s.x)/(a.x-s.x);break;case 1:t=1,e=s.y+(a.y-s.y)*(t-s.x)/(a.x-s.x);break;case 2:e=-1,t=s.x+(a.x-s.x)*(e-s.y)/(a.y-s.y);break;case 3:e=1,t=s.x+(a.x-s.x)*(e-s.y)/(a.y-s.y)}d[l].x=t,d[l++].y=e};for(c=0;c<4&&r>2;c++){for(l=0,o=m(s=f[r-1]),u=0;u<r;u++)h=m(a=f[u]),o?h?p(a):y():h&&(y(),p(a)),s=a,o=h;r=l,i=f,f=d,d=i}return t=r,f}(e,c);if(t>=3)for(f=(d[t-1].x-d[0].x)*(d[t-1].y+d[0].y),u=0;u<t-1;u++)f+=(d[u].x-d[u+1].x)*(d[u].y+d[u+1].y)}return Math.abs(.5*f)}}(),s.prototype.estimateDepth=function(t){var e=this.viewProj.elements,n=(t.min.x+t.max.x)/2,r=(t.min.y+t.max.y)/2,i=(t.min.z+t.max.z)/2,s=1/(e[3]*n+e[7]*r+e[11]*i+e[15]);return(e[2]*n+e[6]*r+e[10]*i+e[14])*s},s.prototype.intersectsBox=(a=new r.Vector3,o=new r.Vector3,function(t){for(var e=this.frustum.planes,n=0,r=0;r<6;r++){var i=e[r];a.x=i.normal.x>0?t.min.x:t.max.x,o.x=i.normal.x>0?t.max.x:t.min.x,a.y=i.normal.y>0?t.min.y:t.max.y,o.y=i.normal.y>0?t.max.y:t.min.y,a.z=i.normal.z>0?t.min.z:t.max.z,o.z=i.normal.z>0?t.max.z:t.min.z;var h=i.distanceToPoint(a),u=i.distanceToPoint(o);if(h<0&&u<0)return s.OUTSIDE;h>0&&u>0&&n++}return 6==n?s.CONTAINS:s.INTERSECTS});var u,c=function(t,e){u||(u=new r.Vector3);for(var n=0;n<8;n++){var i=h(t,n,u);if(a=e,!((s=i).x*a.x+s.y*a.y+s.z*a.z+a.w>1e-6))return!1}var s,a;return!0};s.prototype.boxOutsideCutPlanes=function(t){if(!this.cutPlanes)return!1;for(var e=0;e<this.cutPlanes.length;e++){var n=this.cutPlanes[e];if(c(t,n))return!0}return!1},n.d(e,\\\"register\\\",(function(){return p}));var l=6;function f(){var t,e,n,i,a,o,h,u,c,f=new r.Box3,d=1,m=new s,p=new r.Frustum,y=!0,v=0;function g(){return function(){var r,i;v=n;var a=new Int32Array(n),p=new Int32Array(e);for(r=0;r<n;r++)a[r]=r;c=0;var y,g,x,_,b=d/m.areaConv;for(r=0;r<n;r++)o[r]=0;for(r=0;r<e;r++){u[r]=0,g=f,x=void 0,_=void 0,x=r*l,_=t.boxes,g.min.x=_[x],g.min.y=_[x+1],g.min.z=_[x+2],g.max.x=_[x+3],g.max.y=_[x+4],g.max.z=_[x+5];var w=m.intersectsBox(f);w!==s.OUTSIDE&&(y=m.projectedBoxArea(f,w===s.CONTAINS))>b&&(o[t.packIds[r]]+=y,p[c++]=r)}for(Array.prototype.sort.call(a,(function(t,e){return o[e]-o[t]})),r=0;r<n&&o[a[r]]>0;r++)h[a[r]]=r;for(v=r,i=p.subarray(0,c),r=0;r<c;r++)u[i[r]]=h[t.packIds[i[r]]];return Array.prototype.sort.call(i,(function(t,e){return u[t]-u[e]})),{fragOrder:p,packOrder:a,pfVisible:v}}()}this.setFragments=function(r){t=r,e=r.packIds.length,i=1/0,a=-1/0;for(var s=0;s<e;s++){var l=t.packIds[s];i=Math.min(i,l),a=Math.max(a,l)}if((n=a+1)<0)return{error:\\\"Empty fragment list\\\"};o=new Float32Array(n),h=new Int32Array(n),u=new Float32Array(e),c=e,y=!0},this.calculateStep=function(){return y?(y=!1,g()):{}},this.setFrustum=function(t,e){return m.reset(t),y=y||!function(t,e){var n;for(n=0;n<6;n++){var r=t.planes[n],i=e.planes[n];if(r.constant!==i.constant)return!1;if(!r.normal.equals(i.normal))return!1}return!0}(p,m.frustum),p.copy(m.frustum),\\\"number\\\"==typeof e&&d!=e&&(d=e,y=!0),!0}}function d(t,e){t.lmv_timer=0;var n=t.lmv_calculator.calculateStep();if(n){var r=n.fragOrder?n.packOrder?[n.fragOrder.buffer,n.packOrder.buffer]:[n.fragOrder.buffer]:n.packOrder?[n.packOrder.buffer]:void 0;n.id=e,t.postMessage(n,r)}else t.lmv_timer=setTimeout(d,1,t,e)}function m(t){var e=t.worker,n=e.lmv_calculator;n||(e.lmv_calculator=n=new f),function(t){t.lmv_timer&&(clearTimeout(t.lmv_timer),t.lmv_timer=0)}(e),t.fragments&&function(t,e){e&&t.postMessage(e)}(e,n.setFragments(t.fragments)),t.camera&&(n.setFrustum(t.camera,t.pixelCullingThreshold),e.lmv_timer=setTimeout(d,1,e,t.id))}function p(t){t.register(\\\"CALCULATE_LOAD_ORDER\\\",{doOperation:m})}}]);\\n//# sourceMappingURL=70153eeae26430ab216c.worker.js.map\", __webpack_public_path__ + \"70153eeae26430ab216c.worker.js\");\n};","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./MemoryLimited.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./MemoryLimited.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./MemoryLimited.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".memory-limited-progressbar-loading{height:4px;background:linear-gradient(to right, #337ab7, #83aff7) !important;width:240px;border-radius:2px}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","//Simple shader for occlusion testing\n\nimport occlusion_vert from './shaders/occlusion_vert.glsl';\nimport occlusion_frag from './shaders/occlusion_frag.glsl';\n\n/* global THREE */\n\nexport let OcclusionShader = {\n\n    uniforms: {\n        \"color\": { type: \"v3\", value: new THREE.Vector3(0, 0, 0) },\n        \"opacity\": { type: \"f\", value: 1.0 }\n    },\n\n    rawShader: true,\n    \n    vertexShader: occlusion_vert,\n    fragmentShader: occlusion_frag\n};\n","'use strict';\n\nimport { OcclusionShader } from \"./OcclusionShader\";\n\n/* global THREE, Autodesk */\n\nvar avp = Autodesk.Viewing.Private;\nvar _white = new THREE.Color().setRGB(1, 1, 1);\n\nexport function OcclusionCulling() {\n\n    var _renderer;\n    var _context;   // RenderContext for the viewer\n    var _camera;\n\n    // Occlusion test variables\n    var _occlusionMaterials = [ [], [] ];\n    var _occlusionTarget = null;\n    var _occlusionTest = null;\n    var _unitCubeVerts = null;\n    var _unitCubeIndices = null;\n    var _occlusionScene = null;\n\n    //Rendering options - from the render context\n    var _settings;\n\n    //TODO: hide this once there is a way\n    //to obtain the current pipeline configuration\n    this.settings = _settings;\n\n    this.initialize = function (glrenderer, context) {\n\n        if (!glrenderer) {\n            avp.logger.error(\"You need a gl context use occlusion culling. Things will go downhill from here.\", av.errorCodeString(av.ErrorCodes.BROWSER_WEBGL_NOT_SUPPORTED));\n            return;\n        }\n\n        _renderer = glrenderer;\n        _context = context;\n        _settings = context.settings;\n\n    };\n\n    function destroyOcclusionTarget() {\n        if (_occlusionTarget) {\n            _occlusionTarget.dispose();\n            _occlusionTarget = null;\n        }\n\n        _occlusionTest = null;\n    }\n\n    this.onResize = function () {\n        destroyOcclusionTarget();\n    };\n\n    function createOcclusionTarget() {\n        _occlusionTarget = new THREE.WebGLRenderTarget(\n            _settings.deviceWidth, _settings.deviceHeight,\n            {  minFilter: THREE.NearestFilter,\n                magFilter: THREE.NearestFilter,\n                format: THREE.RGBAFormat,\n                stencilBuffer: false\n            });\n        _occlusionTarget.generateMipmaps = false; \n        _occlusionTarget.shareDepthFrom = _context.getColorTarget();\n    }\n\n    function addVerts(bboxVerts, toVerts, boxes, from) {\n        // Eight corners of the box\n        bboxVerts[toVerts++] = boxes[from];\n        bboxVerts[toVerts++] = boxes[from + 1];\n        bboxVerts[toVerts++] = boxes[from + 2];\n\n        bboxVerts[toVerts++] = boxes[from + 3];\n        bboxVerts[toVerts++] = boxes[from + 1];\n        bboxVerts[toVerts++] = boxes[from + 2];\n\n        bboxVerts[toVerts++] = boxes[from];\n        bboxVerts[toVerts++] = boxes[from + 4];\n        bboxVerts[toVerts++] = boxes[from + 2];\n\n        bboxVerts[toVerts++] = boxes[from + 3];\n        bboxVerts[toVerts++] = boxes[from + 4];\n        bboxVerts[toVerts++] = boxes[from + 2];\n\n        bboxVerts[toVerts++] = boxes[from];\n        bboxVerts[toVerts++] = boxes[from + 1];\n        bboxVerts[toVerts++] = boxes[from + 5];\n\n        bboxVerts[toVerts++] = boxes[from + 3];\n        bboxVerts[toVerts++] = boxes[from + 1];\n        bboxVerts[toVerts++] = boxes[from + 5];\n\n        bboxVerts[toVerts++] = boxes[from];\n        bboxVerts[toVerts++] = boxes[from + 4];\n        bboxVerts[toVerts++] = boxes[from + 5];\n\n        bboxVerts[toVerts++] = boxes[from + 3];\n        bboxVerts[toVerts++] = boxes[from + 4];\n        bboxVerts[toVerts++] = boxes[from + 5];\n        return toVerts;        \n    }\n\n    function addIndices(bboxIndices, toIndices, indexBase) {\n        // -y\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 1;\n        bboxIndices[toIndices++] = indexBase + 5;\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 5;\n        bboxIndices[toIndices++] = indexBase + 4;\n\n        // -z\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 2;\n        bboxIndices[toIndices++] = indexBase + 3;\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 3;\n        bboxIndices[toIndices++] = indexBase + 1;\n\n        // -x\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 4;\n        bboxIndices[toIndices++] = indexBase + 6;\n        bboxIndices[toIndices++] = indexBase;\n        bboxIndices[toIndices++] = indexBase + 6;\n        bboxIndices[toIndices++] = indexBase + 2;\n\n        // +z\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 6;\n        bboxIndices[toIndices++] = indexBase + 4;\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 4;\n        bboxIndices[toIndices++] = indexBase + 5;\n\n        // +x\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 5;\n        bboxIndices[toIndices++] = indexBase + 1;\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 1;\n        bboxIndices[toIndices++] = indexBase + 3;\n\n        // +y\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 3;\n        bboxIndices[toIndices++] = indexBase + 2;\n        bboxIndices[toIndices++] = indexBase + 7;\n        bboxIndices[toIndices++] = indexBase + 2;\n        bboxIndices[toIndices++] = indexBase + 6;\n\n        return toIndices;\n    }\n\n    function createBBoxGeometry(boxes, fragIds, start, length) {\n        var bboxVerts = new Float32Array(length * 24);\n        var bboxIndices = new Uint16Array(length * 36);\n        var toVerts = 0, toIndices = 0, indexBase = 0;\n        length += start;\n        for ( ; start < length; ++start, indexBase += 8) {\n            // Copy indices and vertices for the box\n            toIndices = addIndices(bboxIndices, toIndices, indexBase);\n            toVerts = addVerts(bboxVerts, toVerts, boxes, fragIds[start] * 6);\n        }\n\n        var geometry = new THREE.BufferGeometry();\n        geometry.addAttribute('position', new THREE.BufferAttribute(bboxVerts, 3));\n        geometry.addAttribute('index', new THREE.BufferAttribute(bboxIndices, 1));\n        geometry.streamingDraw = true;\n        geometry.streamingIndex = true;\n        return geometry;\n    }\n\n    function createInstancedBBoxGeometry(boxes, fragIds, start, length) {\n        // Don't interleave the min and max vertices.\n        var minVerts = new Float32Array(length * 3);\n        var scaleVerts = new Float32Array(length * 3);\n        var toVerts = 0;\n        var end = length + start;\n        for ( ; start < end; ++start) {\n            var from = fragIds[start] * 6;\n            scaleVerts[toVerts] = boxes[from + 3] - boxes[from];\n            minVerts[toVerts++] = boxes[from++];\n            scaleVerts[toVerts] = boxes[from + 3] - boxes[from];\n            minVerts[toVerts++] = boxes[from++];\n            scaleVerts[toVerts] = boxes[from + 3] - boxes[from];\n            minVerts[toVerts++] = boxes[from++];\n        }\n\n        var geometry = new THREE.BufferGeometry();\n        geometry.addAttribute('position', new THREE.BufferAttribute(_unitCubeVerts, 3));\n        geometry.addAttribute('index', new THREE.BufferAttribute(_unitCubeIndices, 1));\n        var minAttr = new THREE.BufferAttribute(minVerts, 3);\n        minAttr.divisor = 1;\n        var scaleAttr = new THREE.BufferAttribute(scaleVerts, 3);\n        scaleAttr.divisor = 1;\n        geometry.addAttribute('instOffset', minAttr);\n        geometry.addAttribute('instScaling', scaleAttr);\n        geometry.numInstances = length;\n        geometry.streamingDraw = true;\n        geometry.streamingIndex = true;\n        return geometry;\n    }\n\n    function createUnitCube() {\n        // Create unit cube vertex and index buffers\n        _unitCubeVerts = new Float32Array(24);\n        _unitCubeIndices = new Uint16Array(36);\n        addIndices(_unitCubeIndices, 0, 0);\n        addVerts(_unitCubeVerts, 0, [0, 0, 0, 1, 1, 1], 0);\n    }\n\n    // Create the occlusion materials for testing. The materials can test one pack file\n    // in each color component, R, G, B, or A. The colors are setup so we can blend\n    // each component separately using D = D * S. The target is initialized to opaque\n    // white and a 0 in a component means a pixel was drawn. Doing it this way\n    // makes it easier to see the results if we need to look at the bitmap.\n    // The colors and alphas are ordered to match the byte ordering in the pixel.\n    var colors = [\n        [ 0, 1, 1],\n        [ 1, 0, 1],\n        [ 1, 1, 0],\n        [ 1, 1, 1]\n    ];\n    var alphas = [1, 1, 1, 0];\n    function createOcclusionMaterials(length, instanced) {\n        var useInstancing = !!instanced;\n        for (var i = _occlusionMaterials[instanced].length; i < length; ++i) {\n            var occlusionMaterial = avp.createShaderMaterial(OcclusionShader);\n            occlusionMaterial.useInstancing = useInstancing;\n            occlusionMaterial.depthWrite = false;\n            occlusionMaterial.uniforms.color.value.set(colors[i][0], colors[i][1], colors[i][2]);\n            occlusionMaterial.uniforms.opacity.value = alphas[i];\n            occlusionMaterial.defaultAttributeValues.instRotate = [1, 0, 0, 0];\n            occlusionMaterial.blending = THREE.CustomBlending;\n            occlusionMaterial.blendDst = THREE.SrcColorFactor;\n            occlusionMaterial.blendSrc = THREE.ZeroFactor;\n            occlusionMaterial.blendEquation = THREE.AddEquation;\n            occlusionMaterial.transparent = true;\n            _occlusionMaterials[instanced][i] = occlusionMaterial;\n        }\n    }\n\n    // Return whether the fragment ids are occluded\n    this.occlusionTest = function(boxes, threshold, fragIds, useInstancing, packIds) {\n        if (!fragIds || fragIds.length <= 0 || fragIds.length > 4)\n            return Promise.reject({error : \"fragIds invalid. Must be a nonempty array of fragment id arrays with length <= 4\"});\n\n        var counts = [0, 0, 0, 0];\n        var visibleCount = 0;\n        useInstancing = (useInstancing && _renderer.supportsInstancedArrays()) ? 1 : 0;\n        if (!_occlusionMaterials[useInstancing] || _occlusionMaterials[useInstancing].length < fragIds.length)\n            createOcclusionMaterials(fragIds.length, useInstancing);\n\n        if (useInstancing && !_unitCubeVerts)\n            createUnitCube();\n\n        // Create a scene for the boxes\n        if (!_occlusionScene)\n            _occlusionScene = new THREE.Scene();\n        _occlusionScene.frustumCulled = false;\n\n        // Be careful and don't create buffers to large for short indices\n        // 8 vertices per fragment box out of 64K vertices max means we\n        // can't do more than 8K fragments per buffer. Cut this in half,\n        // and only allow 4096 fragments per buffer. If we are instancing\n        // then the buffers only hold a single point per instance, so\n        // allow 32K fragments.\n        var maxSize = useInstancing ? 32768 : 4096;\n        var i;\n        for (i = 0; i < fragIds.length; ++i ) {\n            var fragIdList = fragIds[i];\n            if (fragIdList && fragIdList.length > 0) {\n                counts[i] = threshold;\n                ++visibleCount;\n                var occlusionMaterial = _occlusionMaterials[useInstancing][i];\n                var length = fragIdList.length;\n                var start = 0, end;\n                for ( ; start < length; start += end) {\n                    end = Math.min(maxSize, length - start);\n\n                    // Build buffer for the fragment boxes\n                    var geometry = useInstancing ? createInstancedBBoxGeometry(boxes, fragIdList, start, end)\n                        : createBBoxGeometry(boxes, fragIdList, start, end);\n                    var mesh = new THREE.Mesh(geometry, occlusionMaterial);\n                    mesh.frustumCulled = false;\n                    _occlusionScene.add(mesh);\n                }\n            }\n        }\n\n        // Clear render target\n        if (!_occlusionTarget)\n            createOcclusionTarget();\n        _renderer.setClearColor(_white, 1);\n\n        // Render the scene\n        _renderer.setRenderTarget(_occlusionTarget);\n        _renderer.clear(true, false, false);\n        _renderer.render(_occlusionScene, _camera, _occlusionTarget, false, null);\n\n        // Some cleanup\n        _renderer.clearBlend();\n        _occlusionScene.children.forEach(function(mesh) {\n            mesh.geometry.dispose();\n        });\n        _occlusionScene.remove.apply(_occlusionScene, _occlusionScene.children); // Remove all children from scene\n\n        // Get the result.\n        if (!_occlusionTest)\n            _occlusionTest = new Uint8Array(_settings.deviceWidth * 4 * _settings.deviceHeight);\n        _renderer.readRenderTargetPixels(_occlusionTarget, 0, 0, _settings.deviceWidth, _settings.deviceHeight, _occlusionTest);\n\n        // Look for pixels.\n        switch (fragIds.length) {\n        case 1:\n            for (i = _occlusionTest.length; visibleCount > 0 && (i -= 4) >= 0; ) {\n                if (!_occlusionTest[i]) {\n                    counts[0] -= 1;\n                    visibleCount -= !counts[0];\n                }\n            }\n            return Promise.resolve([counts[0] <= 0]);\n        case 2:\n            for (i = _occlusionTest.length; visibleCount > 0 && (i -= 4) >= 0; ) {\n                if (!_occlusionTest[i]) {\n                    counts[0] -= 1;\n                    visibleCount -= !counts[0];\n                }\n                if (!_occlusionTest[i + 1]) {\n                    counts[1] -= 1;\n                    visibleCount -= !counts[1];\n                }\n            }\n            return Promise.resolve([counts[0] <= 0, counts[1] <= 0]);\n        case 3:\n            for (i = _occlusionTest.length; visibleCount > 0 && (i -= 4) >= 0; ) {\n                if (!_occlusionTest[i]) {\n                    counts[0] -= 1;\n                    visibleCount -= !counts[0];\n                }\n                if (!_occlusionTest[i + 1]) {\n                    counts[1] -= 1;\n                    visibleCount -= !counts[1];\n                }\n                if (!_occlusionTest[i + 2]) {\n                    counts[2] -= 1;\n                    visibleCount -= !counts[2];\n                }\n            }\n            return Promise.resolve([counts[0] <= 0, counts[1] <= 0, counts[2] <= 0]);\n        case 4:\n            for (i = _occlusionTest.length; visibleCount > 0 && (i -= 4) >= 0; ) {\n                if (!_occlusionTest[i]) {\n                    counts[0] -= 1;\n                    visibleCount -= !counts[0];\n                }\n                if (!_occlusionTest[i + 1]) {\n                    counts[1] -= 1;\n                    visibleCount -= !counts[1];\n                }\n                if (!_occlusionTest[i + 2]) {\n                    counts[2] -= 1;\n                    visibleCount -= !counts[2];\n                }\n                if (!_occlusionTest[i + 3]) {\n                    counts[3] -= 1;\n                    visibleCount -= !counts[3];\n                }\n            }\n            return Promise.resolve([counts[0] <= 0, counts[1] <= 0, counts[2] <= 0, counts[3] <= 0]);\n        }\n    };\n\n    this.dtor = function () {\n\n        if (_renderer) {\n            _renderer.setRenderTarget(null);\n        }\n\n        destroyOcclusionTarget();\n    };\n\n    //Required for switching camera for stereo rendering\n    this.setCamera = function (camera) {\n        _camera = camera;\n    };\n}\n","export const PAGEOUT_SUCCESS = 0;\nexport const PAGEOUT_FAIL = 1;\nexport const PAGEOUT_NONE = 2;","/* global THREE, Autodesk */\n\nvar _tmpBox = new THREE.Box3();\nvar avp = Autodesk.Viewing.Private;\nvar MESH_RENDERFLAG = avp.MeshFlags.MESH_RENDERFLAG;\n\nexport const RENDER_FLAGS = [\n    MESH_RENDERFLAG,  // RENDER_NORMAL\n    0x8000,           // RENDER_HIDDEN\n    0x4000,           // RENDER_HIGHLIGHTED\n    0x2000            // RENDER_SHADOWMAP\n];\n\nexport function RenderBatchML(frags, fragOrder, start, count) {\n    avp.RenderBatch.call(this, frags, fragOrder, start, count);\n\n    // visibility flag for scene batch. -1: not check yet, 0: not visible, 1: visible\n    // this is useful when travserse the same batch again in a re-render without reset the iterator, \n    // that won't apply visibility again.\n    this.visibleStats = 0;\n}\n\nRenderBatchML.prototype = Object.create(avp.RenderBatch.prototype);\nRenderBatchML.prototype.constructor = RenderBatchML;\n\nRenderBatchML.prototype.resetVisStatus = function() {\t\n    this.visibleStats = 0;\t\n};\n\nRenderBatchML.prototype.forEach = function(callback, drawMode, includeEmpty) {\n\n    var indices = this.getIndices();\n\n    var frags = this.frags;\n    var sortByShaderPossible = !this.sortByShaderDone;\n    var rflag = drawMode;\n    if (drawMode === MESH_RENDERFLAG) {\n        rflag = this._rflag;    // Set by ModelML.nextBatch()\n        ++frags._renderCount;\n    }\n\n    //var showPF = (frags.showPF === undefined ) ? -1 : frags.showPF;\n\n    for (var i=this.start, iEnd=this.lastItem; i<iEnd; i++) {\n        var idx = indices ? indices[i] : i;\n        var m = frags.getVizmesh(idx,this.renderImportance,true);\n        if (sortByShaderPossible && (!m || !m.material || !m.material.program || m.geometry_proxy))\n            sortByShaderPossible = false;\n\n        // If already traversed for rendering, ignore this fragment.\n        if ((frags.isFlagSet(idx, avp.MeshFlags.MESH_TRAVERSED)) && (drawMode == MESH_RENDERFLAG)) {\n            continue;\n        }\n\n        // for debug only, if the PF is to be displayed, then check if this fragment is in the designated PF\n        //if ((showPF !== -1) && (showPF !== frags.fragments.packIds[idx])) {\n        //    continue;\n        //}\n\n        // If geometry of this fragment is required...\n        if (!includeEmpty && (rflag && frags.isFlagSet(idx, rflag))) {\n            \n            if (!m.geometry) {\n                // Require geometry only when we truly need it, so that it is available on later runs.\n                // Note that m.geometry will usually be null here.\n                m.geometry = this._requireGeometry(idx);\n                if (idx < this.drawOrderRender)\n                    this.drawOrderRender = idx;\n                \n                if ( !m.geometry && m.geometry_proxy )\n                    m.geometry = m.geometry_proxy;\n            }\n            // geometry may now be set, if retrieved or a proxy box is to be displayed.\n            if (m.geometry) {\n                // Set traversed flag for this fragment. Don't set it if we are drawing\n                // fragments out of order. Then they will be drawn again over anything\n                // that might have been drawn.\n                var drawn = drawMode == MESH_RENDERFLAG && frags.isFlagSet(idx, avp.MeshFlags.MESH_DRAWN);\n                if (drawMode == MESH_RENDERFLAG) {\n                    if (this.drawOrderRender == undefined || idx < this.drawOrderRender)\n                        frags.setFlagFragment(idx, avp.MeshFlags.MESH_DRAWN, true);\n                    else {\n                        continue;       // Don't draw out of order\n                    }\n                }\n\n                // For fragments that may be paged out, check if this fragment was the\n                // last one \n                // Only record candidates for paging if it is enabled. \n                if (!drawn) {\n\n                    var mtl = frags.getMaterial(idx);\n                    // no material means the object is not actually loaded yet, it's a box proxy, so should be ignored.\n                    if ( mtl ) {\n                        frags._pagingProxy.onGeomTraversed(m.geometry, mtl.transparent);\n                    }\n\n                }\n\n            }\n        }\n\n        // if drawMode is given, iterate vizflags that match\n        if ((includeEmpty || (m && m.geometry)) &&\n            (!rflag || frags.isFlagSet(idx, rflag))) {\n\n            callback(m, idx);\n        }\n    }\n\n    //If all materials shaders are already available, we can sort by shader\n    //to minimize shader switches during rendering. This sort will only\n    //execute once and changing materials later will break the sorted order again.\n    if (sortByShaderPossible)\n        this.sortByShader();\n};\n\n/**\n * Sets the MESH_RENDERFLAG for a single fragment, depeneding on the drawMode and the other flags of the fragment.\n * @param {number} drawMode - One of the modes defined in Viewer3DImpl.js, e.g. RENDER_NORMAL\n * @param {number} vizflags - vizflags bitmask.\n * @param {number} idx - index into vizflags, for which we want to determine the MESH_RENDERFLAG.\n * @param {bool} hideLines\n * @param {bool} hidePoints\n * @returns {bool} Final, evaluated visibility.\n */\nfunction evalVisibility(drawMode, vizflags, idx, hideLines, hidePoints, rflag) {\n\n    var v;\n    var vfin = vizflags[idx] & ~rflag;\n    switch (drawMode) {\n\n        case avp.RenderFlags.RENDER_HIDDEN:\n                 v = !(vfin & avp.MeshFlags.MESH_VISIBLE); //visible (bit 0 on)\n                 break;\n        case avp.RenderFlags.RENDER_HIGHLIGHTED:\n                 v = (vfin & avp.MeshFlags.MESH_HIGHLIGHTED); //highlighted (bit 1 on)\n                 break;\n        default:\n                 v = ((vfin & (avp.MeshFlags.MESH_VISIBLE|avp.MeshFlags.MESH_HIGHLIGHTED|avp.MeshFlags.MESH_HIDE)) == 1); //visible but not highlighted, and not a hidden line (bit 0 on, bit 1 off, bit 2 off)\n                 break;\n    }\n\n    if (hideLines) {\n        var isLine = (vfin & (avp.MeshFlags.MESH_ISLINE | avp.MeshFlags.MESH_ISWIDELINE));\n        v = v && !isLine;\n    }\n\n    if (hidePoints) {\n        var isPoint = (vfin & avp.MeshFlags.MESH_ISPOINT);\n        v = v && !isPoint;\n    }\n\n    //Store evaluated visibility into bit 7 of the vizflags\n    //to use for immediate rendering\n    vizflags[idx] = vfin | (v ? rflag : 0);\n\n    return v;\n}\n\n\n/**\n * Checks if fragment is outside the frustum.\n * @param {bool} checkCull - indicates if culling is enabled. If false, return value is always false.\n * @param {Autodesk.Viewing.Private.FrustumIntersector} frustum\n * @param {FragmentList} frags\n * @param {number} idx - index into frags.\n * @returns {bool} True if the given fragment is outside the frustum and culling is enabled.\n */\nfunction evalCulling(checkCull, frustum, frags, idx) {\n\n    var culled = false;\n\n    frags.getWorldBounds(idx, _tmpBox);\n    var intersects = frustum.intersectsBox(_tmpBox);\n    if (checkCull && (intersects === avp.FrustumIntersector.OUTSIDE)) {\n        culled = true;\n    }\n    else if (frags._pagingProxy.pixelCullingEnable()) {\n        // Check whether the projected area is smaller than a threshold,\n        // if yes, do not render it.\n        // ??? This may impact rendering that need to profile further.\n        var area = frustum.projectedBoxArea(_tmpBox, intersects === avp.FrustumIntersector.CONTAINS);\n        area *= frustum.areaConv;\n        if (area < frags._pagingProxy.pixelCullingThreshold()) {\n            culled = true;\n        }\n    }\n\n\n    return culled;\n}\n\n\nRenderBatchML.prototype.applyVisibility = function() {\n\n    var frags, vizflags, frustum, drawMode, rflag, fragIdCb, checkCull, allHidden, done;\n\n    function applyVisCB(m, idx) {\n        if (!m && frags.useThreeMesh) {\n            if (fragIdCb)\n                fragIdCb(idx);\n            return;\n        }\n\n        var culled = done || evalCulling(checkCull, frustum, frags, idx);\n\n        if (culled) {\n            if (m) {\n                m.visible = false;\n            } else {\n                THREE.warn(\"Unexpected null mesh\");\n            }\n            vizflags[idx] = vizflags[idx] & ~rflag;\n\n            // Record culled geometries for paging out.\n            // This fragment is culled, then move its geometry to culled geometry list.\n            var geomId = frags.geomids[idx];\n            var geometry = frags.geoms.getGeometry(geomId);\n\n            frags._pagingProxy.onGeomCulled(geometry);\n                \n            return;    \n        }\n\n        var v = evalVisibility(drawMode, vizflags, idx, frags.linesHidden,\n            frags.pointsHidden, rflag);\n        \n        if (m)\n            m.visible = !!v;\n        \n        allHidden = allHidden && !v;\n    }\n\n    function fragIdCallback(fragId) {\n        var packId = frags.fragments.packIds[fragId];\n        frags._pagingProxy.addGeomPackMissingLastFrame(packId);\n    }\n\n    return function(drawModeIn, frustumIn) {\n\n        //Used when parts of the same scene\n        //have to draw in separate passes (e.g. during isolate).\n        //Consider maintaining two render queues instead if the\n        //use cases get too complex, because this approach\n        //is not very scalable as currently done (it traverses\n        //the entire scene twice, plus the flag flipping for each item).\n\n        allHidden = true;\n        done      = false;\n        frustum   = frustumIn;\n        drawMode  = drawModeIn;\n        rflag = RENDER_FLAGS[drawMode] || RENDER_FLAGS[0];\n\n        frags = this.frags;\n\n        //Check if the entire render batch is contained inside\n        //the frustum. This will save per-object checks.\n        var bbox = (drawMode === avp.RenderFlags.RENDER_HIDDEN) ? this.getBoundingBoxHidden() : this.getBoundingBox();\n        var containment = frustum.intersectsBox(bbox);\n        if (containment === avp.FrustumIntersector.OUTSIDE)\n            done = true; //nothing to draw\n\n        checkCull = (containment !== avp.FrustumIntersector.CONTAINS);\n\n        if (frags._pagingProxy.pixelCullingEnable()) {\n    \n            // if this scene get culled by projected area pixel, \n            // can bail out earlier. \n            var area = this.renderImportance;\n            if (area == 0) {\n                area = frustum.projectedBoxArea(bbox, !checkCull);\n            }\n            area *= frustum.areaConv;\n            if (area < frags._pagingProxy.pixelCullingThreshold()) {\n                done = true;\n            }           \n        }\n\n        vizflags = this.frags.vizflags;\n        \n        // There is another version of forEach: forEachNoMesh which won't be used in this case.\n        // Also, it seems even in RenderBatch's implementation, forEachNoMesh logic never get called (on 3d or 2d).\n        this.forEach(applyVisCB, null, fragIdCallback);\n\n        return allHidden;\n    };\n}();\n\n// Requests the geometry of a fragment for loading, unless it is already in memory or the request limit is reached.\n// If already in memory, it just returns the geometry directly.\nRenderBatchML.prototype._requireGeometry = function (fragId) {\n    var frags = this.frags;\n    var geom = null;\n    var geomId = frags.geomids[fragId];\n    if (geomId >= 0) {\n        // A valid geometry id, then get corresponding geometry\n        geom = frags.geoms.getGeometry(geomId);\n    }\n\n    if (geom == null) {\n\n        // Request to load this geometry.\n        var packId = frags.fragments.packIds ? frags.fragments.packIds[fragId] : fragId;\n\n        frags._pagingProxy.loadPackFile(packId);\n    }\n\n    return geom;\n};\n","import { OcclusionCulling } from \"../../render/OcclusionCulling\";\nimport { PAGEOUT_SUCCESS } from \"../../render/pageoutStatus\";\nimport { RenderBatchML } from '../../render/RenderBatchML';\n\nvar LOAD_ORDER_TIMEOUT = 100;       // 100 msec delay to ask for sorted load order\n\nvar PAST_LAST_PACK = 1.0e10;        // Large number past last pack id\n\n// occlusion testing state.\nvar NO_OCCLUSION_TESTING = 0;\nvar QUEUE_OCCLUSION_TESTING = 1;\nvar PERFORM_OCCLUSION_TESTING = 2;\n\nvar MEGA = 1024 * 1024;\n\n// This three constants are used to asjust the memory limit if\n// the overhead is too large to allow any geometry to be loaded.\n// We start with MIN_OVERHEAD_FACTOR * total geometry + overhead size\n// and clip it to the range [MIN_OVERHEAD_LIMIT, MAX_OVERHEAD_LIMIT]\nvar MIN_OVERHEAD_FACTOR = 0.1;  // Factor of total size\nvar MIN_OVERHEAD_LIMIT = 10;\nvar MAX_OVERHEAD_LIMIT = 50;\n\nconst av = Autodesk.Viewing;\nconst avp = av.Private;\n\nvar setSettingsDisplay = function(api, display) {\n    var panel = api.getSettingsPanel();\n    if (panel) {\n        var checkbox = panel.getControl(panel.groundShadowChkBoxId).checkElement;\n        var row = checkbox.parentElement.parentElement.parentElement;\n        row.style.display = display;\n        checkbox = panel.getControl(panel.groundReflectionChkBoxId).checkElement;\n        row = checkbox.parentElement.parentElement.parentElement;\n        row.style.display = display;\n    }\n};\n\n// Paging proxy object to manage on demand loading and paging logic,\n// that is specific to the model loaded by svf loader.\nexport var SvfPagingProxy = function(loader, options) {\n\n    var _extendObject = function(target, source) {\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n    };\n\n    var _loader = loader;\n\n    // Options of control memory management.\n    this.options = {};\n    _extendObject(this.options, options);\n\n    this.options.debug = {\n        // Increase the max page out size. On slow (mobile) devices the scene\n        // traversal is a bottle neck and making this larger helps load more\n        // pack files earlier in the load.\n        maxPageOutSize: 195,                                // Max we will page out in one go\n        pixelCullingEnable: this.options.onDemandLoading,   // Useful with on demand loading\n        pixelCullingThreshold: avp.PIXEL_CULLING_THRESHOLD,\n\n        occlusionThreshold: 1,\n        occlusionTestThreshold: 1,\n        startOcclusionTestingPackCount: 8,\n        testPackfileCount: 4,\n        useOcclusionInstancing: true,\n        automaticRefresh: true,\n        boxProxyMaxCount: 0, // show this many boxes during a render\n        boxProxyMinScreen: 0.4 // if entire render batch is >= 1/10 of the screen in area\n    };\n    _extendObject(this.options.debug, options.debug);\n\n\n    // If reach limit, then stop loading any further pack files.\n    this.reachLimit    = false;\n    // the geom ids map, is a dictionary that key is the geometry id,\n    // and value is an index to an array that record the traversed count\n    // for that geometry.\n    // ??? The reason that doesn't use the object to record the count but\n    // ??? use the indirect arry is due to PERFORMANCE. \n    // ??? Because, if the JS object properties' value are changed frequently,\n    // ??? the performance will hurt a whole lot.\n    this.geomidsmap    = {};\n    this.geomTravCount = [];\n\n    // Variables for recording loaded or loading or queued pack files.\n    this.loadedPacks = {};      // Staticly bound to functions, replace this object\n    this.loadedPackfileCount = 0;\n    this.memoryOverhead = 0;\n    this.loadingPacks = {};\n    this.loadingPacksSize = 0;\n    this.queuedPacks = [];\n    this.packQueuedMap = {};\n    this.queuedPacksSize = 0;\n    this.occludedPacks = [];\n    this.occlusionCulledCount = 0;\n    this.packsPagedOut = 0;\n\n    this.traversedCounter = 0;\n    this.transparentCounter = 0;\n    this.resetCount = 0;\n    this.invalidateCount = -1;\n    this.moving = 0;\n\n    // read from options, and passed by the loader.\n    this.geompacks = _loader.svf.geompacks;\n    this.geommap = _loader.geommap;\n    this.totalGeomSize = this.options.totalGeomSize;\n    this.overheadSize = this.options.overheadSize;\n    // Adjust the limit if the overhead is too large.\n    this.minMemoryLimit = Math.min(Math.max(this.totalGeomSize * MIN_OVERHEAD_FACTOR,\n        MIN_OVERHEAD_LIMIT), MAX_OVERHEAD_LIMIT) + this.overheadSize;\n\n    this.lastPageOut = -1;\n    this.pageOutResetCounter = -1;\n\n    var _resumeNextFrame = false;\n\n    // Variables used to handle the load order from the worker\n    var _nextOrderToLoad = 0;       // Next list of fragments to load\n    var _nextFragToLoad = 0;        // Next fragment in load order\n    var _loadOrderId = 0;           // Last load order request\n    var _fragOrder = [];            // Fragment order - allow multiple ordered lists\n    var _packOrder;                 // Pack file order\n    var _pfVisible = -1;            // Number of visible pack files.\n    var _packOrderMap = [];         // Order of pack files in pack order\n    var _firstReset = true;         // Track first time we ask for the load order\n    var _lastResult = null;         // Last load order result\n    var _loadOrderTimer = 0;        // Timer used to keep down traffic to load order worker\n    var _pageOutStillPossible = true;// More possible to page out\n    var _loadDoneSent = false;      // Load done has been sent\n\n    var _renderCount;\n    var _visibleIds;\n    var _visibleWidth;\n    var _visibleHeight;\n\n    var _occlusionCulling = new OcclusionCulling();\n    _occlusionCulling.initialize(_loader.viewer3DImpl.glrenderer(), _loader.viewer3DImpl.renderer());\n\n    var loadMissingGeometryHandler = function(e) {\n        // e.unloadPackFiles is for debugging only\n        this.resetCanPageOut(!!e.debug.unloadPackFiles, e.delay != false, false);\n    }.bind(this);\n    _loader.viewer3DImpl && _loader.viewer3DImpl.api.addEventListener(av.LOAD_MISSING_GEOMETRY, loadMissingGeometryHandler);\n\n    this.dtor = function() {\n        this.removeHooks();\n\n        _occlusionCulling && _occlusionCulling.dtor();\n        _occlusionCulling = undefined;\n\n        _loader.viewer3DImpl && _loader.viewer3DImpl.api.removeEventListener(av.LOAD_MISSING_GEOMETRY, loadMissingGeometryHandler);\n    };\n\n    this.pixelCullingEnable = function() {\n        return this.options.debug.pixelCullingEnable;\n    };\n\n    this.pixelCullingThreshold = function() {\n        return this.options.debug.pixelCullingThreshold;\n    };\n\n    this.getMemoryLimit = function() {\n        return Math.max(this.minMemoryLimit, this.options.limit);\n    };\n\n    /**\n     * Get the memory stats when using on demand loading.\n     * @returns {object|null} Object containing the limit and loaded memory usage for the model.\n     *                        Return null if the model isn't being loaded on demand.\n     */\n    this.getMemoryInfo = function() {\n        return {\n            limit: this.options.limit,\n            effectiveLimit: this.getMemoryLimit(),\n            loaded: this.preparedPackFilesSize()\n        };\n    };\n\n    this.getLoadedMeshes = function(packId) {\n        var pack = this.loadedPacks[packId];\n        return pack && pack.inMemory;\n    };\n\n    this.loadPackFile = function(/*packId*/) {\n        return true;\n    };\n\n    this.doLoadPackFile = function(packId) {\n        if (this.loadingPacks[packId])\n            return true;\n        // Skip occluded packs\n        if (this.occludedPacks[packId] === true)\n            return false;\n\n        if (this.queuedPacks.length > 0 || this.occlusionTesting >= QUEUE_OCCLUSION_TESTING) {\n            if (!this.addGeomPackMissingLastFrame(packId))\n                return false;\n            this.loadGeometryMissingLastFrame();\n            return true;\n        }\n        return _loader.loadGeometryPack(packId, this.getLoadedMeshes(packId));\n    };\n\n    // Take the geometry we will keep in a pack file and create a new set\n    // of buffers for them.\n    function removeAndCompactGeometry(packId, frags, unloadAll, traversed, transparent, pack) {\n        var bufferSize = 0;\n        var unloadedSize = 0, size;\n        var retainedGeoms = [];\n        var inMemory = pack.inMemory;\n        var needCompaction = false;\n        var count = 0;\n        var geomsList = frags.geoms;\n\n        // If all of the current geometry has been traversed, then there\n        // is nothing for us to do.\n        if (!unloadAll && pack.travsed >= pack.currentCount)\n            return 0;\n\n        function processMesh(meshIdx) {\n            // If mesh isn't in memory, return\n            if (!(inMemory[meshIdx >> 5] & (1 << (meshIdx & 31))))\n                return;\n\n            var fragId = frags.fragments.mesh2frag[packId + \":\" + meshIdx];\n            if (Array.isArray(fragId))\n                fragId = fragId[0];\n            var geom = geomsList.geoms[frags.getGeometryId(fragId)];\n\n            if (geom && geom.packId == packId) {\n                // We handle meshes that occupy an entire buffer differently from\n                // meshes that are sharing a buffer. If we unload a mesh that is\n                // part of a shared buffer, we need to compact the buffer. Similarly\n                // we only need to include meshes that are part of a shared buffer\n                // in the meshes we want to compact.\n                var partialBuffer = geom.vb.buffer === geom.ib.buffer\n                    ? (geom.vb.buffer.byteLength > geom.vb.byteLength + geom.ib.byteLength)\n                    : (geom.vb.buffer.byteLength > geom.vb.byteLength\n                        || geom.ib.buffer.byteLength > geom.ib.byteLength);\n                // remove geometry we don't want to keep and keep track of the size\n                if ((unloadAll || (geom.traversed != traversed && geom.transparent != transparent))\n                    && (size = geomsList.removeGeometry(geom.svfid, _loader.viewer3DImpl.glrenderer())) > 0) {\n                    unloadedSize += size;\n                    inMemory[geom.meshIndex >> 5] &= ~(1 << (geom.meshIndex & 31));\n                    needCompaction = needCompaction || partialBuffer;\n                } else {\n                    ++count;\n                    // Either don't want to remove the geometry, or we can't remove it\n                    // We only compact geometry that is stored in a shared array buffer\n                    if (partialBuffer) {\n                        bufferSize += geom.vb.byteLength;\n                        bufferSize += (geom.ib.byteLength + 3) & ~3;\n                        retainedGeoms.push(geom);\n                    }\n                }\n            } else\n                console.error(\"Mismapped or missing geometry %d:%d\", packId, meshIdx);\n        }\n\n        // Remove geometry that we can. Make a list of the geometry that\n        // we want to keep.\n        var i;\n        for (i = 0; i < pack.totalCount; ++i)\n            processMesh(i);\n        pack.currentCount = count;\n        pack.culled = 0;\n\n        // Nothing more to do, if nothing was unloaded or everything was unloaded\n        if (unloadedSize == 0)\n            return 0;\n\n        unloadedSize /= MEGA;\n        // If we don't need to compact, then don't\n        if (retainedGeoms.length == 0 || !needCompaction)\n            return unloadedSize;\n\n        var newBuffer = new ArrayBuffer(bufferSize);\n        var offset = 0;\n\n        // Copy a single buffer to the destination\n        function copy(type, src, size) {\n            var b = null;\n            if (src) {\n                var round = size - 1;\n                offset = (offset + round) & ~round; // size must be a power of 2\n                var length = src.length;\n                b = new type(newBuffer, offset, length);\n                b.set(src);\n                offset += length * size;\n            }\n            return b;\n        }\n\n        // Copy data to new buffer\n        retainedGeoms.forEach(function(geom) {\n            geom.vb = copy(Float32Array, geom.vb, 4);\n            geom.ib = copy(Uint16Array, geom.ib, 2);\n        });\n        \n        return unloadedSize;\n    }\n\n    this.unloadPackFile = function(packId, unloadAll, pageOut) {\n        var frags = _loader.model.getFragmentList();\n        var pack = this.loadedPacks[packId];\n        if (!frags || !pack || !frags.geoms) {\n            return false;\n        }\n        \n        // Remove all geometries comming from this pack file\n        removeAndCompactGeometry(packId, frags, unloadAll, this.traversedCounter, this.transparentCounter, pack);\n\n        if (pack.currentCount == 0) {\n            // Then, remove the record and decrease the count.\n            delete this.loadedPacks[packId];\n            --this.loadedPackfileCount;\n            if (pageOut)\n                ++this.packsPagedOut;\n        }\n        \n        return true;\n        \n    };\n\n    var redrawIfIdle = function() {\n        // Schedule a redraw if we think we are idle. We detect idle\n        // by tracking when the iterator is reset and when the traversal\n        // is done.\n        if (this.resetCount != this.pageOutResetCounter)\n            return false;       // Draw is active\n        _loader.viewer3DImpl.invalidate(false, true);\n    }.bind(this);\n\n    this.onPackFileLoaded = function(packId, data, geomSize) {\n        // Record the pack file loaded.\n        var pf = this.geommap[packId];\n\n        _loadDoneSent = false;  // Once we load a pack file, we need to send load done again\n\n        // This packId is no longer being loaded, reduce the loading packs size        \n        if (this.loadingPacks.hasOwnProperty(packId)) {\n            delete this.loadingPacks[packId];\n            this.loadingPacksSize -= pf.geomSize + pf.usize;\n        }\n\n        // If data is null, then there was an error\n        if (data) {\n            var pack = this.loadedPacks[packId];\n            if (!pack) {\n                var count = data.meshes.length;\n                \n                pack = this.loadedPacks[packId] = {\n                    totalCount: count,\n                    travsed: 0,\n                    culled: 0,\n                    resetCounter: this.resetCount,\n                    geomSize: 0, // Memory used by geometry in the loaded pack file\n                    inMemory: new Array(((count + 31) / 32) | 0)\n                };\n\n                ++this.loadedPackfileCount;\n                if (this.options.debug.occlusionTestThreshold > 0\n                    && this.occlusionTesting == NO_OCCLUSION_TESTING\n                    && this.loadedPackfileCount >= this.options.debug.startOcclusionTestingPackCount) {\n                    this.occlusionTesting = QUEUE_OCCLUSION_TESTING;\n                }\n\n            }\n            // Once we load a pack file, everything is in memory again\n            pack.geomSize += geomSize;\n            pack.currentCount = pack.totalCount;\n            pack.inMemory.fill(~0);\n\n            // The geometry loaded now replaces all the geometry loaded before\n            this.totalGeomSize += pack.geomSize - pf.geomSize;\n\n            // Adjust queuedPacksSize if this packId has been queued again.\n            if (this.packQueuedMap[packId])\n                this.queuedPacksSize += pack.geomSize - pf.geomSize;\n            pf.geomSize = pack.geomSize;\n\n            // Need to make sure we render something, to continue the loading process\n            redrawIfIdle();\n        }\n\n        if (this.loadedGeometrySize() > this.getMemoryLimit()) {\n            avp.logger.warn(\"More pack files being loaded than the max count: \" + this.loadedGeometrySize());\n        }\n    };\n\n    this.checkLoadFinished = function() {\n        if (_loadDoneSent)\n            return;\n\n        // Are all workers done?\n        var pack_workers = _loader.pack_workers;\n        if (pack_workers) {\n            for (var j = 0; j < pack_workers.length; j++) {\n                if (pack_workers[j].queued != 0)\n                    return;\n            }\n        }\n\n        // All workers are done. Is there anything more to do.\n        if (this.geomPacksMissingLastFrame().length != 0 || _nextOrderToLoad < _fragOrder.length) {\n            // More items on the list, so there might be more to do\n            if (this.loadedGeometrySize() < this.getMemoryLimit() || _pageOutStillPossible) {\n                // There may be more memory, so we aren't done yet\n                return;\n            }\n        }\n\n        // Done\n        _loadDoneSent = true;\n        _loader.onGeomLoadDone();                \n    };\n\n    this.doOnDemandLoadFinished = function() {\n        // Any more to do?\n        this.loadGeometryMissingLastFrame();\n        this.checkLoadFinished();\n    };\n\n    this.onPackFileLoading = function(packId) {\n        if (this.loadingPacks.hasOwnProperty(packId))\n            return;\n        this.loadingPacks[packId] = true;\n        var pf = this.geommap[packId];\n        this.loadingPacksSize += pf.geomSize + pf.usize;\n    };\n\n    this.onProcessReceivedMesh = function(geometry, numInstances) {\n\n        var geomId = geometry.svfid;\n        if (numInstances > 1 && this.geomidsmap[geomId] == null) {\n            this.geomidsmap[geomId] = this.geomTravCount.length;\n            this.geomTravCount.push(0);\n        }\n    };\n\n    this.loadedGeometrySize = function() {\n        return _loader.model.getGeometryList().geomMemory / MEGA + this.overheadSize;\n    };\n\n    this.preparedPackFilesSize = function() {\n        return this.loadingPacksSize + this.loadedGeometrySize();\n    };\n\n    this.cancelPending = function() {\n        if (this.loadingPacksSize > 1.0 / MEGA) {\n                \n            // Cancel any on going geometry loading, as it is probably no longer\n            // immediately used by the following rendering as scene or camera \n            // changed.\n            _loader.cancelGeometryPackLoading();\n            this.loadingPacks = {};\n            this.loadingPacksSize = 0;\n        }\n        \n        this.queuedPacks.length = 0;\n        this.queuedPacksSize = 0;\n        this.packQueuedMap = {};\n        this.occlusionTesting = (this.options.debug.occlusionTestThreshold > 0\n            && this.loadedPackfileCount >= this.options.debug.startOcclusionTestingPackCount)\n                ? QUEUE_OCCLUSION_TESTING : NO_OCCLUSION_TESTING;\n        this.occludedPacks.length = 0;\n    };\n\n    this.resetIterator = function(camera/*, resetType*/) {\n        this.lastCamera = camera;\n        _occlusionCulling.setCamera(camera);\n        ++this.resetCount;\n    };\n\n    this.reset = function() {\n\n        // Reset the record of geometry travsed or culled count.\n        var loadedPacks = this.loadedPacks;\n        for (var p in loadedPacks) {\n            loadedPacks[p].travsed = 0;\n            loadedPacks[p].culled = 0;\n        }\n        this.geomTravCount.fill(0);\n\n        // I don't like this but I don't see any way around it. The goal is to keep all\n        // visible geometry in memory. So when we reset the geometry in memory we need\n        // to clear the display, which calls this method again. invalidateCount is used\n        // to keep us from starting over in that case.\n        if (this.resetCount > this.invalidateCount) {\n            this.cancelPending();\n            this.resetCanPageOut(false, true, true);\n        }\n    };\n\n    this.geomPacksMissingLastFrame = function() {\n        return this.queuedPacks;\n    };\n\n    this.addGeomPackMissingLastFrame = function(packId) {\n\n        // Not too many loaded + loading + queued.\n        if (this.loadedGeometrySize() >= this.getMemoryLimit()) {\n            this.reachLimit = true;\n        }\n\n        // Otherwise, schedule a futher loading\n        if(!this.packQueuedMap[packId]) {\n            var pf = this.geommap[packId];\n            if (pf) {\n                this.queuedPacks.push(packId);\n                this.queuedPacksSize += pf.geomSize;\n                this.packQueuedMap[packId] = true;\n            }\n        }\n        \n        return true;\n    };\n\n    this.loadGeometryMissingLastFrame = function() {\n        // This load is done, then can start as many as possible.\n        var missingPacks = this.queuedPacks;\n        var i;\n        for(i = 0; i < missingPacks.length; ++i) {\n            var packId = missingPacks[i];\n            if (this.occlusionTesting >= QUEUE_OCCLUSION_TESTING && this.occludedPacks[packId] === undefined)\n                break;\n            if (!this.geommap[packId].loading && !this.occludedPacks[packId]) {\n                // Find one that hasn't been loaded.\n                if (!_loader.loadGeometryPack(packId, this.getLoadedMeshes(packId)))\n                    break;      // can't load any more - stop\n            }\n        }\n\n        // If we weren't able to load anything, redraw to start things up again.\n        if (i == 0 && !_loadDoneSent)\n            redrawIfIdle();\n\n        // Remove pack files that are loading and the one we will load\n        var _this = this;\n        missingPacks.splice(0, i).forEach(function(packId) {\n            _this.queuedPacksSize -= _this.geommap[packId].geomSize;\n            delete _this.packQueuedMap[packId];\n        });\n    };\n\n    this.needResumeNextFrame = function() {\n        return _resumeNextFrame;\n    };\n\n    var _packSort = function(a, b) {\n        var wa = a >= _packOrderMap.length ? PAST_LAST_PACK : _packOrderMap[a];\n        var wb = b >= _packOrderMap.length ? PAST_LAST_PACK : _packOrderMap[b];\n        return wb - wa;\n    }.bind(this.loadedPacks);\n\n    var copyVisibleIds = function(renderer, glrenderer, model) {\n        var renderCount = model.getFragmentList()._renderCount;\n        if (renderCount === _renderCount)\n            return _visibleIds;\n        _renderCount = renderCount;\n\n        var idTarget = renderer.getIdTarget();\n        if (!idTarget) {\n            _visibleIds = undefined;\n            return null;\n        }\n\n        if (!_visibleIds || _visibleWidth != idTarget.width || _visibleHeight != idTarget.height) {\n            _visibleIds = new Uint8Array(4 * idTarget.width * idTarget.height);\n            _visibleWidth = idTarget.width;\n            _visibleHeight = idTarget.height;\n        }\n\n        glrenderer.readRenderTargetPixels(idTarget, 0, 0, idTarget.width, idTarget.height, _visibleIds);\n        return _visibleIds;\n    };\n\n    this.markVisibleGeoms = function() {\n        var viewer3DImpl = _loader.viewer3DImpl;\n        var model = _loader.model;\n        var map = model.getData().instanceTree;\n        var ids;\n        // Return if we can't get the data to mark visible geometry\n        if (!map || !(ids = copyVisibleIds(viewer3DImpl.renderer(), viewer3DImpl.glrenderer(), model)))\n            return;\n\n        var visible = ++this.traversedCounter;\n        var found = {};\n        var end = ids.length;\n        var id, key;\n        var loadedPacks = this.loadedPacks;\n\n        // Clear traversed count\n        for (key in loadedPacks) {\n            loadedPacks[key].travsed = 0;\n        }\n\n        // Count pixels covered by each id\n        for (var i = 0; i < end; i += 4) {\n            id = ids[i] | (ids[i + 1] << 8) | (ids[i + 2] << 16);\n            id = (id << 8) >> 8;    // recover sign\n            if (id > 0)\n                found[id] = (found[id] | 0) + 1;\n        }\n\n        var frags = model.getFragmentList();\n        var threshold = this.options.debug.occlusionThreshold | 0;\n        for (key in found) {\n            id = Number(key);\n            if (found[id] >= threshold) {\n                map.enumNodeFragments(id, function(fragId) {\n                    var geom = frags.getGeometry(fragId);\n                    if (geom) {\n                        var pack = loadedPacks[geom.packId];\n                        if (pack && geom.traversed != visible)\n                            ++pack.travsed;\n                        geom.traversed = visible;\n                    }\n                });\n            }\n        }\n    };\n\n    this.pageOut = function(iterationDone, forcePageOut) {\n\n        _resumeNextFrame = false;\n        var pageStatus = PAGEOUT_SUCCESS;\n\n        if (!_pageOutStillPossible || !_loader.isValid())\n            return pageStatus;\n        \n        if (iterationDone && this.options.debug.occlusionTestThreshold > 0\n            && this.loadedPackfileCount >= this.options.debug.startOcclusionTestingPackCount) {\n            this.occlusionTesting = PERFORM_OCCLUSION_TESTING;\n        }\n        this.occlusionTest();\n\n        // Only try to page out at the end of iteration of scene travseral,\n        // which is to guarantee the geometries loaded from pack files get \n        // all used (either traversed or culled.)\n        if (!iterationDone) {\n            return pageStatus;\n        }\n\n        // This page out will page geometries on a pack file basis\n        this.pageOutResetCounter = this.resetCount;\n        var size = this.loadedGeometrySize();\n        _pageOutStillPossible = true;\n        if (size && (this.reachLimit || size > this.getMemoryLimit())) {\n\n            this.markVisibleGeoms();\n\n            var loadedPacks = this.loadedPacks;\n            var loadedPackIds = Object.keys(loadedPacks);\n            var packsSkipped = false;\n\n            // Sorting functions for different paging strategies\n\n            // Sort so pack files that can be paged come first\n            // and are sorted in reverse culled count order.\n            // Pack files that can't be paged are not sorted further\n            loadedPackIds.sort(_packSort);\n\n            // If we aren't paging normally, then the best performance is to\n            // page out as much as possible.\n            var unloaded = size - Math.min(size, this.options.debug.maxPageOutSize);\n\n            // Then, unload pack files \n            loadedPackIds.every(function(id) {\n                if (loadedPacks[id].resetCounter < this.resetCount) {\n                    this.unloadPackFile(id, false, true);\n                } else\n                    packsSkipped = true;\n                \n                return this.loadedGeometrySize() > unloaded;\n            }.bind(this));\n            \n            if (forcePageOut && this.loadedGeometrySize() == size\n                && loadedPacks[loadedPackIds[0]].resetCounter < this.resetCount) {\n                this.unloadPackFile(loadedPackIds[0], false, true);\n                avp.logger.log(\"A force page out occur.\");\n            }\n\n            if (this.loadedGeometrySize() == size) {\n                pageStatus = PAGEOUT_SUCCESS;\n                this.reachLimit = true;\n            }\n            else {\n                this.reachLimit = false;\n                this.loadGeometryMissingLastFrame();\n                _resumeNextFrame = true;\n            }\n\n            this.lastPageOut = size - this.loadedGeometrySize();\n            avp.logger.log(\"[On Demand Loading] Unload pack files size: \" + this.lastPageOut);\n            if (window && window.gc) {\n                window.gc();\n            }\n\n            // If we weren't able to pageout anything, see if we are done\n            if (this.lastPageOut == 0) {\n                // If we didn't skip any pack files and nothing was paged out\n                // then we won't be able to page out more later.\n                _pageOutStillPossible = packsSkipped;\n                this.checkLoadFinished();\n            }\n\n            return pageStatus;\n        }\n\n        // resume on missing geom for next frame.\n        _resumeNextFrame = _resumeNextFrame || this.queuedPacks.length > 0;\n\n        this.loadFragsFromLoadOrder();\n\n        return pageStatus;\n    };\n\n    this.occlusionTest = function(pagingProxy) {\n        var fragmentList = null;\n        var moving = false;\n        var promise = null;\n        var packIds = null;\n        var occlusionTestTimer = 0;\n        var waitingCount = 0;\n        var delayPerWaiting = 3;\n\n        function findFragsForPackfile(packIds) {\n            var packids = fragmentList.fragments.packIds;\n            if (!packids)\n                return null;\n\n            var packList = [];\n            packIds.forEach(function(packId) {\n                var fragIds = [];\n                var i = packids.lastIndexOf(packId);\n                while (i >= 0) {\n                    if (packids[i] == packId)\n                        fragIds.push(i--);\n                    else if (--i > 0)\n                        i = packids.lastIndexOf(packId, i);\n                }\n                packList.push(fragIds);\n            });\n            return packList;\n        }\n\n        function nextPackIds(count) {\n            var packIds = null;\n            waitingCount = 0;\n            var queue = pagingProxy.queuedPacks;\n            var occluded = pagingProxy.occludedPacks;\n            count = Math.min(4, count || 4);\n            var length = queue.length;\n            for (var i = 0; i < length && count > 0; ++i) {\n                var id = queue[i];\n                if (occluded[id] === undefined) {\n                    packIds = packIds || [];\n                    packIds.push(id);\n                    --count;\n                } else if (!occluded[id])\n                    ++waitingCount;\n            }\n            return packIds;\n        }\n\n        function handleOcclusion(visible) {\n            promise = null;\n            for (var i = 0; i < packIds.length; ++i) {\n                pagingProxy.occludedPacks[packIds[i]] = !visible[i];\n                if (!visible[i]) {\n                    avp.logger.debug(\"[On Demand Loading] Occluded Geometry Pack file: \" + packIds[i]);\n                    ++pagingProxy.occlusionCulledCount;\n                }\n            }\n            pagingProxy.doOnDemandLoadFinished(); // Remove packId from queue\n            doOcclusionTest();\n        }\n\n        function doOcclusionTest() {\n            if (occlusionTestTimer || promise || _loadDoneSent)\n                return;\n\n            // Clear previous promise\n            promise = null;\n            // Can we do occlusion testing now?\n            if (!moving && (packIds = nextPackIds(pagingProxy.options.debug.testPackfileCount))) {\n                \n                occlusionTestTimer = setTimeout(function() {\n                    occlusionTestTimer = 0;\n                    // Yes get the fragment ids for the pack files\n                    var fragIds = findFragsForPackfile(packIds);\n                    promise = _occlusionCulling.occlusionTest(fragmentList.boxes, pagingProxy.options.debug.occlusionTestThreshold,\n                        fragIds, pagingProxy.options.debug.useOcclusionInstancing, packIds);\n                    promise.then(handleOcclusion, function() {\n                        // Assume visible if there is an error\n                        handleOcclusion([true, true, true, true]);\n                    });\n                }, waitingCount * delayPerWaiting);\n            }\n        }\n\n        function occlusionTest() {\n            // If we already have a test scheduled, or occlusion testing hasn't started yet.\n            if (promise || this.occlusionTesting < PERFORM_OCCLUSION_TESTING)\n                return;\n\n            moving = this.moving-- > 0;\n            fragmentList = _loader.model.getFragmentList();\n\n            // Kick off the test\n            if (fragmentList && !moving )\n                doOcclusionTest();\n        }\n        return occlusionTest;\n    }(this);\n\n    this.loadFragsFromLoadOrder = function() {\n        var frags = _loader.model.getFragmentList();\n        while (_nextOrderToLoad < _fragOrder.length) {\n            var fragOrder = _fragOrder[_nextOrderToLoad];\n            var len = fragOrder.length;\n            while (_nextFragToLoad < len) {\n                var fragId = fragOrder[_nextFragToLoad];\n                if (!frags.getGeometry(fragId)) {\n                    var packId = frags.fragments.packIds ? frags.fragments.packIds[fragId] : fragId;\n                    var queuedLen = this.queuedPacks.length;\n                    if (!this.doLoadPackFile(packId) && queuedLen == this.queuedPacks.length)\n                        return;\n                }\n                ++_nextFragToLoad;\n            }\n            ++_nextOrderToLoad;\n            _nextFragToLoad = 0;\n        }\n    };\n\n    this.pfOrder = function() {\n        return _packOrder;\n    };\n\n    this.getNumVisiblePFs = function() {\n        return _packOrder ? _pfVisible : -1;\n    };\n\n    this.onLoadOrderCalculated = function(loadOrder) {\n        if (loadOrder.error) {\n            _lastResult = null;\n            return;\n        }\n        if (loadOrder.fragOrder && loadOrder.packOrder)\n            _lastResult = loadOrder;\n        if (loadOrder.id != _loadOrderId || !_lastResult) {\n            return;     // Superseded or error or frustum didn't change\n        }\n\n        this.lastPageOut = -1;\n        _pageOutStillPossible = true;\n        _loadDoneSent = false;\n\n        _fragOrder.length = 0;\n        _fragOrder.push(_lastResult.fragOrder);\n\n        // create a map that maps a packId to its position in the load order\n        // this is used during pageout to prioritize the packs paged out.\n        _packOrder = _lastResult.packOrder;\n        _pfVisible = _lastResult.pfVisible;\n        var i, len = _packOrder.length;\n        _packOrderMap.length = this.geompacks.length;\n        // Put all packs at the end of the list\n        _packOrderMap.fill(PAST_LAST_PACK);\n        // Set the load order for pack Ids in the load order list\n        for (i = 0; i < len; ++i)\n            _packOrderMap[_packOrder[i]] = i;\n\n        // Figure out which pack files need to be unloaded\n        // We loop through the fragments and add up the pack file sizes\n        // until we reach the memory limit. Those pack files are the\n        // ones we keep. If the fragment geometry is in memory, we\n        // use the size of geometry currently loaded in memory, if it\n        // isn't we use the total size of the pack file.\n        var frags = _loader.model.getFragmentList();\n        var size = this.overheadSize;\n        var limit = this.getMemoryLimit();\n        var j;\n        for (j = 0; j < _fragOrder.length && size < limit; ++j) {\n            var fragOrder = _fragOrder[j];\n            len = fragOrder.length;\n            var keepPacks = [];\n            keepPacks.length = _packOrderMap.length;\n            keepPacks.fill(0);\n            var geompacks = this.geompacks;\n            for (i = 0; i < len && size < limit; ++i) {\n                var fragId = fragOrder[i];\n                var packId = frags.fragments.packIds ? frags.fragments.packIds[fragId] : fragId;\n                var pack = geompacks[packId];\n                if (pack) {\n                    var geomSize = frags.getGeometry(fragId) ? pack.geomSize : pack.totalGeomSize;\n                    if (geomSize > keepPacks[packId]) {\n                        size += geomSize - keepPacks[packId];\n                        keepPacks[packId] = geomSize;\n                    }\n                }\n            }\n        }\n\n        // Clear can page out for all loaded pack files\n        var loadedPacks = this.loadedPacks;\n        for (var a in loadedPacks) {\n            if (/*a >= this.options.minPackFiles &&*/ loadedPacks.hasOwnProperty(a)) {\n                if (!keepPacks[a])\n                    this.unloadPackFile(a, true);\n            }\n        }\n\n        ++this.traversedCounter;\n        ++this.transparentCounter;\n        this.reachLimit = this.loadedGeometrySize() >= this.getMemoryLimit();\n\n        this.cancelPending();\n        _nextOrderToLoad = 0;\n        _nextFragToLoad = 0;\n        this.loadFragsFromLoadOrder();\n\n        _loader.viewer3DImpl.invalidate(true);\n        this.invalidateCount = this.resetCount + 1;\n    };\n\n    this.resetCanPageOut = function(unloadPackFiles, delay, automatic) {\n        if (_loadOrderTimer) {\n            clearTimeout(_loadOrderTimer);\n            _loadOrderTimer = 0;\n        }\n\n        var proxy = this;\n        function doReset() {\n            _loadOrderTimer = 0;\n            // The first time we get here, from this.reset() then calculate the load order\n            // This is so the scene will display, without manually calculating the load order.\n            if (_firstReset || !automatic || proxy.options.debug.automaticRefresh) {\n                proxy.occlusionCulledCount = 0;\n                proxy.packsPagedOut = 0;\n\n                var camera = proxy.lastCamera;\n                var loadedPacks = proxy.loadedPacks;\n                var a;\n                // Unload all the pack files if needed;\n                if (unloadPackFiles) {\n                    for (a in loadedPacks) {\n                        if (/*a >= proxy.options.minPackFiles &&*/ loadedPacks.hasOwnProperty(a)) {\n                            proxy.unloadPackFile(a, true);\n                        }\n                    }\n                }\n\n                _loader.calculateLoadOrder(++_loadOrderId, camera,\n                    proxy.options.debug.pixelCullingEnable ? proxy.options.debug.pixelCullingThreshold : -1);\n                _firstReset = false;\n            }\n        }\n\n        if (delay)\n            _loadOrderTimer = setTimeout(doReset, LOAD_ORDER_TIMEOUT);\n        else\n            doReset();\n    };\n\n    this.onGeomTraversed = function(geometry, transparent) {\n        var packId = geometry.packId;\n        var geomId = geometry.svfid;\n        geometry.traversed = this.traversedCounter;\n        if (transparent)\n            geometry.transparent = this.transparentCounter;\n\n        // Only record it for paging if the pack file is allowed to be paged out.\n        //if (packId >= this.options.minPackFiles) {\n            var geomTraversed = true;\n            \n            var mapIdx = this.geomidsmap[geomId];\n            if (mapIdx != null) {\n                // increase counter of traversed geometry instances\n                this.geomTravCount[mapIdx] += 2;\n                this.geomTravCount[mapIdx] |= 1;\n\n                geomTraversed = geometry.instanceCount == this.geomTravCount[mapIdx] >> 1;\n            }\n\n            var loaded = this.loadedPacks[packId];\n            if (loaded) {\n                if (geomTraversed) {\n                    loaded.travsed++;\n                }\n            }\n        //}\n\n    };\n\n    this.onGeomCulled = function(geometry) {\n        if (!geometry) {\n            return;\n        }\n\n        var packId = geometry.packId;\n        var geomId = geometry.svfid;\n\n        // Only record it for paging if the pack file is allowed to be paged out.\n        //if (packId >= this.options.minPackFiles) {\n            var mapIdx = this.geomidsmap[geomId];\n            var geomCulled = !mapIdx;\n\n            if (mapIdx != null) {\n                // The low order bit of geomeTravCount indicates whether the\n                // geometry has ever been traversed. If it has, then treat this\n                // cull as a traverse.\n                if (this.geomTravCount[mapIdx] & 1)\n                    this.onGeomTraversed(geometry);\n                else {\n                    // ??? multiple geometry instance, may have some traversed\n                    // ??? and some culled. The culled one is also marked as traversed count,\n                    // ??? so this geometry may be counted as either culled or traversed,\n                    // ??? that is ok so far.\n                    this.geomTravCount[mapIdx] += 2;\n                    geomCulled = geometry.instanceCount == this.geomTravCount[mapIdx] >> 1;\n                }\n            }\n\n            var loaded = this.loadedPacks[packId];\n            if (loaded && geomCulled)\n                loaded.culled++;\n\n        //}\n        \n    };\n\n    // Add various hooks and settings needed for on demand loading\n    this.removeHooks = function() {\n        const viewer3DImpl = _loader.viewer3DImpl;\n\n        // disable rollover highglighting\n        const rolloverMethod = viewer3DImpl.rolloverObjectViewport;\n        viewer3DImpl.rolloverObjectViewport = function() {};\n\n        const renderer = viewer3DImpl.renderer();\n        const renderPartMethod = renderer.renderScenePart;\n        const _RenderBatchML = RenderBatchML;\n        renderer.renderScenePart = function(scene, want_colorTarget, want_saoTarget, want_idTarget, updateLights) {\n            // Need to handle occlusion ids. If we need occlusionids, then don't include transparent objects\n            if (want_idTarget && scene instanceof avp.RenderBatch && scene.sortObjects) {\n                want_idTarget = false;\n            }\n\n            renderPartMethod.call(this, scene, want_colorTarget, want_saoTarget, want_idTarget, updateLights)\n\n            if (scene instanceof _RenderBatchML) {\n                var start = scene.start, end = scene.lastItem;\n                var vizflags = scene.frags.vizflags;\n                var indices = scene.getIndices();\n                var idx;\n                while (start < end) {\n                    idx = indices ? indices[start] : start;\n                    if (vizflags[idx] & avp.MeshFlags.MESH_DRAWN)\n                        vizflags[idx] = (vizflags[idx] | avp.MeshFlags.MESH_TRAVERSED) & ~avp.MeshFlags.MESH_DRAWN;\n                    ++start;\n                }\n            }\n        }\n\n        viewer3DImpl.matman().toggleDepthWriteTransparent(false);\n\n        // Turn on ground shadows and ground reflections for on demand loading\n        viewer3DImpl.toggleGroundShadow(false);\n        viewer3DImpl.toggleGroundReflection(false);\n        let showShadows = false;\n        const hideShadows = function() {\n            showShadows = true;\n            viewer3DImpl.api.removeEventListener(av.TOOLBAR_CREATED_EVENT, hideShadows);\n            setSettingsDisplay(viewer3DImpl.api, \"none\");\n        };\n        viewer3DImpl.api.addEventListener(av.TOOLBAR_CREATED_EVENT, hideShadows);\n        var resize = function(ev) {\n            _occlusionCulling.onResize();\n        };\n        viewer3DImpl.api.addEventListener(av.VIEWER_RESIZE_EVENT, resize);\n\n        // Restore hooked functions and settings needed\n        return function() {\n            viewer3DImpl.api.removeEventListener(av.TOOLBAR_CREATED_EVENT, hideShadows);\n            viewer3DImpl.api.removeEventListener(av.VIEWER_RESIZE_EVENT, hideShadows);\n\n            viewer3DImpl.rolloverObjectViewport = rolloverMethod;\n\n            viewer3DImpl.matman().toggleDepthWriteTransparent(true);\n\n            // Restore ground shadows and ground reflections\n            viewer3DImpl.toggleGroundShadow(viewer3DImpl.api.prefs.groundShadow);\n            viewer3DImpl.toggleGroundReflection(viewer3DImpl.api.prefs.groundReflection);\n            if (showShadows)\n                setSettingsDisplay(viewer3DImpl.api, \"\");\n        }\n    }();\n};\n","    const av = Autodesk.Viewing;\n    const avp = av.Private;\n    \n    /**\n     * Normalizes memory options passed into the viewer instance or stated in the URL\n     * The URL parameter to check is `viewermemory` and has a number value that represents\n     * the MegaByte memory limit.\n     * @example:\n     *      ?viewermemory=500 ----- set memory limit of 500 MB\n     *      ?viewermemory=500f ---- force memory limit of 500 MB, which activates on-demand-loading mechanism (debug).\n     * @private\n     */\n    export function processMemoryOptions(viewer3Dimpl, config3d) {\n\n        var memoryOpts = Object.assign({}, config3d && config3d.memory);\n        memoryOpts.debug = Object.assign({}, memoryOpts.debug);\n\n        var memLimit;\n        // Verify memory values are valid/consistant\n        memLimit = parseInt(memoryOpts.limit) | 0;\n        var forced = (memoryOpts.debug && memoryOpts.debug.force) || false;\n        if (forced && memLimit <= 0) {\n            memoryOpts.force = false; // disable forced when the limit is not valid.\n            avp.logger.warn('config.memory.limit value is invalid: (' + memoryOpts.limit + ')');\n        }\n\n        // If URL argument is passed in, override limit specified through code\n        var urlValue = av.getParameterByName('viewermemory');\n        var memLimit = parseInt(urlValue);\n        // If urlValue isn't a number, memLimit will be a NaN and comparison will fail.\n        if (memLimit > 0) {\n            // Now, truncate memLimit to an integer.\n            memLimit = memLimit | 0;\n            // Only allow forced when memLimit > 0, memLimit == 0 disables the limit.\n            var isForced = memLimit > 0 && urlValue.charAt(urlValue.length-1).toLowerCase() === 'f'; // Check if there is an F at the end.\n            memoryOpts = {\n                limit: memLimit,\n                debug: { force: isForced }\n            };\n            if (isForced) {\n                avp.logger.info('Forcing memory limit to URL param: (' + memLimit + ' MegaBytes).');\n            } else {\n                avp.logger.info('Setting memory limit to URL param: (' + memLimit + ' MegaBytes).');\n            }\n        } else if (memLimit === 0) {\n            memoryOpts = { limit: 0 };\n        } else {\n\t\t\t// don't issue warning if viewermemory parameter (e.g., \"&viewermemory=500\") is not in URL at all\n\t\t\tif ( urlValue !== \"\" )\n\t\t\t\tavp.logger.warn('Invalid viewermemory URL param value: (' + urlValue + ')');\n        }\n\n        var isLimited = function(models) {\n            for (let i = 0; i < models.length; ++i) {\n                var frags = models[i].getFragmentList();\n                if (frags && frags._pagingProxy)\n                    return true;\n            }\n        }\n\n        // If there is another on demand loading model, then disable this one.\n        if (isLimited(viewer3Dimpl.modelQueue().getModels())\n            || isLimited(viewer3Dimpl.modelQueue().getHiddenModels())) {\n            // Only one model can be memory lmiited\n            memoryOpts.limit = 0;\n            memoryOpts.debug.force = false;\n        }\n\n        return memoryOpts;\n    };\n","import { RenderBatchML, RENDER_FLAGS } from \"./RenderBatchML\";\nimport { PAGEOUT_NONE, PAGEOUT_FAIL } from \"./pageoutStatus\";\n\nconst av = Autodesk.Viewing;\nconst avp = av.Private;\n\n// Use 16 bits to store the visibility for draw modes (render phases)\n// Different phases can share the same bits if the visibility is the same.\n// Phases past the end of the array use the visibility for RENDER_NORMAL\nvar PHASE_VISIBILITY = [\n    0x0001,     // RENDER_NORMAL\n    0x0001,     // RENDER_HIGHLIGHT\n    0x0002,     // RENDER_HIDDEN\n    0x0004,     // RENDER_SHADOWMAP\n];\n\n/**\n * subclass of model for on demand loading\n * @param {*} modelData \n */\nexport function ModelML(modelData) {\n    av.Model.call(this, modelData);\n    this.RenderBatch = RenderBatchML;\n    const _initialize = this.initialize;\n    const _resetIterator = this.resetIterator;\n    const _nextBatch = this.nextBatch;\n    const _dtor = this.dtor;\n    var _visibilityMode = PHASE_VISIBILITY[avp.RenderFlags.RENDER_NORMAL]; // Allows different passes to have different visibility (e.g. hidden and normal)\n    let _rflag = avp.MeshFlags.MESH_RENDERFLAG;\n    let _animReq = 0;\n\n    const animCallback = () => {\n        _animReq = requestAnimationFrame(animCallback);\n        this.frameUpdatePaging();\n    };\n\n\n    this.initialize = function(pagingProxy) {\n        _initialize.call(this);\n\n        // Set the paging proxy on the fragment list for later\n        const frags = this.getFragmentList();\n        frags._pagingProxy = this.loader.pagingProxy;\n        frags._renderCount = 0;\n\n        // Calculate the batch bounding boxes\n        // TODO: is this only needed for pixelCulling\n        const scenes = this.getIterator().getGeomScenes();\n        for (let i = 0; i < scenes.length; ++i) {\n            scenes[i].calculateBounds();\n        }\n\n        _animReq = requestAnimationFrame(animCallback);\n    }\n\n    /** \n     *  Deletes all GPU resources.\n     *\n     *  @param {FireflyWebGLRenderer} glRenderer\n     */\n    this.dtor = function(glrenderer) {\n        if (_animReq) {\n            cancelAnimationFrame(_animReq);\n            _animReq = 0;\n        }\n\n        _dtor.call(this, glrenderer);\n    }\n\n    /** \n     *  Starts the scene draw traversal, so that nextBatch() will return the first batch to render.\n     *   @param: {UnifiedCamera}      camera       - camera.position was needed for the heuristic to choose between linear iterator and BVH.\n     *                                               [HB:] The code is currently outcommented, so the param is currently unused.\n     *   @param: {FrustumIntersector} frustum      - used by RenderBatches for frustum culling and z-sorting.\n     *   @param: {number}             drawMode     - E.g., RENDER_NORMAL. See RenderFlags.js\n     *   @param: {number}             [resetType]  - Must be one of RESET_NORMAL, RESET_REDRAW or RESET_RELOAD.\n     *                                               Only used when on demand loading is enabled. RESET_RELOAD will reload and redraw\n     *                                               geometry. RESET_REDRAW will redraw geometry. RESET_NORMAL will only redraw geometry\n     *                                               that hasn't already been drawn. If undefined RESET_NORMAL is used.\n     */  \n    this.resetIterator = function(camera, frustum, drawMode, resetType) {\n        resetType = resetType || avp.ResetFlags.RESET_NORMAL;\n        const pagingProxy = this.loader.pagingProxy;\n        const frags = this.getFragmentList();\n        _rflag = RENDER_FLAGS[drawMode] || avp.MeshFlags.MESH_RENDERFLAG;\n        pagingProxy.resetIterator(camera, resetType);\n\n        const iterator = _resetIterator.call(this, camera, frustum, drawMode);\n\n        // For visibility, Set the bit used to cache visibility for a phase\n        _visibilityMode = PHASE_VISIBILITY[drawMode] || PHASE_VISIBILITY[avp.RenderFlags.RENDER_NORMAL];\n\n        // If scene/camera has changed, we have to rebuild some data that we collected for paging, because the set of currently \n        // needed fragments may change.\n        // Note that frags will be null when using a custom iterator. In this case, this\n        // paging-related code is not used and can be skipped.\n        if (resetType != avp.ResetFlags.RESET_NORMAL) {\n            ++frags._renderCount;\n\n            if (resetType >= avp.ResetFlags.RESET_REDRAW) {\n\n                // reset MESH_TRAVERSED flag \n                frags.setFlagGlobal(avp.MeshFlags.MESH_TRAVERSED, false);\n\n                this.resetVisStatus();\t\n            }\n\n            if (resetType >= avp.ResetFlags.RESET_RELOAD) {\n                frags._pagingProxy.moving = 2;\n                // restart tracking of paging status\n                this._pageOutStatus = PAGEOUT_NONE;\n\n                // reset lists of culled and traversed geometry\n                pagingProxy.reset();\n            }\n            \n        }\n\n        return iterator;\n    }\n\n    this.nextBatch = function() {\n        const scene = _nextBatch.call(this);\n        // Let the scene know which render flag it should use\n        scene && (scene._rflag = _rflag);\n        return scene;\n    }\n\n    this.applyVisibility = function(scene, drawMode, frustum) {\n        // If visible stats for _visibilityMode is 0 then apply visibility check\n        if (scene.visibleStats & _visibilityMode) {\n            return !(scene.visibleStats & (_visibilityMode << 16));\n        }\n\n        //TODO: move this into the iterator?\n        var allHidden = scene.applyVisibility(\n            drawMode, \n            frustum);\n\n        // Assume clear visibility calculated clears both bits\n        scene.visibleStats |= _visibilityMode;\n        if (!allHidden)\n            scene.visibleStats |= (_visibilityMode << 16);\n\n        // For 3D scenes, sort fragments of this batch. \n        // Note that fragments of F2D scenes must be drawn in original order.\n        //TODO: Move this to the iterator?\n        if (!allHidden && !this.is2d()) {\n            //Generally opaque batches are sorted once by material, while\n            //transparent batches are sorted back to front each frame\n            if (scene.sortObjects && !this.getFragmentList().useThreeMesh)\n                scene.sortByDepth(frustum);\n            else if (!scene.sortDone)\n                scene.sortByMaterial();\n        }\n\n        return allHidden;\n    }\n}\n\nModelML.prototype = Object.create(av.Model.prototype);\nModelML.prototype.constructor = ModelML;\n\nModelML.prototype.resetVisStatus = function() {\n    const scenes = this.getIterator().getGeomScenes();\n    for (let i = 0; i < scenes.length; ++i) {\n        const scene = scenes[i];\n        scene && scene.resetVisStatus();\n    }\n}\n\n/** \n *  Triggers paging out of geometry if necessary.\n * \n *  In each frame update, some more batches of the overall scene are rendered until time runs out. \n *  This function is called at the end of each such frame update to page out stuff if needed.\n *  (see RenderScene.renderSome)\n *\n *   &param [bool] isBeginFrame - Indicates if the current frame update was the first one.\n *                                TODO: isbeginFrame can be removed.\n */\nModelML.prototype.frameUpdatePaging = function() {\n\n    const pagingProxy = this.loader.pagingProxy;\n    const done = this.getIterator().done();\n\n    this._pageOutStatus = pagingProxy.pageOut(done, false);\n\n    // When scene rendering traversal is finished and we did not page out enough\n    // in the previous frame updates yet, do some final paging-out and make sure that it succeeds.\n    if (done && this._pageOutStatus == PAGEOUT_FAIL) {\n        // We will give a last try of paging out,\n        // if still fail and traversed geometry is not empty, then will need another render.\n        // otherwise, need a hard page out no matter geometry get traversed or not.\n        this._pageOutStatus = pagingProxy.pageOut(true, true);\n    }\n\n    return this._pageOutStatus;\n};\n","/* global Autodesk */\n\nvar avp = Autodesk.Viewing.Private;\n\nvar ROOT_NODE_ID         = -1 << 30;\n\nfunction buildDbIdToFragMap(fragToDbId) {\n    var ret = {};\n    for (var i= 0, iEnd=fragToDbId.length; i<iEnd; i++) {\n\n        var dbIds = fragToDbId[i];\n\n        //In 2D drawings, a single fragment (consolidation mesh)\n        //can contain multiple objects with different dbIds.\n        if (!Array.isArray(dbIds)) {\n            dbIds = [dbIds];\n        }\n\n        for (var j=0; j<dbIds.length; j++) {\n            var dbId = dbIds[j];\n            var frags = ret[dbId];\n            if (frags === undefined) {\n                //If it's the first fragments for this dbid,\n                //store the index directly -- most common case.\n                ret[dbId] = i;\n            }\n            else if (!Array.isArray(frags)) {\n                //otherwise put the fragments that\n                //reference the dbid into an array\n                ret[dbId] = [frags, i];\n            }\n            else {\n                //already is an array\n                frags.push(i);\n            }\n        }\n    }\n\n    return ret;\n}\n\n/**\n * Map dbids to fragment dbids\n * \n * When there isn't an instance tree this object can be used to get the fragment ids for\n * database ids.\n * \n * @param {ArrayLike} fragToDbId - fragToDbId[i] is the dbid or an array of dbids for fragment with id i \n */\nexport class DbidFragmentMap extends avp.InstanceTree {\n    static buildInstanceTree(fragToDbId, fragmentList) {\n        // Invert the frag to dbid map\n        var dbIdToFrags = buildDbIdToFragMap(fragToDbId);\n    \n        // Get the dbids and an InstanceTreeStorage object\n        var dbIds = Object.keys(dbIdToFrags);\n        var count = dbIds.length;\n        var storage = new avp.InstanceTreeStorage(count + 1, fragToDbId.length);\n        var emptyArray = [];\n        var oneArray = [0];\n    \n        // Add the root node\n        storage.setNode(ROOT_NODE_ID, 0, \"root\", 0 /* NODE_TYPE_ASSEMBLY */, dbIds, emptyArray);\n    \n        // Add the leaf nodes\n        for (var i = 0; i < count; ++i) {\n            var dbId = dbIds[i];\n            var frags = dbIdToFrags[dbId];\n            if (!Array.isArray(frags)) {\n                oneArray[0] = frags;\n                frags = oneArray;\n            }\n            storage.setNode(dbId, ROOT_NODE_ID, \"node:\" + dbId, 6 /*NODE_TYPE_GEOMETRY */, emptyArray, frags);\n        }\n        // Free some stuff that we dont need any longer\n        dbIds = undefined;\n        dbIdToFrags = undefined;\n    \n        // Flatten the storage\n        storage.flatten();\n    \n        // Convert storage to an instance tree access object\n        storage = new avp.InstanceTreeAccess(storage, ROOT_NODE_ID);\n    \n        // Create the instance tree\n        var tree = new DbidFragmentMap(storage, count + 1, 2);\n        tree.setFragmentList(fragmentList);\n    \n        // Return it\n        return tree;\n    };\n}\n","import { SvfPagingProxy } from \"./SvfPagingProxy\";\nimport { initWorkerScriptML, createWorkerWithInterceptML, createWorkerML } from \"./WorkerCreatorML\";\nimport { processMemoryOptions } from \"./envinit.js\";\nimport { ModelML } from \"../../render/ModelML\";\nimport { FRAGMENTS_LOADED_EVENT } from \"./EventTypes\";\nimport { DbidFragmentMap } from \"../../render/DbidFragmentMap\";\n\nvar av = Autodesk.Viewing;\nvar avp = av.Private;\n\nvar NUM_WORKER_THREADS = av.isNodeJS() ? 10 : (av.isMobileDevice() ? 2 : 6);\nvar WORKER_LOAD_GEOMETRY = \"LOAD_GEOMETRY\";\nvar WORKER_LOAD_SVF = \"LOAD_SVF\";\nvar WORKER_CALCULATE_LOAD_ORDER = \"CALCULATE_LOAD_ORDER\";\n// This limit in MB is how much memory needs to be available\n// to load textures. The texture loader tries to squeeze\n// all textures into 32MB, so this limit should be larger than that.\nvar MOBILE_TEXTURE_LIMIT = 50;\n\nvar GEOM_PACK_SIZE_FACTOR = 0.7;    // Approximate ratio of geometry size to uncompressed pack file size\n\nvar MEGA = 1024 * 1024;\n\n// Overhead constants. The total overhead is calculated as\n// <#meshes> * MESH_OVERHEAD + <#fragments> * FRAG_OVERHEAD\nvar MESH_OVERHEAD = 224;        // Fixed overhead per mesh\nvar FRAG_OVERHEAD = 134;        // Fixed overhead per fragment\n\nvar _fragLoadedEvent = {\n    type: FRAGMENTS_LOADED_EVENT,\n    model: null,\n    data: null,\n    getFragIds: function getFragIds() {\n        if (this.fragIds)\n            return this.fragIds;\n\n        var rm = this.model;\n        if (!rm || !this.data || !this.data.meshes)\n            return null;\n\n        var fragIds = this.fragIds = [];\n        var packId = this.data.packId;\n        var meshIndex = 0;\n\n        var svf = rm.getData();\n        var fragments = svf.fragments;\n        var meshesLength = this.data.meshes.length;\n\n        for (meshIndex = 0; meshIndex < meshesLength; ++meshIndex) {\n            //Find all fragments that instance this mesh\n            var meshid = packId + \":\" + meshIndex++;\n\n            var fragIndexes = fragments.mesh2frag[meshid];\n            if (fragIndexes === undefined)\n                return;\n\n            if (Array.isArray(fragIndexes)) {\n                fragIndexes.forEach(function(fragId) {\n                    fragIds.push(fragId);\n                });\n            } else\n                fragIds.push(fragIndexes);\n        }\n\n        return fragIds;\n    }\n};\n\nvar fireFragmentsLoadedEvent = (loader, data) => {\n    _fragLoadedEvent.model = loader.model;\n    _fragLoadedEvent.data = data;\n    loader.viewer3DImpl.api.dispatchEvent(_fragLoadedEvent);\n};\n\nvar SvfLoader = avp.SvfLoader;\n\nfunction calculateDefaultMemoryLimit() {\n    if (av.isAndroidDevice())\n        return 195;\n    if (av.isIOSDevice())\n        return 150;\n    // Firefox on MacOs or Windows supports lots of memory\n    if (av.isFirefox())\n        return 0;   // 0 means disable memory limited\n    // Chrome on the Mac supports lots of memory\n    if (av.isMac() && av.isChrome())\n        return 0;   // 0 means disable memory limited\n    // Safari on Mac support a good bit of memory.\n    if (av.isSafari())\n        return 2048;\n\n    return 1024;\n}\n\n/** @constructor */\nexport var SvfLoaderML = function (parent, config) {\n    SvfLoader.call(this, parent, config);\n\n    var memoryOpts = processMemoryOptions(parent, config);\n    var options = this.memoryOpts = {\n        debug: {}\n    };\n    if (!av.isNodeJS()) {\n        // Default on demand loading if not node.js\n        options.limit = calculateDefaultMemoryLimit();\n        options.onDemandLoading = true;\n\n        // Turn on demand loading off if we get a memory configuration without a limit\n        // or the limit is 0.\n        if (memoryOpts) {\n            options.debug = Object.assign({}, memoryOpts.debug);\n            var newLimit = memoryOpts.hasOwnProperty(\"limit\") ? memoryOpts.limit : options.limit;\n            if ((newLimit | 0) > 0) {\n                options.limit = newLimit | 0;\n            } else if (newLimit == 0) {\n                options.onDemandLoading = false;\n                options.debug.force = false;\n            } else {\n                avp.logger.warn(\"Memory limit, \" + newLimit + \", is invalid - ignored\");\n            }\n        }\n    }\n};\n\nSvfLoaderML.prototype = Object.create(SvfLoader.prototype);\n\nSvfLoaderML.prototype.dtor = function () {\n\n    // 1. load order worker can be cancelled.\n    if (this.svfLoadOrderWorker) {\n        this.svfLoadOrderWorker.terminate();\n        this.svfLoadOrderWorker = null;\n        avp.logger.debug(\"SVF loader dtor: on load order worker.\");\n    }\n\n    // 2. Any on demand jobs can be cancelled.\n    if (this.pagingProxy) {\n        this.pagingProxy.dtor();\n        this.pagingProxy = null;\n    }\n\n    // Call super class dtor\n    SvfLoader.prototype.dtor.call(this);\n};\n\n// We don't use the same mechanism for workers that SvfLoader does,\n// So we can just continue the load without doing anything else.\nSvfLoaderML.prototype.initWorkerScript = initWorkerScriptML;\n\n// Create a worker.\nSvfLoaderML.prototype.createWorkerWithIntercept = function() {\n    var wr = createWorkerWithInterceptML();\n    // We need to handle WORKER_LOAD_SVF messages special to pass additional\n    // options to the work thread.\n    wr.doOperation = msg => {\n        if (msg.operation === WORKER_LOAD_SVF) {\n            var optLoad = this.memoryOpts.onDemandLoading || !!this.memoryOpts.debug.memoryOptimizedSvfLoading;\n            if (optLoad) {\n                msg.perfOpt = {\n                    memoryOptimizedSvfLoading: optLoad,\n                    forceMemoryOptimizedMode: !!this.memoryOpts.debug.forceMemoryOptimizedModeOnSvfLoading\n                };\n            }\n        }\n        wr.postMessage(msg);\n    };\n    return wr;\n};\n\n// Start loading the packfiles with the workers\nSvfLoaderML.prototype.startWorkers = function() {\n    if (this.pagingProxy) {\n        // On demand loading is enabled, then\n        // Defer to launch jobs for loading some geometry packs,\n        // until the viewer really need them.\n        avp.logger.debug(\"[On Demand Loading]: Enabled.\");\n        this.loadedPacksCount = 0;\n    }\n    else {\n        // Start works normally\n        SvfLoader.prototype.startWorkers.call(this);\n    }\n};\n\n// create and initialize the model\nSvfLoaderML.prototype.createModel = function(svf) {\n    // Create the API Model object and its render proxy\n    var model = this.model = this.pagingProxy ? new ModelML(svf)  : new av.Model(svf);\n    model.loader = this;\n\n    model.initialize(this.pagingProxy);\n    return model;\n};\n\nSvfLoaderML.prototype.loadFile = function(path, options, onDone, onWorkerStart) {\n\n    // Need to re-update on-demand loading settings based on options\n    // specific for the file being loaded.\n    var disable = !av.isNodeJS() && options.forceDisableOnDemandLoading;\n\n    // If we come from a buble and it has an animation, then disable on demand loading\n    if (options.bubbleNode) {\n        var geomNode = options.bubbleNode.findParentGeom2Dor3D();\n        var modelExtensions = geomNode.extensions();\n        if (modelExtensions && modelExtensions.indexOf(\"Autodesk.Fusion360.Animation\") >= 0) {\n            disable = true;\n        }\n    }\n\n    if (disable) {\n        this.memoryOpts.limit = 0;\n        this.memoryOpts.onDemandLoading = false;\n        this.memoryOpts.debug.force = false;\n        avp.logger.log('Animation file disables on-demand-loading...');\n    }\n\n    return SvfLoader.prototype.loadFile.call(this, path, options, onDone, onWorkerStart);\n};\n\n\nSvfLoaderML.prototype.cancelGeometryPackLoading = function() {\n        \n    // Cancel any ongoing geometry pack file loading.\n    if (!this.pack_workers || !this.isValid()) {\n        return;\n    }\n\n    for (var i=0; i<this.pack_workers.length; i++) {\n        if (this.svf) {\n            var pf = this.geommap[this.pack_workers[i].packId];\n            if (pf)\n                pf.loading = false;\n        }\n        this.pack_workers[i].queued = 0;\n        this.pack_workers[i].clearAllEventListenerWithIntercept();\n        this.pack_workers[i].terminate();\n    }\n\n    this.pack_workers = null;\n};\n\nSvfLoaderML.prototype.loadGeometryPack = function(packId, inMemory) {\n\n    // If we aren't use on demand loading, then just use the SVF loadGeometryPack\n    var pp = this.pagingProxy;\n    if (!pp) {\n        SvfLoader.prototype.loadGeometryPack.call(this, packId, inMemory);\n        return true;\n    }\n\n    // If loader is already destructed, do nothing.\n    if(!this.svf || !this.isValid()) {\n        return true;\n    }\n\n    // Do nothing if the geometry pack file is already in loading.\n    var pf = this.geommap[packId];\n    if (!pf || pf.loading) {\n        return true;\n    }\n\n    // Record the time on first on demand geometry pack file loading request\n    if (!this.t0) {\n        this.t0 = new Date().getTime();\n    }\n\n    var i;\n    var scope = this;\n\n    // Common handling when a worker is done with a pack file\n    function packFileWorkerComplete(worker, packId) {\n        worker.queued = 0;\n        scope.geommap[packId].loading = false;\n\n        pp.doOnDemandLoadFinished();\n    }\n\n    var onMeshLoad = function (ew) {\n        if (ew.data && ew.data.meshes) {\n\n            var meshes = ew.data.meshes;\n\n            var mdata = {\n                packId: ew.data.packId,\n                meshIndex: 0,\n                mesh:null\n            };\n\n            var geomSize = 0;\n            for (var i=0; i<meshes.length; i++) {\n                var mesh = meshes[i];\n\n                if (!mesh)\n                    continue;\n\n                mdata.meshIndex = i;\n                mdata.mesh = mesh;\n\n                scope.processReceivedMesh(mdata);\n                if (mdata.geometry) {\n                    geomSize += mdata.geometry.byteSize + avp.GEOMETRY_OVERHEAD;\n                    mdata.geometry = null;\n                }\n            }\n\n            pp.onPackFileLoaded(ew.data.packId, ew.data, geomSize / MEGA);\n            fireFragmentsLoadedEvent(scope, ew.data);\n\n            if (ew.data.progress >= 1.0) {\n                scope.loadedPacksCount++;\n                scope.viewer3DImpl.signalProgress(100 * scope.loadedPacksCount / scope.svf.geompacks.length, av.ProgressState.LOADING, scope.model);\n                packFileWorkerComplete(scope.pack_workers[ew.data.workerId], ew.data.packId);\n            }\n        } else if (ew.data && ew.data.progress) {\n            scope.pack_workers[ew.data.workerId].queued -= 1;\n            scope.viewer3DImpl.signalProgress(100 * scope.loadedPacksCount / scope.svf.geompacks.length);\n        } else if (ew.data && ew.data.debug) {\n            avp.logger.debug(ew.data.message);\n        } else if (ew.data && ew.data.error) {\n            pp.onPackFileLoaded(ew.target.packId, null, 0);\n            packFileWorkerComplete(ew.target, ew.target.packId);\n            ++scope.failedToLoadPacksCount;\n            scope.failedToLoadSomeGeometryPacks = {code:ew.data.error.code, msg:ew.data.error.msg};\n        } else {\n            //Download failed.\n            pp.onPackFileLoaded(ew.target.packId, null, 0);\n            packFileWorkerComplete(ew.target, ew.target.packId);\n        }\n    };\n\n    // Initialize pack workers if it is not ready yet.\n    if (!this.pack_workers) {\n        this.pack_workers = [];\n\n        var numWorkers = NUM_WORKER_THREADS;\n\n        for (i = 0; i < numWorkers; i++) {\n            var wr = this.createWorkerWithIntercept();\n            wr.addEventListenerWithIntercept(onMeshLoad);\n\n            wr.queued = 0;\n            this.pack_workers.push(wr);\n        }\n    }\n\n    //Find the least busy worker\n    var which = 0;\n    var queued = this.pack_workers[0].queued;\n    for (i = 1; i < this.pack_workers.length; i++) {\n        if (this.pack_workers[i].queued < queued) {\n            which = i;\n            queued = this.pack_workers[i].queued;\n        }\n    }\n\n    // If worker is busy queue this reqest for next try.\n    if (queued > 1 || pp.preparedPackFilesSize() >= pp.getMemoryLimit()) {\n\n        // All workers are busy, then queue it for next try.\n        if (!this.pagingProxy.addGeomPackMissingLastFrame(packId)) {\n            // If failed to add, it means that it is too many queued.\n            // then restart render.\n            this.viewer3DImpl.invalidate(false, true);\n            //avp.logger.debug(\"[On Demand Loading] Re-render on too many geom pack file requests.\");\n        }\n\n        return false;\n    }\n\n    var w, workerId;\n    var path = pf.uri;\n    w = this.pack_workers[which];\n    w.queued += 2;\n    w.packId = packId;\n    workerId = which;\n\n    pp.onPackFileLoading(packId);\n\n    pf.loading = true;\n    this.svf.partPacksLoadDone = false; // Still loading geometry pack files.\n\n    avp.logger.debug(\"[On Demand Loading] Loading Geometry Pack file: \" + packId);\n\n    //Pass unzip job to the worker\n    var reqPath = avp.pathToURL(this.svf.basePath + path);\n    var xfer = { \"operation\":WORKER_LOAD_GEOMETRY,\n                \"url\": reqPath,\n                \"packId\": packId, /* mesh IDs treat the pack file id as integer to save on storage in the per-fragment arrays */\n                \"workerId\": workerId,\n                \"packNormals\": this.options.packNormals,\n                \"createWireframe\" : this.options.createWireframe || \n                                    this.model.getMetadata('renderEnvironmentDisplayEdges', 'value', false),\n                \"skipAssetCallback\": true,\n                \"queryParams\" : this.queryParams,\n                \"inMemory\" : inMemory };\n\n    w.doOperation(av.initLoadContext(xfer)); // Send data to our worker.\n    return true;\n};\n\n\nSvfLoaderML.prototype.processReceivedMesh = function(mdata) {\n    // If we are not on demand loading, then just use the super class\n    if (!this.pagingProxy) {\n        SvfLoader.prototype.processReceivedMesh.call(this, mdata);\n        return;\n    }\n    // Gross and ugly - we need to preserve fragments.mesh2frag\n    var meshid = mdata.packId + \":\" + mdata.meshIndex;\n    var svf = this.svf;\n    var fragments = svf.fragments;\n    var fragIndexes = fragments.mesh2frag[meshid];\n\n    SvfLoader.prototype.processReceivedMesh.call(this, mdata);\n\n    // preserve the mesh2frag mapping\n    fragments.mesh2frag[meshid] = fragIndexes;\n\n    // We need to keep this to use when discarding geometry from memory\n    mdata.geometry.meshIndex = mdata.meshIndex;\n\n    // This is to record how many instances this geometry has,\n    // and the number of instances have been rendered in one frame.\n    this.pagingProxy.onProcessReceivedMesh(mdata.geometry, Array.isArray(fragIndexes) ? fragIndexes.length : 1);\n};\n\nSvfLoaderML.prototype.onModelRootLoadDone = function(svf) {\n\n    // Let's set the options through for each model that control how memory saving mode start,\n    // which decide how to load geometry pack files, and whether paging out if needed.\n    // And assume the performance tuning options passed through viewer's config.\n    var memoryOpts = this.memoryOpts;\n\n    var geommap = this.geommap = {};  // Map packids to geompacks objects\n    // Calculate the size of pack files and the geometry in them\n    var meshCount = Object.keys(svf.fragments.mesh2frag).length;\n    var fragCount = svf.fragments.length;\n    var overhead = (meshCount * MESH_OVERHEAD + fragCount * FRAG_OVERHEAD) / MEGA;\n    var totalGeomSize = 0;\n    svf.geompacks.forEach(function(pf) {\n        // If the geometry worker doesn't give us a geom size, then supply an estimate\n        if (!pf.hasOwnProperty(\"geomSize\"))\n            pf.geomSize = pf.usize * GEOM_PACK_SIZE_FACTOR;\n        pf.usize /= MEGA;\n        pf.geomSize /= MEGA;\n        totalGeomSize += pf.geomSize;\n        geommap[parseInt(pf.id)] = pf;\n    });\n    // On mobile devices the memory used by the GPU is take from system memory, so we need\n    // to include that memory in our estimate of the size of the model. This is also true\n    // for laptops and other systems that have an integrated GPU, but we only include it\n    // for mobile devices.\n    var gpuSize = av.isMobileDevice() ? (Math.min(totalGeomSize, avp.GPU_MEMORY_LIMIT / MEGA)) : 0;\n    totalGeomSize += overhead;\n\n    // The estimated total geom size is the size of the geometry plus\n    // the amount of memory needed to hold the uncompressed pack files in workers\n    memoryOpts.totalGeomSize = totalGeomSize;\n    memoryOpts.overheadSize = overhead;\n\n    // On demand loading will be controlled by two factors.\n    // 1. A global switch that enable/disable this behavior.\n    // 2. The size of the model.\n    if (memoryOpts.onDemandLoading) {\n        if (totalGeomSize + gpuSize < memoryOpts.limit && !memoryOpts.debug.force)\n            memoryOpts.onDemandLoading = false;\n        else {\n            this.pagingProxy = new SvfPagingProxy(this, memoryOpts);\n          }\n    }\n\n    //For 3D models, we can start loading the property database as soon\n    //as we know the fragment list which contains the fragId->dbId map.\n    //We would not load property db when we are on mobile device AND on demand loading is on (which\n    //implies the model is not 'normal' in terms of its size.). This is only a temp solution that\n    //allow big models loads on mobile without crash. Without property db loading selection could break.\n    if (this.options.skipPropertyDb === undefined) {\n        this.options.skipPropertyDb = this.pagingProxy && av.isMobileDevice();\n    }\n\n    // Call the super class\n    SvfLoader.prototype.onModelRootLoadDone.call(this, svf);\n\n    // Create flat instance tree, if we are skipping the property db.\n    if (this.options.skipPropertyDb) {\n        // Not loading the property database, supply a flat dbid tree for the instance tree\n        this.svf.instanceTree = DbidFragmentMap.buildInstanceTree(this.svf.fragments.fragId2dbId,\n            this.model.getFragmentList());\n    }\n\n    // Start the load order worker\n    var scope = this;\n    function onLoaded(ew) {\n        if (!scope.isValid() || !scope.pagingProxy)\n            return;\n\n        scope.pagingProxy.onLoadOrderCalculated(ew.data);\n    }\n\n    // If this is an svf file, then start the worker that calculates the load order\n    if  (this.pagingProxy && svf.fragments.boxes && svf.fragments.packIds) {\n        // Create the worker and send the boxes and packids to it.\n        this.svfLoadOrderWorker = createWorkerML();\n        this.svfLoadOrderWorker.addEventListener('message', onLoaded, false);\n        this.svfLoadOrderWorker.doOperation(\n            { operation: WORKER_CALCULATE_LOAD_ORDER,\n            fragments: { boxes: svf.fragments.boxes, packIds : svf.fragments.packIds }\n            });\n        this.model.setUUID(svf.urn);\n    }\n};\n\n\nSvfLoaderML.prototype.calculateLoadOrder = function(id, camera, pixelCullingThreshold) {\n    if (!this.svfLoadOrderWorker)\n        return false;\n\n    var cvtcam = {\n        projectionMatrix: { elements: camera.projectionMatrix.elements },\n        matrixWorldInverse: { elements: camera.matrixWorldInverse.elements },\n        aspect: camera.aspect,\n        position: { x: camera.position.x, y: camera.position.y, z: camera.position.z },\n        clientWidth: camera.clientWidth,\n        clientHeight: camera.clientHeight\n    };\n    var msg = {\n        operation: WORKER_CALCULATE_LOAD_ORDER,\n        id: id,\n        camera : cvtcam,\n        pixelCullingThreshold: pixelCullingThreshold\n    };\n    this.svfLoadOrderWorker.doOperation(msg);\n    return true;\n};\n\nSvfLoaderML.prototype.onGeomLoadDone = function() {\n    // If we aren't using on demand loading, then use the super class\n    if (!this.pagingProxy) {\n        SvfLoader.prototype.onGeomLoadDone.call(this);\n        return;\n    }\n\n    // Only check to load textures once.\n    if (!this.svf.loadDone) {\n        if (av.isMobileDevice()) {\n            // If we are on a mobile device, then we will check the memory used\n            // to see if we think there may be enough to load textures.\n\n            // Get the memory limit from the renderScene, which can hold multiple models. If\n            // we don't have a renderScene to use, just use the model to get the memory limit.\n            var info = this.pagingProxy.getMemoryInfo();\n\n            // If we can't get the info, then don't load the textures.\n            if (info) {\n                // If the effectiveLimit is larger than the limit, then the model has\n                // so many fragments, that we don't think we can restrict memory to\n                // the requested limit. This means memory should be really tight and\n                // we won't load the textures. If the loaded memory size if too close\n                // to the limit, then don't load the texture.\n                if (info.effectiveLimit <= info.limit && info.limit - info.loaded > MOBILE_TEXTURE_LIMIT) {\n                    // Listen for the textures loaded event\n                    var callback = function(e) {\n                        this.viewer3DImpl.api.removeEventListener(av.TEXTURES_LOADED_EVENT, callback);\n                        // Calculate the size of textures used by this model\n                        var size = 0;\n                        this.viewer3DImpl.matman().enumTextures(this.model, function(tex) {\n                            if (tex) {\n                                size += avp.TextureLoader.calculateTextureSize(tex);\n                            }\n                        });\n                        // Adjust the limit in the SvfPagingProxy.\n                        size /= MEGA;\n                        this.pagingProxy.options.limit -= size;\n                    }.bind(this);\n                    // When all of the textures are loaded, adjust the memory limit\n                    this.viewer3DImpl.api.addEventListener(av.TEXTURES_LOADED_EVENT, callback);\n                    // Load the textures\n                    avp.TextureLoader.loadModelTextures(this.model, this.viewer3DImpl);\n                }\n            }\n        } else {\n            // If we aren't on a mobile device, then load the textures.\n            avp.TextureLoader.loadModelTextures(this.model, this.viewer3DImpl);\n        }\n    }\n\n    var wasDone = this.svf.loadDone;\n    this.svf.loadDone = true;\n\n    // Time for loading part of the on-demanded geometries.\n    var t1 = Date.now();\n    var msg = \"[On Demand Loading] On demand requested geometries load time: \" + (t1 - this.t0);\n\n    avp.logger.log(msg);\n\n    // Track the on demand geom load stats.\n    var modelStats = {\n        category: \"on_demand_geom_load_stats\",\n        is_f2d: false,\n        has_prism: this.viewer3DImpl.matman().hasPrism,\n        load_time: (t1 - this.t0),\n        geometry_size: this.model.getGeometryList().geomMemory,\n        meshes_count: this.model.getGeometryList().geoms.length,\n        fragments_count: this.model.getFragmentList().getCount(),\n        load_pack_count: this.loadedPacksCount,\n        urn: this.svfUrn\n    };\n    avp.logger.track(modelStats);\n\n    // clear the start time, which can be set again if on demand loading geometry again.\n    this.t0 = null;\n\n    this.loadedPacksCount = 0;\n    this.svf.partPacksLoadDone = true;\n\n    if (wasDone) {\n        this.viewer3DImpl.signalProgress(100, av.ProgressState.LOADING, this.model);\n    } else {\n        this.viewer3DImpl.onLoadComplete(this.model);\n    }\n\n    var geomList = this.model.getGeometryList();\n    if (geomList) {\n        geomList.printStats();\n    }\n};\n","var pako = require(\"pako\");\n\n\"use strict\";\n\n\n/** @constructor */\n// This class will read value from compressed data,\n// decopress only necessary data and throw away unused.\nexport function InputStreamML(buf, usize) {\n\n    // Offset is the offset to decompressed data.\n    // byteLength is the total size of decompressed data.\n    this.offset = 0;\n    this.byteLength = usize;\n    this.range = 0;\n    // Assume the buffer is compressed.\n    this.compressedBuffer = buf;\n    this.compressedByteLength = buf.length;\n    this.compressedOffset = 0;\n    this.decompressEnd = false;\n    // This is to record how many times decompress from scratch. for debug purpose.\n    this.resetCount = 0;\n\n    //We will use these shared memory arrays to\n    //convert from bytes to the desired data type.\n    this.convBuf = new ArrayBuffer(8);\n    this.convUint8 = new Uint8Array(this.convBuf);\n    this.convUint16 = new Uint16Array(this.convBuf);\n    this.convInt32 = new Int32Array(this.convBuf);\n    this.convUint32 = new Uint32Array(this.convBuf);\n    this.convFloat32 = new Float32Array(this.convBuf);\n    this.convFloat64 = new Float64Array(this.convBuf);\n\n    // Compressed chunk size is the size for decompressing each time.\n    // Decompressed chunk size is the buffer to hold decompressed data.\n    this.COMPRESSED_chunk_SIZE = 512*1024;\n    this.DECOMPRESSED_chunk_SIZE = 256*1024;\n\n    // chunks for decompressed data.\n    this.chunks = [];\n    this.chunksByteLengthMax = 0;\n    this.chunksByteLengthMin = 0;\n\n    // Maintain chunk and chunk offset for reading current data.\n    this.chunkPointer = null;\n    this.chunkOffset = 0;\n    // temp chunk is for reading data that stride over multiple chunks.\n    this.tempchunk = {\n        startIdx: 0,\n        endIdx: 0,\n        buffer: null\n    };\n\n    // Infalte for decompressing incremantally. The lib we used is pako_inflate.min.js\n    this.inflate = this.getInflate();\n\n    // Prepare first 1K data for quick access.\n    this.prepare(0, 1024);\n}\n\nInputStreamML.prototype.getInflate = function() {\n    if (!this.inflate) {\n        this.inflate = new pako.Inflate({ level: 3, chunkSize: this.DECOMPRESSED_chunk_SIZE});\n\n        var self = this;\n        this.inflate.onData = function(chunk) {\n\n            // Remove unused chunk for current decompressing.\n            self.chunksByteLengthMax += chunk.byteLength;\n            if (self.chunksByteLengthMax < self.offset) {\n                chunk = null;\n                self.chunksByteLengthMin = self.chunksByteLengthMax;\n            }\n\n            self.chunks.push(chunk);\n        };\n\n        this.inflate.onEnd = function() {\n            self.decompressEnd = true;\n            self.inflate = null;\n            // Check decompressed size is expected.\n            if (self.chunksByteLengthMax != self.byteLength)\n                throw \"Decompress error, unexpected size.\";\n        };\n    }\n\n    return this.inflate;\n}\n\nInputStreamML.prototype.prepare = function(off, range, donotclear) {\n    // If required data hasn't decompressed yet, let's do it.\n    if (this.chunksByteLengthMin > off) {\n        // In this case, need to reset stream and decompress from scratch again.\n        this.reset();\n        this.offset = off;\n        this.range = range;\n    }\n\n    // Remove unused chunks if no longer used for subsequent reading.\n    if (!donotclear) {\n        var idx = Math.floor(off / this.DECOMPRESSED_chunk_SIZE);\n        var startIdx = Math.floor(this.chunksByteLengthMin / this.DECOMPRESSED_chunk_SIZE);\n        var endIdx = this.chunks.length < idx ? this.chunks.length : idx;\n        for (var i = startIdx; i<endIdx; i++) {\n            this.chunks[i] = null;\n        }\n        this.chunksByteLengthMin = endIdx * this.DECOMPRESSED_chunk_SIZE;\n    }\n\n    // Prepare further decompressed data.\n    var range = range || 1;\n    var expectEnd = off + range;\n    expectEnd = expectEnd > this.byteLength ? this.byteLength : expectEnd;\n    var reachEnd = false;\n    while (expectEnd > this.chunksByteLengthMax)\n    {\n        var len = this.COMPRESSED_chunk_SIZE;\n        if (this.compressedOffset + len >= this.compressedByteLength) {\n            len = this.compressedByteLength - this.compressedOffset;\n            reachEnd = true;\n        }\n\n        // Push another compressed data chunk to decompress.\n        var data = new Uint8Array(this.compressedBuffer.buffer, this.compressedOffset, len);\n        this.getInflate().push(data, reachEnd);\n\n        // Move offset forward as decompress processing.\n        this.compressedOffset += len;\n\n        if (reachEnd) {\n            break;\n        }\n    }\n\n}\n\nInputStreamML.prototype.ensurechunkData = function(len) {\n    // ensure the data is ready for immediate reading.\n    len = len || 1;\n    var chunkLen = this.chunks.length;\n\n    var chunkIdx = Math.floor(this.offset / this.DECOMPRESSED_chunk_SIZE);\n    var endIdx = Math.floor((this.offset + len - 1) / this.DECOMPRESSED_chunk_SIZE);\n    if (endIdx >= chunkLen) {\n        var length = (endIdx - chunkLen + 1) * this.DECOMPRESSED_chunk_SIZE;\n        // When do another prepare in the middle of ensuring data,\n        // do not clear any chunk yet, as it may be still in use.\n        this.prepare(this.DECOMPRESSED_chunk_SIZE*chunkLen, length, true);\n    }\n\n    if (chunkIdx < endIdx) {\n        if (this.tempchunk.startIdx>chunkIdx || this.tempchunk.endIdx<endIdx) {\n            var size = (endIdx-chunkIdx+1) * this.DECOMPRESSED_chunk_SIZE;\n            this.tempchunk.buffer = new Uint8Array(size);\n            var pos = 0;\n            for (var i=chunkIdx; i<=endIdx; i++) {\n                this.tempchunk.buffer.set(this.chunks[i], pos);\n                pos += this.DECOMPRESSED_chunk_SIZE;\n            }\n            this.tempchunk.startIdx = chunkIdx;\n            this.tempchunk.endIdx = endIdx;\n        }\n        this.chunkPointer = this.tempchunk.buffer;\n    }\n    else {\n        this.chunkPointer = this.chunks[chunkIdx];\n    }\n\n    this.chunkOffset = this.offset - chunkIdx * this.DECOMPRESSED_chunk_SIZE;\n    this.offset += len;\n}\n\nInputStreamML.prototype.seek = function(off, range, donotclear) {\n    this.offset = off;\n    this.range = range;\n    this.prepare(off, range, donotclear);\n};\n\nInputStreamML.prototype.getBytes = function(len) {\n    this.ensurechunkData(len);\n    var ret = new Uint8Array(this.chunkPointer.buffer, this.chunkOffset, len);\n\n    return ret;\n};\n\nInputStreamML.prototype.getVarints = function () {\n    var b;\n    var value = 0;\n    var shiftBy = 0;\n    do {\n        this.ensurechunkData();\n        b = this.chunkPointer[this.chunkOffset];\n        value |= (b & 0x7f) << shiftBy;\n        shiftBy += 7;\n    } while (b & 0x80);\n    return value;\n}\n\nInputStreamML.prototype.getUint8 = function() {\n    this.ensurechunkData();\n    return this.chunkPointer[this.chunkOffset];\n};\n\nInputStreamML.prototype.getUint16 = function() {\n\n    this.ensurechunkData();\n    this.convUint8[0] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    this.convUint8[1] = this.chunkPointer[this.chunkOffset];\n    return this.convUint16[0];\n};\n\nInputStreamML.prototype.getInt16 = function() {\n    var tmp = this.getUint16();\n    //make negative integer if the ushort is negative\n    if (tmp > 0x7fff)\n        tmp = tmp | 0xffff0000;\n    return tmp;\n};\n\nInputStreamML.prototype.getInt32 = function() {\n\n    var dst = this.convUint8;\n\n    this.ensurechunkData();\n    dst[0] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[1] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[2] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[3] = this.chunkPointer[this.chunkOffset];\n\n    return this.convInt32[0];\n};\n\nInputStreamML.prototype.getUint32 = function() {\n\n    var dst = this.convUint8;\n\n    this.ensurechunkData();\n    dst[0] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[1] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[2] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[3] = this.chunkPointer[this.chunkOffset];\n\n    return this.convUint32[0];\n};\n\nInputStreamML.prototype.getFloat32 = function() {\n\n    var dst = this.convUint8;\n\n    this.ensurechunkData();\n    dst[0] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[1] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[2] = this.chunkPointer[this.chunkOffset];\n    this.ensurechunkData();\n    dst[3] = this.chunkPointer[this.chunkOffset];\n\n    return this.convFloat32[0];\n};\n\nInputStreamML.prototype.getFloat64 = function() {\n\n    var dst = this.convUint8;\n    for (var i=0; i<8; i++) {\n        this.ensurechunkData();\n        dst[i] = this.chunkPointer[this.chunkOffset];\n    }\n\n    return this.convFloat64[0];\n};\n\nInputStreamML.prototype.getString = function(len) {\n    var dst = \"\";\n    this.ensurechunkData(len);\n    var src = this.chunkPointer;\n\n    for (var i = this.chunkOffset, iEnd = this.chunkOffset + len; i < iEnd; i++) {\n        dst += String.fromCharCode(src[i]);\n    }\n\n    var res;\n    try {\n        res = decodeURIComponent(escape(dst));\n    } catch (e) {\n        res = dst;\n        debug(\"Failed to decode string \" + res);\n    }\n\n    return res;\n};\n\nInputStreamML.prototype.reset = function (buf) {\n    this.resetCount++;\n    debug(\"InputStream Less Reset: \" + this.resetCount);\n\n    if (buf) {\n        this.compressedBuffer = buf;\n        this.compressedByteLength = buf.length;\n    }\n\n    this.offset = 0;\n    this.chunks = [];\n    this.chunksByteLengthMax = 0;\n    this.chunksByteLengthMin = 0;\n    this.compressedOffset = 0;\n    this.decompressEnd = false;\n    this.chunkPointer = null;\n    this.chunkOffset = 0;\n    this.inflate = null;\n\n    this.tempchunk.startIdx = 0;\n    this.tempchunk.endIdx = 0;\n    this.tempchunk.buffer = null;\n};\n","\"use strict\";\n\nimport { SvfLoaderML } from \"./file-loaders/main/SvfLoaderML\";\nimport { SvfPagingProxy } from \"./file-loaders/main/SvfPagingProxy\";\nimport { InputStreamML } from \"./file-loaders/lmvtk/common/InputStreamML\";\n\nimport CSS from './MemoryLimited.css'; // IMPORTANT!!\n\nvar av = Autodesk.Viewing;\nvar avp = Autodesk.Viewing.Private;\n\n/**\n * Adds limited memory support for SVF files\n * \n * The extension id is: `Autodesk.MemoryLimited`\n * \n * @example\n *   viewer.loadExtension('Autodesk.MemoryLimited')\n * \n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.MemoryLimited.MemoryLimitedExtension\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n * @constructor\n */\nfunction MemoryLimitedExtension(viewer, options) {\n    av.Extension.call(this, viewer, options);\n    this.name ='memory-limited';\n    this._registerOriginal = false;\n};\n\nMemoryLimitedExtension.prototype = Object.create(av.Extension.prototype);\nMemoryLimitedExtension.prototype.constructor = MemoryLimitedExtension;\n\n/**\n * Registers the hyperlink tool that will intercept pointer events to provide\n * hyperlinks next to specific nodes in the model.\n * \n * @alias Autodesk.Viewing.Extensions.MemoryLimited.MemoryLimitedExtension.#load\n */\nMemoryLimitedExtension.prototype.load = function() {\n    this.updateProgressBarStyle = (event) => {\n        if (event.model && event.model.loader && event.model.loader.pagingProxy)\n            this.viewer.progressbar && this.viewer.progressbar.setStyle(\"memory-limited-progressbar-loading\");\n    }\n    this._registerOriginal = av.FileLoaderManager.unregisterFileLoader(\"svf\");\n    av.FileLoaderManager.registerFileLoader(\"memsvf\", [\"svf\"], SvfLoaderML);\n    if (this._registerOriginal) {\n        av.FileLoaderManager.registerFileLoader(\"svf\", [\"gltf\", \"glb\"], avp.SvfLoader);\n    }\n    this.viewer.addEventListener(av.MODEL_ROOT_LOADED_EVENT, this.updateProgressBarStyle);\n    return true;\n};\n\n/**\n * Unregisters the hyperlink tool.\n * \n * @alias Autodesk.Viewing.Extensions.MemoryLimited.MemoryLimitedExtension.#unload\n */\nMemoryLimitedExtension.prototype.unload = function() {\n    av.FileLoaderManager.unregisterFileLoader(\"memsvf\");\n    av.FileLoaderManager.unregisterFileLoader(\"svf\");\n    if (this._registerOriginal)\n        av.FileLoaderManager.registerFileLoader(\"svf\", [\"svf\", \"gltf\", \"glb\"], avp.SvfLoader);\n    this._registerOriginal = false;\n    this.viewer.removeEventListener(av.MODEL_ROOT_LOADED_EVENT, this.updateProgressBarStyle);\n    this.viewer.progressbar && this.viewer.progressbar.removeStyle(\"memory-limited-progressbar-loading\");\n    return true;\n};\n\nMemoryLimitedExtension.prototype.activate = function () {\n    return false;\n};\n\nMemoryLimitedExtension.prototype.deactivate = function () {\n    return false;\n};\n\nMemoryLimitedExtension.prototype.isActive = function() {\n    return false;\n};\n\n/**\n * @typedef MemoryStatistics\n * @property {Number} limit The memory limit that was requested, in megabytes.\n * @property {Number} effectiveLimit The memory limit that is enforced, in megabytes.\n *  This may be larger than limit when LMV decides that limit is not large enough\n *  to load the model.\n * @property {Number} loaded The amount of memory that is currently in use, in megabytes.\n */\n\n/**\n * Get memory statistics for memory limited mode\n * @return {MemoryStatistics|null} The memory statistics or null when there aren't any\n *  models loaded with memory limits.\n */\nMemoryLimitedExtension.prototype.getMemoryInfo = function() {\n    const q = this.viewer.impl.modelQueue();\n\n    var lastMem;\n    var returnValue = {\n        limit: 0,\n        effectiveLimit: 0,\n        loaded: 0\n    };\n\n    function addStats(models) {\n        for (var i = 0; i < models.length; ++i) {\n            var model = models[i];\n            if (model.loader && model.loader.pagingProxy) {\n                lastMem = model.loader.pagingProxy.getMemoryInfo();\n                returnValue.limit += lastMem.limit;\n                returnValue.effectiveLimit += lastMem.effectiveLimit;\n                returnValue.loaded += lastMem.loaded;\n            }\n        }\n    }\n\n    addStats(q.getModels());\n    addStats(q.getHiddenModels());\n    return lastMem ? returnValue : null;\n};\n\nconst ave = AutodeskNamespace(\"Autodesk.Viewing.Extension.MemoryLimited\");\nave.MemoryLimitedExtension = MemoryLimitedExtension;\nave.SvfLoaderML = SvfLoaderML;\nave.SvfPagingProxy = SvfPagingProxy;\nave.InputStreamML = InputStreamML;\n\nav.theExtensionManager.registerExtension('Autodesk.MemoryLimited', MemoryLimitedExtension);\n\nexport {\n    MemoryLimitedExtension,\n    SvfLoaderML,\n    SvfPagingProxy,\n    InputStreamML\n};\n","const SvfWorkerML = require('worker-loader?inline!../workers/MainWorker-webML');\n\nfunction initWorkerScriptML(callback) {\n    callback();\n    return undefined;\n}\n\nfunction createWorkerML() {\n    let w = new SvfWorkerML();\n    w.doOperation = w.postMessage;\n    return w;\n}\n\nfunction createWorkerWithInterceptML() {\n    const worker = createWorkerML();\n\n    worker.checkEvent = function(e) {\n        if (e.data && e.data.assetRequest) {\n            return true;\n        }\n        return false;\n    };\n\n    let interceptListeners = [];\n    function popCallback(listener) {\n        if (!interceptListeners) return null;\n        for (let i=0; i<interceptListeners.length; ++i) {\n            if (interceptListeners[i].arg === listener) {\n                let ret = interceptListeners[i].callback;\n                interceptListeners.splice(i, 1);\n                if (interceptListeners.length === 0)\n                    interceptListeners = null;\n                return ret;\n            }\n        }\n        return null;\n    }\n\n    worker.addEventListenerWithIntercept = function (listener) {\n\n        let callbackFn = function(ew) {\n            if (worker.checkEvent(ew))\n                return;\n\n            listener(ew);\n        };\n\n        if (!interceptListeners) interceptListeners = [];\n        interceptListeners.push({ arg: listener, callback: callbackFn });\n        worker.addEventListener('message', callbackFn, false);\n        return callbackFn;\n    };\n\n    worker.removeEventListenerWithIntercept = function(listener) {\n        let callbackFn = popCallback(listener);\n        if (callbackFn) {\n            worker.removeEventListener('message', callbackFn, false);\n        }\n    };\n\n    worker.clearAllEventListenerWithIntercept = function() {\n        if (!interceptListeners) return;\n        let copy = interceptListeners.concat();\n        for (let i=0; i<copy.length; ++i) {\n            worker.removeEventListenerWithIntercept(copy[i].arg);\n        }\n    };\n\n    return worker;\n}\n\nmodule.exports = {\n    createWorkerML: createWorkerML,\n    initWorkerScriptML: initWorkerScriptML,\n    createWorkerWithInterceptML: createWorkerWithInterceptML\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n"],"sourceRoot":""}